{
	"info": {
		"_postman_id": "9a2ef6cd-e191-48c2-a3d7-a8413696d10b",
		"name": "Nylas API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "869033-9a2ef6cd-e191-48c2-a3d7-a8413696d10b"
	},
	"item": [
		{
			"name": "Authentication (Hosted)",
			"item": [
				{
					"name": "/oauth/authorize",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body has code\"] = responseBody.has(\"code\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"code\", jsonData.code);"
								],
								"type": "text/javascript",
								"id": "bc3415d3-6c31-4e6e-8344-3773774a4145"
							}
						}
					],
					"id": "7c73b37b-47a3-4d10-be82-f28ffaa35ef4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/oauth/authorize?client_id={{client_id}}&response_type=code&scopes=email&login_hint=test@gmail.com&redirect_uri=http://localhost:4567&state=",
							"host": [
								"{{url}}"
							],
							"path": [
								"oauth",
								"authorize"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"description": "The client_id of your Nylas developer application"
								},
								{
									"key": "response_type",
									"value": "code",
									"description": "`code` or `token` depending on if client side or server side"
								},
								{
									"key": "scopes",
									"value": "email"
								},
								{
									"key": "login_hint",
									"value": "test@gmail.com"
								},
								{
									"key": "redirect_uri",
									"value": "http://localhost:4567"
								},
								{
									"key": "state",
									"value": "",
									"description": "optional"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/oauth/token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body has access token\"] = responseBody.has(\"access_token\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);"
								],
								"type": "text/javascript",
								"id": "8101a38f-5d14-47a3-b265-1c7dacdcf788"
							}
						}
					],
					"id": "14cd36da-ef3c-4b6d-8e27-ecfd2a941fcc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/oauth/token?client_id={{client_id}}&client_secret={{client_secret}}&grant_type=authorization_code&code={{code}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"oauth",
								"token"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{client_id}}"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}"
								},
								{
									"key": "grant_type",
									"value": "authorization_code"
								},
								{
									"key": "code",
									"value": "{{code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/oauth/revoke",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "605e7feb-3e5e-4cdf-b35d-4cbe38fa28a5"
							}
						}
					],
					"id": "51139c7f-9231-4272-aa7a-e805ad5f98c4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user",
									"value": "{{access_token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/oauth/revoke",
							"host": [
								"{{url}}"
							],
							"path": [
								"oauth",
								"revoke"
							]
						}
					},
					"response": []
				}
			],
			"id": "a3b7ed1f-5c3c-4f08-9e78-e24f35e87415"
		},
		{
			"name": "Authentication (Native)",
			"item": [
				{
					"name": "/connect/authorize exchange",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body has code\"] = responseBody.has(\"code\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"code\", jsonData.code);"
								],
								"id": "8611084f-2480-4692-9c56-6443762a0e10"
							}
						}
					],
					"id": "67d41bb3-9b00-4121-8d85-6a68339b95d5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"{{client_id}}\",\n    \"name\": \"{{name}}\",\n    \"email_address\": \"{{exchange_email}}\",\n    \"provider\": \"exchange\",\n    \"settings\": {\n        \"username\": \"{{exchange_email}}\",\n        \"password\": \"{{exchange_password}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/connect/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "/connect/authorize yahoo",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body has code\"] = responseBody.has(\"code\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"code\", jsonData.code);"
								],
								"id": "ff38f002-5029-4244-bf00-0879ed806fef"
							}
						}
					],
					"id": "94c423bc-d6a4-4a2d-a4d0-31656f948929",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"{{client_id}}\",\n    \"name\": \"{{name}}\",\n    \"email_address\": \"{{yahoo_email}}\",\n    \"provider\": \"yahoo\",\n    \"settings\": {\n        \"password\": \"{{yahoo_password}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/connect/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "/connect/authorize gmail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body has code\"] = responseBody.has(\"code\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"code\", jsonData.code);"
								],
								"type": "text/javascript",
								"id": "01bd226a-d7a9-48f2-9555-d595e3b6b60e"
							}
						}
					],
					"id": "4b31dbaf-082c-451a-a051-5aa31f7696b7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"{{client_id}}\",\n    \"name\": \"{{name}}\",\n    \"email_address\": \"{{google_email}}\",\n    \"provider\": \"gmail\",\n    \"settings\": {\n        \"google_refresh_token\": \"{{google_refresh_token}}\",\n        \"google_client_id\": \"{{google_client_id}}\",\n        \"google_client_secret\": \"{{google_client_secret}}\"\n    },\n    \"scopes\": \"email, calendar, contacts\"\n}"
						},
						"url": {
							"raw": "{{url}}/connect/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "/connect/authorize gmail service account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body has code\"] = responseBody.has(\"code\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"code\", jsonData.code);"
								],
								"type": "text/javascript",
								"id": "2f7496af-c8de-4768-96cd-837ac658e104"
							}
						}
					],
					"id": "8f823f45-fe89-4d38-94ed-4203f331e442",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"{{client_id}}\",\n    \"name\": \"{{name}}\",\n    \"email_address\": \"nylas1@nylastestgsuite.com\",\n    \"provider\": \"gmail\",\n    \"settings\": {\n\t\t\"service_account_json\": {{service_account_json}}\n    },\n    \"scopes\": \"calendar\"\n}"
						},
						"url": {
							"raw": "{{url}}/connect/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "/connect/authorize imap",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body has code\"] = responseBody.has(\"code\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"code\", jsonData.code);"
								],
								"type": "text/javascript",
								"id": "aee53ea7-7afd-4091-aa02-855312908790"
							}
						}
					],
					"id": "a7b5b927-82a3-4db7-824b-c7f73b60e15b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\":     \"{{client_id}}\",\n    \"name\":          \"Sarah Nylanaut\",\n    \"email_address\": \"{{imap_email}}\",\n    \"provider\":      \"imap\",\n    \"settings\":      {\n        \"imap_host\":     \"{{imap_host}}\",\n        \"imap_port\":     {{imap_port}},\n        \"imap_username\": \"{{imap_email}}\",\n        \"smtp_username\": \"{{smtp_email}}\",\n        \"imap_password\": \"{{imap_password}}\",\n        \"smtp_host\":     \"{{smtp_host}}\",\n        \"smtp_port\":     {{smtp_port}},\n        \"smtp_password\": \"{{smtp_password}}\"\n        }\n}"
						},
						"url": {
							"raw": "{{url}}/connect/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "/connect/token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body matches string\"] = responseBody.has(\"access_token\");",
									"",
									"postman.setEnvironmentVariable(\"access_token\", JSON.parse(responseBody).access_token);"
								],
								"type": "text/javascript",
								"id": "32bd2d1e-4d0b-4304-82d9-9b75c3537716"
							}
						}
					],
					"id": "45296ba5-dd2c-4682-9e46-f2e059df5be3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"{{client_id}}\",\n    \"client_secret\": \"{{client_secret}}\",\n    \"code\": \"{{code}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/connect/token",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Calendars",
					"id": "579c8e2d-fd9c-4c76-b294-44bf8fb93403",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n    \"client_id\": \"{{client_id}}\",\n    \"provider\": \"nylas\",\n    \"scopes\": \"{{scopes}}\", \n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"settings\": {}\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/connect/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"authorize"
							]
						}
					},
					"response": []
				}
			],
			"id": "d27f0a7e-eb3a-44ff-8467-1c947cb6f9d2",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "9adb1be4-1e5f-4a5f-bbb0-dab0e0d97a0e"
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "c2b6251a-8029-41f1-b57d-e2ca490f85ee"
					}
				}
			]
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "/account",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body has account id\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"account_id\", jsonData.account_id);",
									""
								],
								"id": "99d15626-afd3-415b-a85d-1cbda06dbec4"
							}
						}
					],
					"id": "f6a9a2aa-7780-4064-96de-0793ac13a568",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/account",
							"host": [
								"{{url}}"
							],
							"path": [
								"account"
							]
						}
					},
					"response": []
				}
			],
			"id": "40482d03-337b-4de1-80b2-c5217ef694cc"
		},
		{
			"name": "Account Management",
			"item": [
				{
					"name": "/downgrade account",
					"id": "4d501df4-578a-4dfb-a099-412b6783d127",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}/accounts/{{account_id}}/downgrade",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"accounts",
								"{{account_id}}",
								"downgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "/upgrade account",
					"id": "91015d65-f354-494c-b9f6-7c80ee4e8ca7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}/accounts/{{account_id}}/upgrade",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"accounts",
								"{{account_id}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "/revoke-all tokens",
					"id": "888d0be6-54ea-4b84-b06c-efb428727415",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"keep_access_token\": \"My Access Token\"\n}"
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}/accounts/{{account_id}}/revoke-all",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"accounts",
								"{{account_id}}",
								"revoke-all"
							]
						}
					},
					"response": []
				},
				{
					"name": "/accounts ",
					"id": "5410755e-31b0-4f5f-9c14-754df2633f89",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/a/{{client_id}}/accounts/?offset=0&limit=10",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"accounts",
								""
							],
							"query": [
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "metadata_key",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_pair",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_value",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_search",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/accounts/:id",
					"id": "dcca15b2-8651-4c8d-8900-d68abaf1dca0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/a/{{client_id}}/accounts/{{account_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"accounts",
								"{{account_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/ip_addresses",
					"id": "7ec51999-02d5-4e25-995b-f0529b98f44b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/a/{{client_id}}/ip_addresses",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"ip_addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "/accounts/{id}/token-info",
					"id": "b9f96586-5b96-4997-8fb7-33e3012c4c0a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"access_token\": \"{{access_token}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}/accounts/{{account_id}}/token-info",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"accounts",
								"{{account_id}}",
								"token-info"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Application Details",
					"id": "cb370fdc-6e25-487c-a6cf-76f5d0647e4e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Application Details",
					"id": "5cc41007-0b1c-4585-b02f-2fe4534d77ca",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"application_name\": \"My New App Name\",\n    \"redirect_uris\": [\n\t    \"http://localhost:5555/login_callback\",\n\t    \"localhost\",\n\t    \"chrome://deeplink\"\n\t]\n}"
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an Account",
					"id": "234f37ef-9633-4f36-9084-720a9b051bed",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/a/{{client_id}}/accounts/{{delete_account_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"accounts",
								"{{delete_account_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Account Metadata",
					"id": "62bdab64-949a-45ac-9801-2cc9ffc84d8d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"metadata\":{\n        \"hello\": \"goodbye\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}/accounts/{{account_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"accounts",
								"{{account_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Account Icon and Redirect URL",
					"id": "833d0c36-2970-4e84-9d1c-0ad8fa254edb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/a/{{client_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Account Icon and Redirect URL",
					"id": "f8f36338-b18b-49b8-8746-30c89473fc6a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"application_name\": \"Alpha\",\n    \"icon_url\": \"\",\n    \"redirect_uris\": [\n        \"http://localhost:3000/oauth/callback\",\n        \"http://localhost:4567\",\n        \"http://localhost:1234\"\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "b65ba322-4cff-4f69-85a4-c6400be584c7",
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "username",
						"value": "{{client_secret}}",
						"type": "string"
					},
					{
						"key": "password",
						"value": "",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "c35db22f-c8c1-4430-a84c-528c028a1b35"
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "413754c8-1a59-4d16-b8a1-b64d0f5314f6"
					}
				}
			]
		},
		{
			"name": "Threads",
			"item": [
				{
					"name": "/threads",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"// postman.setEnvironmentVariable(\"thread_id\", jsonData[0].id);"
								],
								"type": "text/javascript",
								"id": "ab596efa-3057-430c-bb62-33819f473426"
							}
						}
					],
					"id": "63d0e8f3-ba71-40c6-9c43-b9fcdd6e3534",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/threads",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads"
							],
							"query": [
								{
									"key": "offset",
									"value": "10",
									"disabled": true
								},
								{
									"key": "any_email",
									"value": "",
									"description": "Comma separated list of emails",
									"disabled": true
								},
								{
									"key": "to",
									"value": "",
									"disabled": true
								},
								{
									"key": "from",
									"value": "",
									"disabled": true
								},
								{
									"key": "cc",
									"value": "",
									"disabled": true
								},
								{
									"key": "bcc",
									"value": "",
									"disabled": true
								},
								{
									"key": "in",
									"value": "",
									"description": "Return threads in a given folder, or with a given label. This parameter supports the name, display_name, or id of a folder or label. Note: If you'd like to get all drafts use the /drafts endpoint.",
									"disabled": true
								},
								{
									"key": "unread",
									"value": "",
									"description": "Return threads with one or more unread messages",
									"disabled": true
								},
								{
									"key": "starred",
									"value": "",
									"description": "Return threads with one or more starred messages",
									"disabled": true
								},
								{
									"key": "filename",
									"value": "",
									"description": "Return threads that contain attachments with the given filename\n\n",
									"disabled": true
								},
								{
									"key": "last_message_before",
									"value": "",
									"description": "unix timestamp integer",
									"disabled": true
								},
								{
									"key": "last_message_after",
									"value": "",
									"description": "unix timestamp integer",
									"disabled": true
								},
								{
									"key": "started_before",
									"value": "",
									"description": "unix timestamp integer",
									"disabled": true
								},
								{
									"key": "started_after",
									"value": "",
									"description": "unix timestamp integer",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/threads/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"thread_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"thread_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"id": "e55d2e38-dd91-46b7-81d4-052d28bd5023"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "8e753cdc-f16f-4241-a504-096adc45999c"
							}
						}
					],
					"id": "e2432b95-c022-483c-80e1-2ea4367de976",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/threads/{{thread_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads",
								"{{thread_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/threads/:id unread status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"thread_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"thread_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"id": "aeba71d3-1dc8-4e81-a2db-9d4ac4d8513d"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "fe1b8532-dc23-4ed5-a476-ae5be5900c73"
							}
						}
					],
					"id": "0a51b0b9-dae6-4ad1-b639-887be5cfb773",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"unread\": false\n}"
						},
						"url": {
							"raw": "{{url}}/threads/{{thread_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads",
								"{{thread_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/threads/:id move a thread",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"thread_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"thread_id\", \"set_id_in_postman_prerequest_script\");",
									"}",
									"",
									"if (postman.getEnvironmentVariable(\"folder_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"folder_id\", \"set_id_in_postman_preqrequest_script\");",
									"}"
								],
								"type": "text/javascript",
								"id": "13b89314-3c1c-48fa-a0dc-20d69e7f6c43"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "ff030e3d-866d-4062-9a6a-2c50737c510e"
							}
						}
					],
					"id": "d6ee3118-692b-461b-960c-5ef68ffea274",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						},
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"folder_id\": \"{{folder_id}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/threads/{{thread_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads",
								"{{thread_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/threads/:id add/remove labels",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"thread_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"thread_id\", \"set_id_in_postman_prerequest_script\");",
									"}",
									"",
									"if (postman.getEnvironmentVariable(\"label_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"label_id\", \"set_id_in_postman_preqrequest_script\");",
									"}"
								],
								"id": "8bb62f8e-ff4e-49ba-bbfb-28d1e451a696"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "efce8bca-1204-4f2e-b07f-555cf1f1db85"
							}
						}
					],
					"id": "ed312f20-2969-42f1-9a54-d75ae9b0e602",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label_ids\": [\"{{label_id}}\"]\n}"
						},
						"url": {
							"raw": "{{url}}/threads/{{thread_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads",
								"{{thread_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/threads/:id set starred",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"thread_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"thread_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"id": "765da79c-7c23-4b51-a305-ac0b0df12700"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "56b0a63e-dabc-495d-ab16-cee6df05631e"
							}
						}
					],
					"id": "ed33f54c-1e93-4d63-8f41-2e60fe1e82c5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"starred\": true\n}"
						},
						"url": {
							"raw": "{{url}}/threads/{{thread_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads",
								"{{thread_id}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "fff9f861-01a0-478d-84c6-c3d498484128"
		},
		{
			"name": "Messages",
			"item": [
				{
					"name": "/messages",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"limit = parseInt(postman.getGlobalVariable(\"limit\"));",
									"offset = parseInt(postman.getGlobalVariable(\"offset\"));",
									"",
									"postman.setGlobalVariable(\"offset\", offset+limit);"
								],
								"type": "text/javascript",
								"id": "e3c5591c-9aa9-4745-8708-0457e14cc644"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"message_id\", jsonData[0].id);"
								],
								"type": "text/javascript",
								"id": "09d5cb6e-ebd3-4c0b-9d45-a04a30cc56b8"
							}
						}
					],
					"id": "2b617b9f-6e22-4e2a-9919-6d9f8cc760a2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "message/rfc822",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/messages",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "/messages/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"message_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"message_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"type": "text/javascript",
								"id": "3328168e-b0b5-4310-a53c-881790c5cbf2"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "21995f52-5fdb-4e9c-a129-ce9c12b3c89c"
							}
						}
					],
					"id": "5935c529-a605-4db1-b644-747c138ca5a8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/messages/{{message_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages",
								"{{message_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/messages/:id unread status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"message_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"message_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"id": "9286c49d-96c3-4069-8ac7-782b36183f23"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "aac9fe7c-c837-4316-a063-9cca4c0a91ef"
							}
						}
					],
					"id": "a47b60a6-f8b7-48ad-8051-645b50d1509e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"unread\": false\n}"
						},
						"url": {
							"raw": "{{url}}/messages/{{message_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages",
								"{{message_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/messages/:id move a message",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"message_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"message_id\", \"set_id_in_postman_prerequest_script\");",
									"}",
									"",
									"if (postman.getEnvironmentVariable(\"folder_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"folder_id\", \"set_id_in_postman_preqrequest_script\");",
									"}"
								],
								"id": "8c4b5bbd-30d7-4d9b-9618-983b5a6d2720"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "2ee60666-414b-48a6-9992-f53cbc7990d1"
							}
						}
					],
					"id": "0e7fa6cd-a8cd-4485-ab00-52f2bcaeff4b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"folder_id\": {{folder_id}}\n}"
						},
						"url": {
							"raw": "{{url}}/messages/{{message_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages",
								"{{message_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/messages/:id add/remove labels",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"message_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"message_id\", \"set_id_in_postman_prerequest_script\");",
									"}",
									"",
									"if (postman.getEnvironmentVariable(\"label_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"label_id\", \"set_id_in_postman_preqrequest_script\");",
									"}"
								],
								"type": "text/javascript",
								"id": "7fb38db3-b7b5-439b-b9e9-0fa86d1393c8"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "eb072687-644b-4074-a997-36b7e7c28dbb"
							}
						}
					],
					"id": "43087808-fe07-46c7-abef-9926ccd035a6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label_ids\": [\"{{label_id}}\"]\n}"
						},
						"url": {
							"raw": "{{url}}/messages/{{message_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages",
								"{{message_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/messages/:id starred",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"message_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"message_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"id": "0c040cc2-41c2-4f65-a82a-fa9b99f3bdb6"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "49865284-0d34-46cf-a593-d53c3c6cc910"
							}
						}
					],
					"id": "699ff6f2-4d09-4db5-8826-db2a157965fb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"starred\": true\n}"
						},
						"url": {
							"raw": "{{url}}/messages/{{message_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages",
								"{{message_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/messages/:id delete message",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"message_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"message_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"type": "text/javascript",
								"id": "38323685-ae8e-452a-93e7-dc96cc20947e"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "f287ad18-e086-49f2-a091-a5470312c99b"
							}
						}
					],
					"id": "959433fa-6939-4cb2-8b01-6d3d8e54bb31",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label_ids\": [\"{{delete_label_id}}\"]\n}"
						},
						"url": {
							"raw": "{{url}}/messages/{{delete_message_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages",
								"{{delete_message_id}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "0ae86436-2fa6-4896-b372-f85de8929843"
		},
		{
			"name": "Folders",
			"item": [
				{
					"name": "/folders",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"folder_id\", jsonData[2].id);"
								],
								"id": "94876d59-9a9c-4a11-b615-2d5b86dcec26"
							}
						}
					],
					"id": "4a260648-c2d9-4828-a1bb-83956e651979",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/folders",
							"host": [
								"{{url}}"
							],
							"path": [
								"folders"
							]
						}
					},
					"response": []
				},
				{
					"name": "/folders/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"folder_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"folder_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"type": "text/javascript",
								"id": "f267c14b-d381-4dfc-b189-66eec7976993"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "c5797840-b73d-4dde-9502-2ab0f1ba68ca"
							}
						}
					],
					"id": "79067633-cf24-4a67-85b5-5fff5375fcc5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/folders/{{folder_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/folders create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"folder_id\", jsonData[0].id);"
								],
								"id": "3f374ae4-ca9d-48da-8dd2-2273372afc4a"
							}
						}
					],
					"id": "734fa08a-a93a-4150-be19-188a94412b85",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"display_name\": \"My New Folder\"\n}"
						},
						"url": {
							"raw": "{{url}}/folders",
							"host": [
								"{{url}}"
							],
							"path": [
								"folders"
							]
						}
					},
					"response": []
				},
				{
					"name": "/folders/:id rename",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								],
								"id": "59afa6d6-8a38-443a-9f4b-93c973849f64"
							}
						}
					],
					"id": "e5850651-98d5-497f-9545-ec198e271326",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"display_name\": \"My Renamed Folder\"\n}"
						},
						"url": {
							"raw": "{{url}}/folders/{{folder_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/folders/:id delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"id": "3a3df052-7333-4ec1-bc1f-95fa41615eb6"
							}
						}
					],
					"id": "c4657104-e9a2-412e-907a-3d6734ff885b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/folders/{{folder_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "7017168c-16cb-4c47-9a92-2ce2986c180a"
		},
		{
			"name": "Labels",
			"item": [
				{
					"name": "/labels",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"label_id\", jsonData[0].id);"
								],
								"id": "a88deae8-6d18-4309-ad04-792abe8108bd"
							}
						}
					],
					"id": "1981c68c-86c2-4cc7-a112-577f8531b111",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/labels",
							"host": [
								"{{url}}"
							],
							"path": [
								"labels"
							]
						}
					},
					"response": []
				},
				{
					"name": "/labels/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"label_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"label_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"id": "5109113d-3f51-4abd-8991-6f363f4559bf"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "0c8c1a9e-91f3-4dbb-865b-959fcd1205ef"
							}
						}
					],
					"id": "6140c40e-faca-4ac3-bb7d-f13d776a2d07",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/labels/{{label_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"labels",
								"{{label_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/labels create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"label_id\", jsonData.id);"
								],
								"type": "text/javascript",
								"id": "75589817-2a84-4cd5-a878-92f9fcf224bd"
							}
						}
					],
					"id": "e57db14d-8af9-4861-a66d-e40ea61c8c08",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"display_name\": \"My new label\"\n}"
						},
						"url": {
							"raw": "{{url}}/labels",
							"host": [
								"{{url}}"
							],
							"path": [
								"labels"
							]
						}
					},
					"response": []
				},
				{
					"name": "/labels/:id rename",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"label_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"label_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"id": "4611c797-7818-437a-ab37-71a21e8a5aaa"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "7fa34f73-55c8-45c2-bab7-76206aad5c0a"
							}
						}
					],
					"id": "885bb78d-bbfe-4718-a4a8-38535c86ffde",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"display_name\": \"My renamed label\"\n}"
						},
						"url": {
							"raw": "{{url}}/labels/{{label_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"labels",
								"{{label_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/labels/:id delete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"label_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"label_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"id": "62b0a910-f324-4d4b-884c-995b9f3bff12"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "f20b4461-e7d5-48b5-8788-066e840404c0"
							}
						}
					],
					"id": "fae7fb31-a59f-487f-b96d-6b9da237781a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/labels/{{label_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"labels",
								"{{label_id}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "cb8c41c5-20fd-41ba-8de4-430f8639f254"
		},
		{
			"name": "Drafts",
			"item": [
				{
					"name": "/drafts/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"draft_id\", jsonData[0].id);",
									"postman.setEnvironmentVariable(\"draft_version\", jsonData[0].version);"
								],
								"id": "e67b18a4-508c-45db-96ce-da1f27846f61"
							}
						}
					],
					"id": "bb747de2-9685-4542-b29e-ada49309d0c7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/drafts/",
							"host": [
								"{{url}}"
							],
							"path": [
								"drafts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/drafts/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"draft_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"draft_id\", \"d7e44r6mu2jq0w8nfm7it68lp\");",
									"}"
								],
								"id": "725373cb-154a-4017-928e-6f99173ae02b"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"draft_id\", jsonData.id);",
									"postman.setEnvironmentVariable(\"draft_version\", jsonData.version);"
								],
								"id": "c895e175-cf13-4fb2-8421-1b982e1d0881"
							}
						}
					],
					"id": "55659902-0fa3-4935-8927-7ece4b1f5bc3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/drafts/{{draft_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"drafts",
								"{{draft_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drafts/",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"draft_id\", jsonData.id);",
									"postman.setEnvironmentVariable(\"draft_version\", jsonData.version);"
								],
								"type": "text/javascript",
								"id": "ecd61ec8-c9e3-4bfa-b9c0-501c715c0f01"
							}
						}
					],
					"id": "3d2e21ea-f801-46c8-82e5-27edc831afc5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"subject\": \"In Reply to a draft\",\n    \"to\": [\n        {\n            \"name\": \"{{name}}\",\n            \"email\": \"{{email}}\"\n        }\n    ],\n    \"cc\": [],\n    \"bcc\": [],\n    \"body\": \"<html><body>Thank you.</body></html>\",\n    \"reply_to\": [\n    \t{\n    \t\t\"name\": \"{{name}}\",\n    \t\t\"email\": \"{{email}}\"\n    \t}\n    ],\n    \"reply_to_message_id\": \"{{message_id}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/drafts/",
							"host": [
								"{{url}}"
							],
							"path": [
								"drafts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/drafts/:id update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"draft_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"draft_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"type": "text/javascript",
								"id": "0eafd841-6ad3-4f95-b494-b109dbefbf2a"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"draft_id\", jsonData.id);",
									"postman.setEnvironmentVariable(\"draft_version\", jsonData.version);"
								],
								"type": "text/javascript",
								"id": "0b03c471-7448-43ec-8478-bed0d7cc6e13"
							}
						}
					],
					"id": "f1617fb2-e0ea-46ea-9f7a-6e604dea3310",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"subject\": \"Dinner on Friday?\",\n    \"to\": [\n        {\n            \"name\": \"{{name}}\",\n            \"email\": \"{{email}}\"\n        }\n    ],\n    \"cc\": [],\n    \"bcc\": [],\n    \"body\": \"<html><body>Let's go eat!</body></html>\",\n\t\"reply_to\": [\n\t\t{\n\t\t\t\"name\": \"{{name}}\",\n\t\t\t\"email\": \"{{email}}\"\n\t\t}\n\t],\n    \"reply_to_message_id\": \"{{message_id}}\",\n    \"version\": 0\n}"
						},
						"url": {
							"raw": "{{url}}/drafts/{{draft_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"drafts",
								"{{draft_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drafts/:id delete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"draft_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"draft_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"type": "text/javascript",
								"id": "0a23bb65-666f-4849-ad96-646b0b80f24c"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "e24e49f8-8af7-45da-bf16-ec561e494137"
							}
						}
					],
					"id": "379061f2-a7fc-49de-a936-b94168df43f5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": {{draft_version}}\n}"
						},
						"url": {
							"raw": "{{url}}/drafts/{{draft_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"drafts",
								"{{draft_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/send direct with tracking",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "a101912f-293e-4c1b-bb0e-05e408b2e025"
							}
						}
					],
					"id": "54bf5025-bc1e-46a2-87e6-201f47dc007f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reply_to_message_id\": \"{{message_id}}\",\n    \"body\" : \"Sounds great! See you then.\",\n    \"subject\": \"Re: Meeting\",\n    \"to\": [\n        {\n            \"name\": \"{{name}}\",\n            \"email\": \"mike@nylas.com\"\n        }\n    ],\n    \"tracking\": {\n      \"opens\": \"true\",\n      \"links\": \"true\",\n      \"thread_replies\": true,\n      \"payload\": \"it's a test!\"\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/send",
							"host": [
								"{{url}}"
							],
							"path": [
								"send"
							]
						}
					},
					"response": []
				}
			],
			"id": "293c3e41-6d27-4faa-b75b-258ba6ed3062"
		},
		{
			"name": "Sending",
			"item": [
				{
					"name": "/send direct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "3e388c56-cdaf-446f-abe1-5bd8498b3cfd"
							}
						}
					],
					"id": "9b0c04a1-596e-4e0b-96ac-a9e08f80e9be",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\" : \"Sounds great! See you then.\",\n    \"subject\": \"Re: Meeting\",\n    \"to\": [\n        {\n            \"name\": \"{{name}}\",\n            \"email\": \"{{exchange_email}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/send",
							"host": [
								"{{url}}"
							],
							"path": [
								"send"
							]
						}
					},
					"response": [
						{
							"id": "8fe3d5f4-3fd2-4188-9312-4c3b0dc4cb1b",
							"name": "Send Message - Complete properties",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\": \"From Nylas\",\n  \"to\": [\n    {\n      \"email\": \"swag@nylas.com\",\n      \"name\": \"Nylas\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"name\": \"Dorothy Vaughan\",\n      \"email\": \"dorothy@spacetech.com\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"name\": \"Hedy Lamarr\",\n      \"email\": \"Lamarr@player.com\"\n    }\n  ],\n  \"from\": [\n    {\n      \"name\": \"Your Name\",\n      \"email\": \"you@example.com\"\n    }\n  ],\n  \"reply_to\": [\n    {\n      \"name\": \"Nylas\",\n      \"email\": \"swag@nylas.com\"\n    }\n  ],\n  \"reply_to_message_id\": \"{{reply_to_message_id}}\",\n  \"body\": \"This email was sent using the Nylas email API. Visit https://nylas.com for details.\",\n  \"file_ids\": [\n    \"<FILE_ID>\",\n    \"<FILE_ID>\"\n  ],\n  \"metadata\":{\n    \"hello\": \"world\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/send",
									"host": [
										"{{url}}"
									],
									"path": [
										"send"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"id": "cf6bba3c-f046-4be7-9724-1db00a738229",
							"name": "/send direct",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\": \"From Nylas\",\n  \"to\": [\n    {\n      \"email\": \"swag@nylas.com\",\n      \"name\": \"Nylas\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"name\": \"Dorothy Vaughan\",\n      \"email\": \"dorothy@spacetech.com\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"name\": \"Hedy Lamarr\",\n      \"email\": \"Lamarr@player.com\"\n    }\n  ],\n  \"from\": [\n    {\n      \"name\": \"Your Name\",\n      \"email\": \"you@example.com\"\n    }\n  ],\n  \"reply_to\": [\n    {\n      \"name\": \"Nylas\",\n      \"email\": \"swag@nylas.com\"\n    }\n  ],\n  \"reply_to_message_id\": \"{{reply_to_message_id}}\",\n  \"body\": \"This email was sent using the Nylas email API. Visit https://nylas.com for details.\",\n  \"file_ids\": [\n    \"<FILE_ID>\",\n    \"<FILE_ID>\"\n  ],\n  \"metadata\":{\n    \"hello\": \"world\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/send",
									"host": [
										"{{url}}"
									],
									"path": [
										"send"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/send direct w/ attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "006f4374-91bf-4ecd-9d2c-c987a312190d"
							}
						}
					],
					"id": "6c408139-dde7-4b1a-ba5f-17721bc191a4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\" : \"Here's an attachment!\",\n    \"subject\": \"Bugs\",\n    \"file_ids\": [\"{{file_id}}\"],\n    \"to\": [\n        {\n            \"name\": \"{{name}}\",\n            \"email\": \"{{exchange_email}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/send",
							"host": [
								"{{url}}"
							],
							"path": [
								"send"
							]
						}
					},
					"response": []
				},
				{
					"name": "/send direct with tracking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "dddade33-24d0-44e2-a97d-5ec04b0d7fbc"
							}
						}
					],
					"id": "89dfd6b0-eeeb-4eaf-bd26-837ab1ad00a8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\" : \"Link tracking has a new format, learn more here: <a href='https://changelog.nylas.com/changes-to-link-tracking-110420'>Link Tracking Changes</a>\",\n    \"subject\": \"Re: Meeting\",\n    \"to\": [\n        {\n            \"email\": \"support@nylas.com\"\n        }\n    ],\n    \"tracking\": {\n      \"opens\": \"true\",\n      \"links\": \"true\",\n      \"thread_replies\": \"true\",\n      \"payload\": \"it's a test!\"\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/send",
							"host": [
								"{{url}}"
							],
							"path": [
								"send"
							]
						}
					},
					"response": []
				},
				{
					"name": "/send draft",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "243f9f25-efe1-4f79-93c8-b5a415977efa"
							}
						}
					],
					"id": "764b5cc3-3170-4dc4-9f1d-887cda4e981b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"draft_id\": \"{{draft_id}}\",\n    \"version\": {{draft_version}}\n}"
						},
						"url": {
							"raw": "{{url}}/send",
							"host": [
								"{{url}}"
							],
							"path": [
								"send"
							]
						}
					},
					"response": []
				},
				{
					"name": "/send raw mime",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "45ac439d-3151-44f2-8894-ae997ddc6d07"
							}
						}
					],
					"id": "09070aaa-8f6c-40e1-8b63-9a074d0934af",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "message/rfc822"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "MIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nIn-Reply-To: <84umizq7c4jtrew491brpa6iu-0@mailer.nylas.com>\nReferences: <84umizq7c4jtrew491brpa6iu-0@mailer.nylas.com>\nSubject: Meeting on Thursday\nFrom: Bill <wbrogers@mit.edu>\nTo: Ben Bitdiddle <ben.bitdiddle@gmail.com>\n\nHey Ben,\n\nWould you like to grab coffee @ 2pm this Thursday?\"\nBill"
						},
						"url": {
							"raw": "{{url}}/send",
							"host": [
								"{{url}}"
							],
							"path": [
								"send"
							]
						}
					},
					"response": []
				},
				{
					"name": "/send inline image",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "a70e9595-206b-4dd0-ae88-559647473323"
							}
						}
					],
					"id": "c70c47e3-d74b-4c5e-8ccc-40f5fb4a1c12",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\" : \"Sounds great! <img src='cid:{{file_id}}'> See you then.\",\n    \"subject\": \"Re: Meeting\",\n    \"to\": [\n        {\n            \"name\": \"{{name}}\",\n            \"email\": \"{{exchange_email}}\"\n        }\n    ],\n    \"file_ids\": [\"{{file_id}}\"]\n}"
						},
						"url": {
							"raw": "{{url}}/send",
							"host": [
								"{{url}}"
							],
							"path": [
								"send"
							]
						}
					},
					"response": []
				},
				{
					"name": "/outbox",
					"id": "2d6ea7c5-9d5f-4c9a-9712-944b949d1976",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "/outbox",
							"path": [
								"outbox"
							]
						},
						"description": "Get a list of all messages scheduled to be sent."
					},
					"response": []
				},
				{
					"name": "/outbox/{job_status_id}",
					"id": "cedfe9c2-d4cc-4f2a-ad12-b61fb9970e1a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "/outbox/job_status_id}",
							"path": [
								"outbox",
								"job_status_id}"
							]
						},
						"description": "Delete a scheduled message. Use the job_status_id returned from [/outbox](https://docs.nylas.com/reference#post-outbox)"
					},
					"response": []
				},
				{
					"name": "/outbox",
					"id": "5c1949c1-6685-4040-82bd-e6dcafeb3984",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"from\": [{\n\t\t\"email\": \"{email}\",\n\t\t\"name\": \"{name}\"\n\t}],\n\t\"to\": [{\n\t\t\"email\": \"{email}\",\n\t\t\"name\": \"{name}\"\n\t}],\n\t\"reply_to_message_id\": \"{message_id}\",\n\t\"subject\": \"{subject}\",\n\t\"body\": \"{body}\",\n\t\"reply_to\": [{\n\t\t\"email\": \"{email}\",\n\t\t\"name\": \"{name}\"\n\t}],\n\t\"file_ids\": [\"{file_id}\"]\n}"
						},
						"url": {
							"raw": "/outbox",
							"path": [
								"outbox"
							]
						},
						"description": "Send a message or schedule messages to be sent."
					},
					"response": []
				},
				{
					"name": "/outbox/{job_status_id}",
					"id": "0fe6c36e-488d-458e-9a7f-819f1ee70323",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"send_at\": {{unix_time_stamp}}\n}"
						},
						"url": {
							"raw": "/outbox/{{job_status_id}}",
							"path": [
								"outbox",
								"{{job_status_id}}"
							]
						},
						"description": "Update the message scheduled send time. Use the job_status_id returned from [/outbox](https://docs.nylas.com/reference#post-outbox)."
					},
					"response": []
				}
			],
			"id": "d42ce225-99a7-4b14-81c7-165c928229b3"
		},
		{
			"name": "Files",
			"item": [
				{
					"name": "/files",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"file_id\", jsonData[0].id);"
								],
								"id": "78e874db-16a8-404e-af01-ab6c4b10849f"
							}
						}
					],
					"id": "02c8ff3b-a10a-4ff9-93de-6b9c86c97635",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/files/",
							"host": [
								"{{url}}"
							],
							"path": [
								"files",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/files/:id",
					"id": "685702a5-7017-4083-ae18-5eef50dcc48c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/files/{{file_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"files",
								"{{file_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/files/:id/download",
					"id": "f1cb62a2-74be-44c9-b932-94e5096d0718",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/files/{{file_id}}/download",
							"host": [
								"{{url}}"
							],
							"path": [
								"files",
								"{{file_id}}",
								"download"
							]
						}
					},
					"response": []
				},
				{
					"name": "/files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"file_id\", jsonData[0][\"id\"]);",
									""
								],
								"type": "text/javascript",
								"id": "ace3b2d9-5025-474d-a94d-a24422abc6ce"
							}
						}
					],
					"id": "54fb8aa0-2659-47a9-a601-42b6a7afc4ed",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						},
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"value": null
								}
							]
						},
						"url": {
							"raw": "{{url}}/files/",
							"host": [
								"{{url}}"
							],
							"path": [
								"files",
								""
							]
						}
					},
					"response": []
				}
			],
			"id": "642ff36e-b7c8-452f-8725-2d25b333797d"
		},
		{
			"name": "Calendars",
			"item": [
				{
					"name": "/calendars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set the calendar_id environment variable to a writable calendar",
									"var response = pm.response.json();",
									"console.log(response);",
									"response.forEach(function(calendar) {",
									"    console.log(calendar.id);",
									"    if (calendar.read_only === false) {",
									"         //pm.environment.set(\"calendar_id\", calendar.id);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "83a3dbcb-b5d9-4ad8-bda8-1bd6797cbca0"
							}
						}
					],
					"id": "70ed12e5-4aad-4b2f-ab43-b8b0239e0ef8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/calendars",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendars"
							],
							"query": [
								{
									"key": "view",
									"value": "",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_key",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_pair",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_value",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_search",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/calendars/id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								],
								"id": "d0ea8721-e730-4b46-b9c6-81c76a98cd83"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"id": "67abdda9-cb4f-4c2f-870a-27a9bb49af45"
							}
						}
					],
					"id": "b1db3c0e-6cc3-4d7a-bc67-fe57e937829e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/calendars/{{calendar_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendars",
								"{{calendar_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/calendars/free-busy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set the calendar_id environment variable to a writable calendar",
									"var response = pm.response.json();",
									"console.log(response);",
									"response.forEach(function(calendar) {",
									"    console.log(calendar.id);",
									"    if (calendar.read_only === false) {",
									"         pm.environment.set(\"calendar_id\", calendar.id);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "58e855c3-ccdd-4285-9a74-6d7f758f33f2"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now()/1000;",
									"var time2 = time1 + 30*60*60*24; // 30 days",
									"postman.setGlobalVariable(\"now\", parseInt(time1));",
									"postman.setGlobalVariable(\"one_week\", parseInt(time2));"
								],
								"type": "text/javascript",
								"id": "6de91201-bb9b-4090-a022-d929626438fb"
							}
						}
					],
					"id": "424184a2-0fb5-4eed-8321-714523c95bd7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"start_time\":\"{{now}}\",\n\t\"end_time\":\"{{one_week}}\",\n\t\"emails\": [\"{{email}}\"]\n}"
						},
						"url": {
							"raw": "{{url}}/calendars/free-busy/",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendars",
								"free-busy",
								""
							]
						},
						"description": "Free/Busy allows you to query availability information for a Calendar during a certain time period. Furthermore, the data returned doesn't include any sensitive information about events within the window, like titles, descriptions, or locations of the event."
					},
					"response": [
						{
							"id": "724be8bc-8c04-4d4f-881d-fea57b04fafc",
							"name": "/calendars/freebusy",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/calendars/freebusy?start_time=1409594400&end_time=1409599000&calendar_ids=bbbb1234cccc1234",
									"host": [
										"{{url}}"
									],
									"path": [
										"calendars",
										"freebusy"
									],
									"query": [
										{
											"key": "start_time",
											"value": "1409594400",
											"description": "Unix time stamp (UTC) of the start time for this timeslot"
										},
										{
											"key": "end_time",
											"value": "1409599000",
											"description": "Unix timestamp (UTC) of the end time for this timeslot"
										},
										{
											"key": "calendar_ids",
											"value": "bbbb1234cccc1234",
											"description": "The Nylas calendar_id that this freebusy info applies to"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n  {\n   \"object\": \"freebusy\",\n   \"calendar_id\": \"bbbb1234cccc1234\",\n   \"time_slots\": [\n      { \n        \"object\": \"timeslot\",\n        \"status\": \"busy\",\n        \"start_time\": 1409594400,\n        \"end_time\": 1409598000\n      },\n      { \n        \"object\": \"timeslot\",\n        \"status\": \"busy\",\n        \"start_time\": 1409598000,\n        \"end_time\": 1409599000\n      }\n    ]\n  }\n]"
						},
						{
							"id": "4a44f8ed-4048-4f80-b0f0-b9b4398ccf1c",
							"name": "Free Busy - Single Connected Account",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"start_time\":\"{{now}}\",\n\t\"end_time\":\"{{one_week}}\",\n\t\"emails\": [],\n    \"calendars\": [\n        {\n            \"account_id\": \"{{account_id}}\",\n            \"calendar_ids\": [\n                \"{{calendar_id}}\"\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/calendars/free-busy/",
									"host": [
										"{{url}}"
									],
									"path": [
										"calendars",
										"free-busy",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 23 Aug 2022 19:08:13 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization,Accept,Cache-Control,X-Requested-With,Content-Type,User-Agent,Nylas-SDK-API-Version,X-Nylas-Client-Id"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,PUT,POST,DELETE,OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Nylas-API-Version",
									"value": "2.3"
								},
								{
									"key": "X-Unique-Id",
									"value": "1a37fa48-70c2-4357-94b4-2b36cdf39b7e"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "1132"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "5"
								},
								{
									"key": "Via",
									"value": "kong/2.8.1.3-enterprise-edition"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "73f622b1d9d99ee0-DFW"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"account_id\": \"eljl6iqi2g5rcz5ooi5qsknlw\",\n        \"calendar_id\": \"92qt3smzliaj65ye1lz85ht7z\",\n        \"email\": \"baumana@gmail.com\",\n        \"object\": \"free_busy\",\n        \"time_slots\": [\n            {\n                \"end_time\": 1661457600,\n                \"object\": \"time_slot\",\n                \"start_time\": 1661454000,\n                \"status\": \"busy\"\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "/calendars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set the calendar_id environment variable to a writable calendar",
									"var response = pm.response.json();",
									"console.log(response);",
									"response.forEach(function(calendar) {",
									"    console.log(calendar.id);",
									"    if (calendar.read_only === false) {",
									"         pm.environment.set(\"calendar_id\", calendar.id);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "141fed07-ddca-4040-812d-bd8f8519927e"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now() / 1000;",
									"var time2 = time1 + 30 * 60 * 60 * 24; // 30 days",
									"postman.setGlobalVariable(\"now\", parseInt(time1));",
									"postman.setGlobalVariable(\"one_week\", parseInt(time2));"
								],
								"type": "text/javascript",
								"id": "dc4408a3-c445-4ded-bdc1-87a5978be23c"
							}
						}
					],
					"id": "13c1dd73-f87d-44e3-9ec1-4c6e2e815eae",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"calendar_test\",\n\t\"description\":\"This is a test calendar\",\n\t\"location\":\"test_room\",\n\t\"timezone\":\"America/Los_Angeles\",\n    \"metadata\":{\n        \"hello\":\"goodbye\"\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/calendars",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendars"
							]
						},
						"description": "Create secondary calendars"
					},
					"response": [
						{
							"id": "00a6937d-e518-40ad-9a24-fe4018b45340",
							"name": "/calendars/freebusy",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/calendars/freebusy?start_time=1409594400&end_time=1409599000&calendar_ids=bbbb1234cccc1234",
									"host": [
										"{{url}}"
									],
									"path": [
										"calendars",
										"freebusy"
									],
									"query": [
										{
											"key": "start_time",
											"value": "1409594400",
											"description": "Unix time stamp (UTC) of the start time for this timeslot"
										},
										{
											"key": "end_time",
											"value": "1409599000",
											"description": "Unix timestamp (UTC) of the end time for this timeslot"
										},
										{
											"key": "calendar_ids",
											"value": "bbbb1234cccc1234",
											"description": "The Nylas calendar_id that this freebusy info applies to"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n  {\n   \"object\": \"freebusy\",\n   \"calendar_id\": \"bbbb1234cccc1234\",\n   \"time_slots\": [\n      { \n        \"object\": \"timeslot\",\n        \"status\": \"busy\",\n        \"start_time\": 1409594400,\n        \"end_time\": 1409598000\n      },\n      { \n        \"object\": \"timeslot\",\n        \"status\": \"busy\",\n        \"start_time\": 1409598000,\n        \"end_time\": 1409599000\n      }\n    ]\n  }\n]"
						}
					]
				},
				{
					"name": "/calendars/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set the calendar_id environment variable to a writable calendar",
									"var response = pm.response.json();",
									"console.log(response);",
									"response.forEach(function(calendar) {",
									"    console.log(calendar.id);",
									"    if (calendar.read_only === false) {",
									"         pm.environment.set(\"calendar_id\", calendar.id);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "3af305a2-36d3-420b-b27c-343fda02170c"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now()/1000;",
									"var time2 = time1 + 30*60*60*24; // 30 days",
									"postman.setGlobalVariable(\"now\", parseInt(time1));",
									"postman.setGlobalVariable(\"one_week\", parseInt(time2));"
								],
								"type": "text/javascript",
								"id": "0b5fb00e-5974-4fa3-9618-be0dedcffb18"
							}
						}
					],
					"id": "88eea8ec-805a-436b-acca-e260c126ea47",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"updated_calendar_test\",\n\t\"description\":\"This is a test calendar\",\n\t\"location\":\"updates_test_room\",\n\t\"timezone\":\"America/Los_Angeles\"\n}"
						},
						"url": {
							"raw": "{{url}}/calendars/{{calendar_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendars",
								"{{calendar_id}}"
							]
						},
						"description": "Edit properties of secondary calendars that have been created. "
					},
					"response": [
						{
							"id": "f83c8fcc-ba6a-4b08-94f6-fbc43b72cf2e",
							"name": "/calendars/freebusy",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/calendars/freebusy?start_time=1409594400&end_time=1409599000&calendar_ids=bbbb1234cccc1234",
									"host": [
										"{{url}}"
									],
									"path": [
										"calendars",
										"freebusy"
									],
									"query": [
										{
											"key": "start_time",
											"value": "1409594400",
											"description": "Unix time stamp (UTC) of the start time for this timeslot"
										},
										{
											"key": "end_time",
											"value": "1409599000",
											"description": "Unix timestamp (UTC) of the end time for this timeslot"
										},
										{
											"key": "calendar_ids",
											"value": "bbbb1234cccc1234",
											"description": "The Nylas calendar_id that this freebusy info applies to"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n  {\n   \"object\": \"freebusy\",\n   \"calendar_id\": \"bbbb1234cccc1234\",\n   \"time_slots\": [\n      { \n        \"object\": \"timeslot\",\n        \"status\": \"busy\",\n        \"start_time\": 1409594400,\n        \"end_time\": 1409598000\n      },\n      { \n        \"object\": \"timeslot\",\n        \"status\": \"busy\",\n        \"start_time\": 1409598000,\n        \"end_time\": 1409599000\n      }\n    ]\n  }\n]"
						}
					]
				},
				{
					"name": "/calendars/id ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set the calendar_id environment variable to a writable calendar",
									"var response = pm.response.json();",
									"console.log(response);",
									"response.forEach(function(calendar) {",
									"    console.log(calendar.id);",
									"    if (calendar.read_only === false) {",
									"         pm.environment.set(\"calendar_id\", calendar.id);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "2869e54e-9c63-4a8c-94a6-58ced11f0681"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now()/1000;",
									"var time2 = time1 + 30*60*60*24; // 30 days",
									"postman.setGlobalVariable(\"now\", parseInt(time1));",
									"postman.setGlobalVariable(\"one_week\", parseInt(time2));"
								],
								"type": "text/javascript",
								"id": "fdce6768-02e3-42e6-a860-20ca6be93083"
							}
						}
					],
					"id": "207b40a5-9311-4e33-9ace-0504ec760f8d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/calendars/{{calendar_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendars",
								"{{calendar_id}}"
							]
						},
						"description": "Delete any secondary calendars that have been created. "
					},
					"response": [
						{
							"id": "ac42911d-05ce-4767-bf1b-655a211474e4",
							"name": "/calendars/freebusy",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/calendars/freebusy?start_time=1409594400&end_time=1409599000&calendar_ids=bbbb1234cccc1234",
									"host": [
										"{{url}}"
									],
									"path": [
										"calendars",
										"freebusy"
									],
									"query": [
										{
											"key": "start_time",
											"value": "1409594400",
											"description": "Unix time stamp (UTC) of the start time for this timeslot"
										},
										{
											"key": "end_time",
											"value": "1409599000",
											"description": "Unix timestamp (UTC) of the end time for this timeslot"
										},
										{
											"key": "calendar_ids",
											"value": "bbbb1234cccc1234",
											"description": "The Nylas calendar_id that this freebusy info applies to"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n  {\n   \"object\": \"freebusy\",\n   \"calendar_id\": \"bbbb1234cccc1234\",\n   \"time_slots\": [\n      { \n        \"object\": \"timeslot\",\n        \"status\": \"busy\",\n        \"start_time\": 1409594400,\n        \"end_time\": 1409598000\n      },\n      { \n        \"object\": \"timeslot\",\n        \"status\": \"busy\",\n        \"start_time\": 1409598000,\n        \"end_time\": 1409599000\n      }\n    ]\n  }\n]"
						}
					]
				},
				{
					"name": "/calendars/availability",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now()/1000;",
									"var time2 = time1 + 60*60 * 6; // 6 hours",
									"postman.setGlobalVariable(\"start_time\", Math.floor(time1));",
									"postman.setGlobalVariable(\"end_time\", Math.floor(time2));",
									""
								],
								"type": "text/javascript",
								"id": "44c9f22f-a9b5-473d-9870-259777e3aee9"
							}
						}
					],
					"id": "b78c2a8e-db2e-4b49-9966-902d4e6447fe",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"duration_minutes\": {{duration_minutes}},\n\t\"start_time\": {{start_time}},\n\t\"end_time\": {{end_time}},\n\t\"interval_minutes\": {{interval_minutes}},\n\t\"emails\": [\n\t\t\"{{email_string}}\"\n\t],\n\t\"free_busy\": [{\n\t\t\t\"email\": \"{{email_string}}\",\n\t\t\t\"object\": \"free_busy\",\n\t\t\t\"time_slots\": [{\n\t\t\t\t\"start_time\": {{start_time}},\n\t\t\t\t\"end_time\": {{end_time}},\n\t\t\t\t\"object\": \"time_slot\",\n\t\t\t\t\"status\": \"busy\"\n\t\t\t}]\n\t\t},\n\t\t{\n\t\t\t\"email\": \"{{email_string}}\",\n\t\t\t\"object\": \"free_busy\",\n\t\t\t\"time_slots\": [{\n\t\t\t\t\"start_time\": {{start_time}},\n\t\t\t\t\"end_time\": {{end_time}},\n\t\t\t\t\"object\": \"time_slot\",\n\t\t\t\t\"status\": \"busy\"\n\t\t\t}]\n\t\t}\n\t],\n\t\"open_hours\": [{\n\t\t\"emails\": [\n\t\t\t\"{{email_string}}\"\n\t\t],\n\t\t\"days\": [0,1],\n\t\t\"timezone\": \"{{time_zone}}\",\n\t\t\"start\": \"{{start_time_24_hour_clock}}\",\n\t\t\"end\": \"{{end_time_24_hour_clock}}\",\n\t\t\"object_type\": \"open_hours\"\n\t}]\n}"
						},
						"url": {
							"raw": "{{url}}/calendars/availability",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendars",
								"availability"
							]
						},
						"description": "Check multiple calendars to find available time slots for a single meeting."
					},
					"response": [
						{
							"id": "ab9d0196-e9b7-4359-b9f2-c32233071930",
							"name": "Availability - Same Domain",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"duration_minutes\": {{duration_minutes}},\n\t\"start_time\": {{start_time}},\n\t\"end_time\": {{end_time}},\n\t\"interval_minutes\": {{interval_minutes}},\n\t\"emails\": [\n\t\t\"{{email_string}}\"\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/calendars/availability",
									"host": [
										"{{url}}"
									],
									"path": [
										"calendars",
										"availability"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 23 Aug 2022 20:55:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization,Accept,Cache-Control,X-Requested-With,Content-Type,User-Agent,Nylas-SDK-API-Version,X-Nylas-Client-Id"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,PUT,POST,DELETE,OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Nylas-API-Version",
									"value": "2.3"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "X-Unique-Id",
									"value": "8e27c996-e2c5-430c-b51f-c00f7d8af2f7"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "606"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "7"
								},
								{
									"key": "Via",
									"value": "kong/2.8.1.3-enterprise-edition"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "73f6bf3f99cb9ea7-DFW"
								}
							],
							"cookie": [],
							"body": "{\n    \"object\": \"availability\",\n    \"time_slots\": [\n        {\n            \"end\": 1661290200,\n            \"end_time\": 1661290200,\n            \"object\": \"time_slot\",\n            \"start\": 1661288400,\n            \"start_time\": 1661288400,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661290800,\n            \"end_time\": 1661290800,\n            \"object\": \"time_slot\",\n            \"start\": 1661289000,\n            \"start_time\": 1661289000,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661291400,\n            \"end_time\": 1661291400,\n            \"object\": \"time_slot\",\n            \"start\": 1661289600,\n            \"start_time\": 1661289600,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661292000,\n            \"end_time\": 1661292000,\n            \"object\": \"time_slot\",\n            \"start\": 1661290200,\n            \"start_time\": 1661290200,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661292600,\n            \"end_time\": 1661292600,\n            \"object\": \"time_slot\",\n            \"start\": 1661290800,\n            \"start_time\": 1661290800,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661293200,\n            \"end_time\": 1661293200,\n            \"object\": \"time_slot\",\n            \"start\": 1661291400,\n            \"start_time\": 1661291400,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661293800,\n            \"end_time\": 1661293800,\n            \"object\": \"time_slot\",\n            \"start\": 1661292000,\n            \"start_time\": 1661292000,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661294400,\n            \"end_time\": 1661294400,\n            \"object\": \"time_slot\",\n            \"start\": 1661292600,\n            \"start_time\": 1661292600,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661295000,\n            \"end_time\": 1661295000,\n            \"object\": \"time_slot\",\n            \"start\": 1661293200,\n            \"start_time\": 1661293200,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661295600,\n            \"end_time\": 1661295600,\n            \"object\": \"time_slot\",\n            \"start\": 1661293800,\n            \"start_time\": 1661293800,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661296200,\n            \"end_time\": 1661296200,\n            \"object\": \"time_slot\",\n            \"start\": 1661294400,\n            \"start_time\": 1661294400,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661296800,\n            \"end_time\": 1661296800,\n            \"object\": \"time_slot\",\n            \"start\": 1661295000,\n            \"start_time\": 1661295000,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661297400,\n            \"end_time\": 1661297400,\n            \"object\": \"time_slot\",\n            \"start\": 1661295600,\n            \"start_time\": 1661295600,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661298000,\n            \"end_time\": 1661298000,\n            \"object\": \"time_slot\",\n            \"start\": 1661296200,\n            \"start_time\": 1661296200,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661298600,\n            \"end_time\": 1661298600,\n            \"object\": \"time_slot\",\n            \"start\": 1661296800,\n            \"start_time\": 1661296800,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661299200,\n            \"end_time\": 1661299200,\n            \"object\": \"time_slot\",\n            \"start\": 1661297400,\n            \"start_time\": 1661297400,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661299800,\n            \"end_time\": 1661299800,\n            \"object\": \"time_slot\",\n            \"start\": 1661298000,\n            \"start_time\": 1661298000,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661300400,\n            \"end_time\": 1661300400,\n            \"object\": \"time_slot\",\n            \"start\": 1661298600,\n            \"start_time\": 1661298600,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661301000,\n            \"end_time\": 1661301000,\n            \"object\": \"time_slot\",\n            \"start\": 1661299200,\n            \"start_time\": 1661299200,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661301600,\n            \"end_time\": 1661301600,\n            \"object\": \"time_slot\",\n            \"start\": 1661299800,\n            \"start_time\": 1661299800,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661302200,\n            \"end_time\": 1661302200,\n            \"object\": \"time_slot\",\n            \"start\": 1661300400,\n            \"start_time\": 1661300400,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661302800,\n            \"end_time\": 1661302800,\n            \"object\": \"time_slot\",\n            \"start\": 1661301000,\n            \"start_time\": 1661301000,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661303400,\n            \"end_time\": 1661303400,\n            \"object\": \"time_slot\",\n            \"start\": 1661301600,\n            \"start_time\": 1661301600,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661304000,\n            \"end_time\": 1661304000,\n            \"object\": \"time_slot\",\n            \"start\": 1661302200,\n            \"start_time\": 1661302200,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661304600,\n            \"end_time\": 1661304600,\n            \"object\": \"time_slot\",\n            \"start\": 1661302800,\n            \"start_time\": 1661302800,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661305200,\n            \"end_time\": 1661305200,\n            \"object\": \"time_slot\",\n            \"start\": 1661303400,\n            \"start_time\": 1661303400,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661305800,\n            \"end_time\": 1661305800,\n            \"object\": \"time_slot\",\n            \"start\": 1661304000,\n            \"start_time\": 1661304000,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661306400,\n            \"end_time\": 1661306400,\n            \"object\": \"time_slot\",\n            \"start\": 1661304600,\n            \"start_time\": 1661304600,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661307000,\n            \"end_time\": 1661307000,\n            \"object\": \"time_slot\",\n            \"start\": 1661305200,\n            \"start_time\": 1661305200,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661307600,\n            \"end_time\": 1661307600,\n            \"object\": \"time_slot\",\n            \"start\": 1661305800,\n            \"start_time\": 1661305800,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661308200,\n            \"end_time\": 1661308200,\n            \"object\": \"time_slot\",\n            \"start\": 1661306400,\n            \"start_time\": 1661306400,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661308800,\n            \"end_time\": 1661308800,\n            \"object\": \"time_slot\",\n            \"start\": 1661307000,\n            \"start_time\": 1661307000,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661309400,\n            \"end_time\": 1661309400,\n            \"object\": \"time_slot\",\n            \"start\": 1661307600,\n            \"start_time\": 1661307600,\n            \"status\": \"free\"\n        }\n    ]\n}"
						},
						{
							"id": "77230e89-cc84-4f8c-abf1-eeec9f028d3e",
							"name": "Availability - Same Domain with Open Hours",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"duration_minutes\": {{duration_minutes}},\n    \"start_time\": {{start_time}},\n    \"end_time\": {{end_time}},\n    \"interval_minutes\": {{interval_minutes}},\n    \"emails\": [\n        \"{{email_string}}\"\n    ],\n    \"open_hours\": [\n        {\n            \"emails\": [\n                \"{{email_string}}\"\n            ],\n            \"days\": [\n                0,\n                1\n            ],\n            \"timezone\": \"{{time_zone}}\",\n            \"start\": \"{{start_time_24_hour_clock}}\",\n            \"end\": \"{{end_time_24_hour_clock}}\",\n            \"object_type\": \"open_hours\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/calendars/availability",
									"host": [
										"{{url}}"
									],
									"path": [
										"calendars",
										"availability"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 23 Aug 2022 21:15:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization,Accept,Cache-Control,X-Requested-With,Content-Type,User-Agent,Nylas-SDK-API-Version,X-Nylas-Client-Id"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,PUT,POST,DELETE,OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Nylas-API-Version",
									"value": "2.3"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "X-Unique-Id",
									"value": "4554b7d8-6e1a-41b6-bbb0-269fb7134391"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "282"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "6"
								},
								{
									"key": "Via",
									"value": "kong/2.8.1.3-enterprise-edition"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "73f6ddaccc032839-DFW"
								}
							],
							"cookie": [],
							"body": "{\n    \"object\": \"availability\",\n    \"time_slots\": [\n        {\n            \"end\": 1661292000,\n            \"end_time\": 1661292000,\n            \"object\": \"time_slot\",\n            \"start\": 1661290200,\n            \"start_time\": 1661290200,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661292900,\n            \"end_time\": 1661292900,\n            \"object\": \"time_slot\",\n            \"start\": 1661291100,\n            \"start_time\": 1661291100,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661293800,\n            \"end_time\": 1661293800,\n            \"object\": \"time_slot\",\n            \"start\": 1661292000,\n            \"start_time\": 1661292000,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661294700,\n            \"end_time\": 1661294700,\n            \"object\": \"time_slot\",\n            \"start\": 1661292900,\n            \"start_time\": 1661292900,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661295600,\n            \"end_time\": 1661295600,\n            \"object\": \"time_slot\",\n            \"start\": 1661293800,\n            \"start_time\": 1661293800,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661296500,\n            \"end_time\": 1661296500,\n            \"object\": \"time_slot\",\n            \"start\": 1661294700,\n            \"start_time\": 1661294700,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661297400,\n            \"end_time\": 1661297400,\n            \"object\": \"time_slot\",\n            \"start\": 1661295600,\n            \"start_time\": 1661295600,\n            \"status\": \"free\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "/calendars/availability/consecutive",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now()/1000;",
									"var time2 = time1 + 30*60*60*24; // 30 days",
									"postman.setGlobalVariable(\"now\", parseInt(time1));",
									"postman.setGlobalVariable(\"one_week\", parseInt(time2));"
								],
								"type": "text/javascript",
								"id": "74207397-6bce-4be7-9470-277e846ef5e3"
							}
						}
					],
					"id": "fa7fa617-2e51-48b6-9b66-ef83078ef9d3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"duration_minutes\": {{duration_minutes}},\n    \"start_time\": {{start_time}},\n    \"end_time\": {{end_time}},\n    \"interval_minutes\": {{interval_minutes}},\n    \"emails\": [\n        [\"{{email_string}}\"]\n    ],\n    \"free_busy\": [\n        {\n            \"email\": \"{{email_string}}\",\n            \"object\": \"free_busy\",\n            \"time_slots\": [\n                {\n                    \"start_time\": {{start_time}},\n                    \"end_time\": {{end_time}},\n                    \"object\": \"time_slot\",\n                    \"status\": \"busy\"\n                }\n            ]\n        },\n        {\n            \"email\": \"{{email_string}}\",\n            \"object\": \"free_busy\",\n            \"time_slots\": [\n                {\n                    \"start_time\": {{start_time}},\n                    \"end_time\": {{end_time}},\n                    \"object\": \"time_slot\",\n                    \"status\": \"busy\"\n                }\n            ]\n        }\n    ],\n    \"open_hours\": [\n        {\n            \"emails\": [\n                \"{{email_string}}\"\n            ],\n            \"days\": [0,1],\n            \"timezone\": \"{{time_zone}}\",\n            \"start\": \"{{start_time_24_hour_clock}}\",\n            \"end\": \"{{end_time_24_hour_clock}}\",\n            \"object_type\": \"open_hours\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/calendars/availability/consecutive",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendars",
								"availability",
								"consecutive"
							]
						},
						"description": "Check multiple calendars to find available time slots for a single meeting."
					},
					"response": []
				}
			],
			"id": "26e01ab5-3ca8-4ec5-934a-504984e564ce"
		},
		{
			"name": "Resources",
			"item": [
				{
					"name": "/resources",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "6c5ab213-4fd9-409f-836e-0a882c6bcd6d"
							}
						}
					],
					"id": "49bfa3a2-2e34-444f-87c3-7f48ffec5c57",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/resources",
							"host": [
								"{{url}}"
							],
							"path": [
								"resources"
							]
						}
					},
					"response": []
				}
			],
			"id": "ae590b01-fc18-45e8-9467-086372275900",
			"description": "Access resource information from GSuite and O365 organizations, like rooms."
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "/events",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now() / 1000;",
									"var time2 = time1 - 60 * 60 * 24 * 7; // 7 days",
									"postman.setGlobalVariable(\"timestamp\", time2);",
									"postman.setGlobalVariable(\"timestamp2\", time1);",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"id": "88032b53-b7c4-481c-acbf-cf7a11669108"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "21b8f354-2541-4704-8877-a819edf06f3e"
							}
						}
					],
					"id": "c77159b9-a0d9-4149-a1b7-f682cdf1485b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/events?calendar_id={{calendar_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "calendar_id",
									"value": "{{calendar_id}}"
								},
								{
									"key": "expand_recurring",
									"value": "true",
									"disabled": true
								},
								{
									"key": "show_cancelled",
									"value": "",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "event_id",
									"value": "",
									"disabled": true
								},
								{
									"key": "calendar_id",
									"value": "",
									"disabled": true
								},
								{
									"key": "title",
									"value": "",
									"disabled": true
								},
								{
									"key": "description",
									"value": "",
									"disabled": true
								},
								{
									"key": "location",
									"value": "",
									"disabled": true
								},
								{
									"key": "starts_before",
									"value": "",
									"disabled": true
								},
								{
									"key": "starts_after",
									"value": "",
									"disabled": true
								},
								{
									"key": "ends_before",
									"value": "",
									"disabled": true
								},
								{
									"key": "ends_after",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_key",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_value",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_pair",
									"value": "",
									"disabled": true
								},
								{
									"key": "busy",
									"value": "",
									"disabled": true
								},
								{
									"key": "count",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_search",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/events/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								],
								"id": "3ecf36ac-ae02-44fa-88cb-1fc66135d664"
							}
						}
					],
					"id": "06097281-7887-4298-bbfd-873929c7488e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/events/{{event_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"events",
								"{{event_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/events",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now()/1000;",
									"var time2 = time1 + 30*60; // 30 min",
									"postman.setGlobalVariable(\"timestamp\", time1);",
									"postman.setGlobalVariable(\"timestamp2\", time2);",
									""
								],
								"type": "text/javascript",
								"id": "b8690174-c8c6-4960-80cc-455a90bdfe14"
							}
						}
					],
					"id": "1389d0fe-268e-404f-a489-b2464edcec05",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"Example Event\",\n    \"when\" : {\n        \"start_time\": {{timestamp}},\n        \"end_time\": {{timestamp2}}\n    },\n    \"location\": \"Coffee Shop\",\n    \"calendar_id\": \"{{calendar_id}}\",\n    \"participants\": [\n        {\n            \"email\": \"nylatest2@nylatest.onmicrosoft.com\",\n            \"name\": \"Sarah Nylanaut\"\n        }\n    ],\n        \"metadata\":{\n        \"hello\":\"goodbye\"\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/events?notify_participants=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "notify_participants",
									"value": "true"
								}
							]
						},
						"description": "Creates an event. Note that notify participants is set to true, so an email will be sent to invitees."
					},
					"response": []
				},
				{
					"name": "/events/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "c9206b08-8200-4fa6-9e60-954c5e4877be"
							}
						}
					],
					"id": "7425fff9-161d-4065-9dcd-1074b3efe827",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"Friday meeting\",\n    \"when\" : {\n        \"start_time\": {{timestamp}},\n        \"end_time\": {{timestamp2}}\n    },\n    \"location\": \"Nylas HQ\",\n    \"calendar_id\": \"{{calendar_id}}\",\n    \"participants\": [\n        {\n            \"email\": \"{{email}}\",\n            \"name\": \"Name Change\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/events/{{event_id}}?notify_participants=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"events",
								"{{event_id}}"
							],
							"query": [
								{
									"key": "notify_participants",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/events/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"event_id\", \"set_id_in_postman_prerequest_script\");"
								],
								"id": "91eb66db-d0ca-4ca8-b772-fbede5342763"
							}
						}
					],
					"id": "45a9373b-fd61-453b-97bc-d33ced88dd63",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/events/{{event_id}}?notify_participants=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"events",
								"{{event_id}}"
							],
							"query": [
								{
									"key": "notify_participants",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/send-rsvp",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"event_id\", \"set_id_in_postman_prerequest_script\");"
								],
								"id": "11d1cdec-b0bc-47ca-beaf-e6a93875ca8b"
							}
						}
					],
					"id": "dc513901-98be-4db2-b5ac-0efec3cf887e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event_id\": \"{{event_id}}\",\n    \"status\": \"yes\",\n    \"comment\": \"Excited to come!\"\n}"
						},
						"url": {
							"raw": "{{url}}/send-rsvp/",
							"host": [
								"{{url}}"
							],
							"path": [
								"send-rsvp",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Recurring Event",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now()/1000;",
									"var time2 = time1 + 30*60; // 30 min",
									"postman.setGlobalVariable(\"timestamp\", time1);",
									"postman.setGlobalVariable(\"timestamp2\", time2);",
									""
								],
								"type": "text/javascript",
								"id": "0bedb684-4403-4fb4-a33a-154f4129cf40"
							}
						}
					],
					"id": "39f87e9b-6860-46dc-9665-58c6c340110c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"Example Event\",\n    \"when\" : {\n        \"start_time\": {{timestamp}},\n        \"end_time\": {{timestamp2}}\n    },\n    \"location\": \"Coffee Shop\",\n    \"calendar_id\": \"{{calendar_id}}\",\n    \"participants\": [\n        {\n            \"email\": \"nylatest2@nylatest.onmicrosoft.com\",\n            \"name\": \"Sarah Nylanaut\"\n        }\n    ],\n    \"recurrence\": {\n\t\t\"rrule\": [\n\t\t\t \"RRULE:FREQ=WEEKLY;BYDAY=WE;INTERVAL=2\"\n\t\t],\n\t\"timezone\": \"America/New_York\"\n\t}\t\n\n}"
						},
						"url": {
							"raw": "{{url}}/events?notify_participants=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "notify_participants",
									"value": "true"
								}
							]
						},
						"description": "Creates a recurring event by adding the recurrence object. See https://docs.nylas.com/reference#event-subobjects for more info."
					},
					"response": []
				}
			],
			"id": "92aecf18-4e83-4bf9-95fb-ae4d5908d452"
		},
		{
			"name": "Contacts",
			"item": [
				{
					"name": "/contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.environment.set(\"contact_id\", jsonData[0][\"id\"]);"
								],
								"type": "text/javascript",
								"id": "e3358363-b73a-4d18-bf49-0bf869c1720d"
							}
						}
					],
					"id": "551bb473-9481-4917-80f3-561347394cf9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/contacts",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"disabled": true
								},
								{
									"key": "street_address",
									"value": "",
									"disabled": true
								},
								{
									"key": "postal_code",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"disabled": true
								},
								{
									"key": "country",
									"value": "",
									"disabled": true
								},
								{
									"key": "source",
									"value": "address_book",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/contacts/groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.environment.set(\"contact_id\", jsonData[0][\"id\"]);"
								],
								"type": "text/javascript",
								"id": "60386caf-6275-4c8b-897c-d0ec90df1817"
							}
						}
					],
					"id": "cbdffa52-a826-485c-a746-a58aa6b15d2f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/contacts/groups",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts",
								"groups"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"disabled": true
								},
								{
									"key": "street_address",
									"value": "",
									"disabled": true
								},
								{
									"key": "postal_code",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"disabled": true
								},
								{
									"key": "country",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/contacts/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "523536d5-8de8-48e8-a3f3-739f6c1a4a31"
							}
						}
					],
					"id": "505a71fb-5182-433f-b326-e7039a10df51",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/contacts/{{contact_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"disabled": true
								},
								{
									"key": "street_address",
									"value": "",
									"disabled": true
								},
								{
									"key": "postal_code",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"disabled": true
								},
								{
									"key": "country",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "2180027b-85de-494e-8cec-a2eb71d71fba"
							}
						}
					],
					"id": "0ec31789-db03-413a-ba7c-7ad5a1d3f8ff",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"emails\": [{\n  \t\"type\": \"work\",\n  \t\"email\": \"created@gmail.com\"\n  }\n  ],\n  \"im_addresses\": [{\n  \t\"type\": \"aim\",\n  \t\"im_address\": \"snake\"\n  }],\n  \"physical_addresses\": [{\n  \t\"format\": \"structured\",\n  \t\"type\": \"work\",\n  \t\"street_address\": \"1235 Street\",\n  \t\"city\": \"San Francisco\",\n  \t\"postal_code\": \"94103\",\n  \t\"state\": \"CA\",\n  \t\"country\": \"USA\"\n  } ],\n  \"phone_numbers\": [\n  \t{\n  \t\t\"type\":\"home\",\n  \t\t\"number\": \"123-123-1234\"\n  \t}],\n  \t\"group\": \"bmeg4pze0qxcjxrndor26v7lr\"\n}"
						},
						"url": {
							"raw": "{{url}}/contacts",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"disabled": true
								},
								{
									"key": "street_address",
									"value": "",
									"disabled": true
								},
								{
									"key": "postal_code",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"disabled": true
								},
								{
									"key": "country",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "42f9c563-b579-41ef-b9de-06055cf23585"
							}
						}
					],
					"id": "3eb34412-33b1-4dc9-afbf-1a7b13e34710",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"emails\": [{\n  \t\"type\": \"work\",\n  \t\"email\": \"{{email}}\"\n  }\n  ],\n  \"im_addresses\": [{\n  \t\"type\": \"aim\",\n  \t\"im_address\": \"snake\"\n  }],\n  \"physical_addresses\": [{\n  \t\"format\": \"structured\",\n  \t\"type\": \"work\",\n  \t\"street_address\": \"1235 Street\",\n  \t\"city\": \"San Francisco\",\n  \t\"postal_code\": \"94103\",\n  \t\"state\": \"CA\",\n  \t\"country\": \"USA\"\n  } ],\n  \"phone_numbers\": [\n  \t{\n  \t\t\"type\":\"home\",\n  \t\t\"number\": \"123-123-1234\"\n  \t}],\n  \"given_name\": \"asdf\",\n  \"middle_name\": \"asdf\",\n  \"surname\": \"asdf\",\n  \"birthday\": \"asdf\",\n  \"suffix\": \"asdf\",\n  \"nickname\": \"asdf\",\n  \"company_name\": \"asdf\",\n  \"job_title\": \"asdf\",\n  \"manager_name\": \"asdf\",\n  \"office_location\": \"asdf\",\n  \"notes\": \"asdf\"\n}"
						},
						"url": {
							"raw": "{{url}}/contacts/{{contact_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"disabled": true
								},
								{
									"key": "street_address",
									"value": "",
									"disabled": true
								},
								{
									"key": "postal_code",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"disabled": true
								},
								{
									"key": "country",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "7c0086a9-ccfe-436f-bb27-0c1ee42a18e1"
							}
						}
					],
					"id": "7bd925f3-cc9c-4243-954c-c4ededf84a76",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/contacts/{{contact_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"disabled": true
								},
								{
									"key": "street_address",
									"value": "",
									"disabled": true
								},
								{
									"key": "postal_code",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"disabled": true
								},
								{
									"key": "country",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/contacts/:id/picture",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"id": "ab7db45d-d705-45a6-ab39-70ed2657e884"
							}
						}
					],
					"id": "435ab422-be27-44e9-8094-d9ad4dfa42dd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/contacts/{{contact_id}}/picture",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts",
								"{{contact_id}}",
								"picture"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"disabled": true
								},
								{
									"key": "street_address",
									"value": "",
									"disabled": true
								},
								{
									"key": "postal_code",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"disabled": true
								},
								{
									"key": "country",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "355e4565-10b0-48ed-bb76-dedf07916e6b"
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "/messages/search",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"id": "368000e8-aa06-401c-a0a4-adf3d9c8e99e"
							}
						}
					],
					"id": "8a40bfa3-595a-4702-8d71-fc5a4d25ac18",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/messages/search?q=test",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/threads/search",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"id": "713cd3a8-e965-4ab8-9470-df8c83a654e2"
							}
						}
					],
					"id": "8c623e4c-5441-4a64-9487-f9087986e07b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/threads/search?q=test",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "test"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "629c4018-3a03-4171-87ec-181c11b30269"
		},
		{
			"name": "Webhooks",
			"item": [
				{
					"name": "/webhooks/",
					"id": "053558ea-4eb3-44f1-affc-af62965e63e3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/a/{{client_id}}/webhooks/",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"webhooks",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/webhooks/",
					"id": "a8e0b161-2947-4fb3-a48c-66caf87f4c88",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"callback_url\": \"https://084eb929.ngrok.io/webook\",\n\t\"triggers\": [\"message.opened\"],\n\t\"state\": \"active\"\n}"
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}/webhooks/",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"webhooks",
								""
							]
						},
						"description": "Creates a new webhook for the specified client ID"
					},
					"response": [
						{
							"id": "71f1578c-5776-4148-b924-6f3c4ff22bc0",
							"name": "/webhooks/",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"callback_url\": \"https://084eb929.ngrok.io/webhook\",\n\t\"triggers\": [\"message.opened\"],\n\t\"state\": \"active\"\n}"
								},
								"url": {
									"raw": "{{url}}/a/{{client_id}}/webhooks/",
									"host": [
										"{{url}}"
									],
									"path": [
										"a",
										"{{client_id}}",
										"webhooks",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "JSON",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Tue, 23 Jul 2019 21:06:19 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "244"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src https: 'unsafe-eval' 'unsafe-inline'; object-src 'none'"
								}
							],
							"cookie": [],
							"body": "{\n    \"application_id\": \"6yvh3ynadnwqtumyfper72svf\",\n    \"callback_url\": \"https://084eb929.ngrok.io/webhook\",\n    \"id\": \"6cclep8i8aqknqnjqxsgs3ycw\",\n    \"state\": \"active\",\n    \"triggers\": [\n        \"message.opened\"\n    ],\n    \"version\": \"2.0\"\n}"
						}
					]
				},
				{
					"name": "/webhooks/{id}",
					"id": "6296a8b0-f111-4729-a1e7-040b9894fde0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/a/{{client_id}}/webhooks/{{webhook_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"webhooks",
								"{{webhook_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/webhooks/{id}",
					"id": "af99cba9-b04a-4f5c-90a7-4dd9355f5d1a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"state\": \"inactive\"\n}"
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}/webhooks/{{webhook_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"webhooks",
								"{{webhook_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/webhooks/{id}",
					"id": "e1dac4d4-9f00-41a3-b5bd-c4b0c377c8ef",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/a/{{client_id}}/webhooks/{{webhook_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"webhooks",
								"{{webhook_id}}"
							]
						}
					},
					"response": [
						{
							"id": "a91d4e13-22b8-4de2-b0f5-1d5d4f373ac4",
							"name": "Delete Webhook ID",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/a/{{client_id}}/webhooks/{{webhook_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"a",
										"{{client_id}}",
										"webhooks",
										"{{webhook_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "JSON",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Tue, 23 Jul 2019 21:17:30 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "4"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src https: 'unsafe-eval' 'unsafe-inline'; object-src 'none'"
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				}
			],
			"id": "086d293c-085d-4a6a-9312-bbdbdabc3e12"
		},
		{
			"name": "Deltas",
			"item": [
				{
					"name": "/delta/latest_cursor",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Response contains cursor\"] = responseBody.has(\"cursor\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Cursor value exists\"] = jsonData.cursor.length > 0;",
									"",
									"postman.setEnvironmentVariable(\"cursor_id\", jsonData.cursor);"
								],
								"id": "61c51795-bef6-439b-bf32-bbad00cefe56"
							}
						}
					],
					"id": "71285c73-25c9-4303-9fa0-db65f779955b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/delta/latest_cursor",
							"host": [
								"{{url}}"
							],
							"path": [
								"delta",
								"latest_cursor"
							]
						}
					},
					"response": []
				},
				{
					"name": "/delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Response contains cursor start\"] = responseBody.has(\"cursor_start\");",
									"tests[\"Response contains cursor end\"] = responseBody.has(\"cursor_end\");",
									"tests[\"Response contains deltas\"] = responseBody.has(\"deltas\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Cursor value exists\"] = jsonData.cursor_start.length > 0;",
									"pm.environment.set(\"cursor_id\", jsonData.cursor_end);",
									""
								],
								"type": "text/javascript",
								"id": "b9b33bd8-5a15-40f3-88da-f8154326938d"
							}
						}
					],
					"id": "f2e36480-2441-4508-b4e3-7fc625166a38",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/delta?cursor={{cursor_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"delta"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/delta/longpoll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Response contains cursor start\"] = responseBody.has(\"cursor_start\");",
									"tests[\"Response contains cursor end\"] = responseBody.has(\"cursor_end\");",
									"tests[\"Response contains deltas\"] = responseBody.has(\"deltas\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Cursor value exists\"] = jsonData.cursor_start.length > 0;",
									"pm.environment.set(\"cursor_id\", jsonData.cursor_end);",
									""
								],
								"type": "text/javascript",
								"id": "de289e66-6892-46c0-bd88-2c90377a8dd5"
							}
						}
					],
					"id": "c7726403-b984-4ac4-918f-37e77dc7449e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/delta/longpoll?cursor={{cursor_id}}&timeout=1",
							"host": [
								"{{url}}"
							],
							"path": [
								"delta",
								"longpoll"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor_id}}"
								},
								{
									"key": "timeout",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/delta/streaming",
					"id": "dbea877e-060b-49a8-8cfa-4a4fd01dd3fd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/delta/streaming?cursor={{cursor_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"delta",
								"streaming"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/delta with filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Response contains cursor\"] = responseBody.has(\"cursor_start\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Cursor value exists\"] = jsonData.cursor_start.length > 0;",
									""
								],
								"id": "fec92289-b04a-4670-97d7-90b65ce5153c"
							}
						}
					],
					"id": "ccb4ab7b-e3f9-4143-a7b2-61f883691477",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/delta?cursor={{cursor_id}}&include_types=draft,thread",
							"host": [
								"{{url}}"
							],
							"path": [
								"delta"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor_id}}"
								},
								{
									"key": "include_types",
									"value": "draft,thread"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "b90418f3-8d7d-4014-b9cd-235ac76790d3"
		},
		{
			"name": "Filters",
			"item": [
				{
					"name": "/threads with filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "2ec69cde-49a2-4a5c-94e3-d55dcf3a1f2f"
							}
						}
					],
					"id": "f8417ab5-72f8-44ef-a4b8-bd9de6ffc395",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/threads?unread=true&any_email={{email}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads"
							],
							"query": [
								{
									"key": "unread",
									"value": "true"
								},
								{
									"key": "any_email",
									"value": "{{email}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "ff1897b5-aaa6-400d-892d-2b9d18c2801e"
		},
		{
			"name": "Pagination",
			"item": [
				{
					"name": "/threads limit and offset",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "eb5a8d0b-81b2-4d8e-b4bb-4340deea4d45"
							}
						}
					],
					"id": "6139185e-f360-4d0d-8a9a-aee08bb77028",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/threads?limit=2&offset=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								},
								{
									"key": "offset",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "cd7b8e43-b875-4ed0-8d3c-aa5e1be3ab49"
		},
		{
			"name": "Views",
			"item": [
				{
					"name": "/messages view ids",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"message_id\", jsonData[0].id);"
								],
								"id": "5b279df4-146c-461d-8dfd-3f7b08609db9"
							}
						}
					],
					"id": "e5b44b29-e34c-44af-bc4e-8d337525777f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/messages?view=ids",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages"
							],
							"query": [
								{
									"key": "view",
									"value": "ids"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/threads count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"message_id\", jsonData[0].id);"
								],
								"id": "6ae59853-ed1a-4481-9510-72a649592ef9"
							}
						}
					],
					"id": "3b62021a-26f5-4dde-ad40-5184edbcccde",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/threads?view=count",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads"
							],
							"query": [
								{
									"key": "view",
									"value": "count"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/threads view expanded",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"message_id\", jsonData[0].id);"
								],
								"id": "0c2841df-bd0b-4d50-ae2c-0c57a6d0663a"
							}
						}
					],
					"id": "274f1c9f-463f-4225-88a8-94638f475536",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/threads?view=expanded",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads"
							],
							"query": [
								{
									"key": "view",
									"value": "expanded"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "a5197b46-829b-4089-bdfc-6d3ce8685ce0"
		},
		{
			"name": "Job Status",
			"item": [
				{
					"name": "/job-statuses/id",
					"id": "f7ef05e3-5580-4c45-9b89-28ccfb8ae3b0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/job-statuses/{job_status_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"job-statuses",
								"{job_status_id}"
							]
						},
						"description": "Get the job status for a specific job_status_id. States for this can be successful, pending, or failed. "
					},
					"response": []
				},
				{
					"name": "/job-statuses",
					"id": "76115564-dcad-4077-9050-0551397f2c64",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/job-statuses",
							"host": [
								"{{url}}"
							],
							"path": [
								"job-statuses"
							]
						},
						"description": "A list of all job status by ID. "
					},
					"response": []
				}
			],
			"id": "55172692-4aac-446d-8986-707e686b3d3c"
		},
		{
			"name": "Neural APIs",
			"item": [
				{
					"name": "Conversation",
					"item": [
						{
							"name": "Conversation",
							"id": "3ed5af47-fc4d-4a6f-952d-f3d7fa2be6a7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message_id\": [\n    \"{{message_ids}}\"\n  ],\n  \"ignore_links\": true,\n  \"ignore_images\": true,\n  \"ignore_tables\": true,\n  \"remove_conclusion_phrases\": true,\n  \"images_as_markdown\": true\n}"
								},
								"url": {
									"raw": "{{url}}/neural/conversation",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"conversation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Conversation Feedback",
							"id": "a23566a0-1bda-4f18-9470-71cc3d0a20cb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message_id\": \"{{message_id}}\"\n}"
								},
								"url": {
									"raw": "{{url}}/neural/conversation/feedback",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"conversation",
										"feedback"
									]
								}
							},
							"response": []
						}
					],
					"id": "9a2a57a2-bd51-46c3-b019-a3e606097f8f"
				},
				{
					"name": "Categorize",
					"item": [
						{
							"name": "Categorize",
							"id": "acab2fda-8800-4f85-9451-04892f0b51ce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message_id\": [\n    \"{{array_of_message_ids}}\"\n  ],\n  \"only_category\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/neural/categorize",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"categorize"
									]
								}
							},
							"response": []
						},
						{
							"name": "Categorize Feedback",
							"id": "6d809e4e-5106-436d-af0d-31786bb0e016",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message_id\": \"{{message_id}}\",\n  \"category\": \"{{message_category}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/neural/categorize/feedback",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"categorize",
										"feedback"
									]
								},
								"description": "Category can be:\n* `feed`\n* `conversation`"
							},
							"response": []
						}
					],
					"id": "c97fb2c4-befe-4900-830b-db739ef49bc8"
				},
				{
					"name": "Signature",
					"item": [
						{
							"name": "Signature",
							"id": "fe39ba3d-46a5-42f4-b4aa-ae0529649ebf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message_id\": [\n    \"{{message_id}}\"\n  ],\n  \"ignore_links\": true,\n  \"ignore_images\": true,\n  \"ignore_tables\": true,\n  \"remove_conclusion_phrases\": true,\n  \"images_as_markdown\": true,\n  \"parse_contacts\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/neural/signature",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"signature"
									]
								}
							},
							"response": []
						},
						{
							"name": "Signature Feedback",
							"id": "af12ca6b-246f-43d1-823e-e4431d6c719e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message_id\":\"{{message_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/neural/signature/feedback",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"signature",
										"feedback"
									]
								}
							},
							"response": []
						}
					],
					"id": "af9c8185-2306-4c42-b99e-209499e149f3"
				},
				{
					"name": "Optical Charecter Recognition",
					"item": [
						{
							"name": "OCR",
							"id": "0faba796-1eca-4935-abf7-24c32773a886",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n     \"file_id\": \"{{file_id}}\",\n     \"pages\": [{{array_of_page_numbers}}]\n}"
								},
								"url": {
									"raw": "{{url}}/neural/ocr",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"ocr"
									]
								}
							},
							"response": []
						},
						{
							"name": "OCR Feedback",
							"id": "dda43170-3d21-48ae-b85f-1c41cabdad78",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"file_id\":\"{{file_id}}\"\n}"
								},
								"url": {
									"raw": "{{url}}/neural/ocr/feedback",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"ocr",
										"feedback"
									]
								}
							},
							"response": []
						}
					],
					"id": "5ef6510e-a274-4fc2-938e-9b1993b751be"
				},
				{
					"name": "Sentiment",
					"item": [
						{
							"name": "PUT Sentiment Analysis",
							"id": "8824b8b8-9808-4522-8af4-4fad4a13f987",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"text\": \"{{text}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/neural/sentiment",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"sentiment"
									]
								}
							},
							"response": [
								{
									"id": "d7594c52-931a-417b-888b-13d27890e578",
									"name": "PUT Sentiment Analysis",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"message_id\": [\n    \"{{message_id}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/neural/sentiment",
											"host": [
												"{{url}}"
											],
											"path": [
												"neural",
												"sentiment"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Sentiment Feedback",
							"id": "449439c2-691b-46fb-be93-85ffe724e92a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sentiment\": \"positive\",\n  \"overwrite\": true,\n  \"message_id\": \"{{message_id}}\"\n}"
								},
								"url": {
									"raw": "{{url}}/neural/sentiment/feedback",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"sentiment",
										"feedback"
									]
								}
							},
							"response": []
						}
					],
					"id": "0e18be6a-983f-47ce-af7f-2c3807e05921"
				}
			],
			"id": "39de47f0-6360-4447-bca9-770fdab2e5cf"
		},
		{
			"name": "Scheduler",
			"item": [
				{
					"name": "Return All Scheduling Pages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "ee6de9c2-2711-44e5-b363-e36303f872bb"
							}
						}
					],
					"id": "11784f98-5a31-4545-a785-144253b310cc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.schedule.nylas.com/manage/pages",
							"protocol": "https",
							"host": [
								"api",
								"schedule",
								"nylas",
								"com"
							],
							"path": [
								"manage",
								"pages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Scheduling Page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "873ff972-639b-4e80-8dc6-8f655008b681"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const slug = pm.variables.replaceIn('{{$randomLoremSlug}}');",
									"const reminderMessage = pm.variables.replaceIn('{{$randomLoremWords}}');",
									"const messageTitle = pm.variables.replaceIn('{{$randomProductName}}');",
									"",
									"pm.globals.set(\"url_slug\", slug);",
									"pm.globals.set(\"reminder_message_text\", reminderMessage);",
									"pm.globals.set(\"reminder_message_title\", messageTitle)"
								],
								"type": "text/javascript",
								"id": "e63054a1-62ef-4f5c-a287-c11e99a9bc0c"
							}
						}
					],
					"id": "b17ae76c-b339-41eb-bb2d-6e19c76235c7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"access_tokens\": [\"{{access_token}}\"],\n    \"config\": {\n        \"booking\": {\n            \"additional_fields\": [],\n            \"additional_guests_hidden\": false,\n            \"available_days_in_future\": 21,\n            \"calendar_invite_to_guests\": true,\n            \"confirmation_emails_to_guests\": true,\n            \"confirmation_emails_to_host\": true,\n            \"confirmation_method\": \"automatic\",\n            \"min_booking_notice\": 15,\n            \"min_buffer\": 0,\n            \"min_cancellation_notice\": 15,\n            \"name_field_hidden\": false,\n            \"opening_hours\": [\n                {\n                    \"account_id\": \"{{account_id}}\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"start\": \"09:00\",\n                    \"end\": \"17:00\"\n                }\n            ]\n        },\n        \"calendar_ids\": {\n            \"{{account_id}}\": {\n                \"availability\": [\n                    \"{{calendar_id}}\"\n                ],\n                \"booking\": \"{{calendar_id}}\"\n            }\n        },\n        \"event\": {\n            \"capacity\": 1,\n            \"duration\": 30,\n            \"location\": \"Zoom Link\",\n            \"title\": \"Scheduler Example - {{reminder_message_title}}\"\n        },\n        \"locale\": \"en\",\n        \"timezone\": \"America/Denver\",\n        \"reminders\": [\n        {\n            \"delivery_method\": \"email\",\n            \"delivery_recipient\": \"both\",\n            \"time_before_event\": \"30\",\n            \"email_subject\": \"Reminder - {{reminder_message_title}} about to start\"\n        }\n        ]\n    },\n    \"name\": \"Scheduler Example - {{reminder_message_title}}\",\n    \"slug\": \"{{url_slug}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.schedule.nylas.com/manage/pages",
							"protocol": "https",
							"host": [
								"api",
								"schedule",
								"nylas",
								"com"
							],
							"path": [
								"manage",
								"pages"
							]
						}
					},
					"response": [
						{
							"id": "bd4ce80a-ba77-4c0b-87fb-5fc230a56aff",
							"name": "Create a Scheduling Page - Round Robin - Max Fairness",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_tokens\": [\"{{access_token}}\", \"{{round_robin_access_token}}\"],\n    \"config\": {\n        \"booking\": {\n            \"additional_fields\": [],\n            \"additional_guests_hidden\": false,\n            \"available_days_in_future\": 21,\n            \"calendar_invite_to_guests\": true,\n            \"confirmation_emails_to_guests\": true,\n            \"confirmation_emails_to_host\": true,\n            \"confirmation_method\": \"automatic\",\n            \"min_booking_notice\": 0,\n            \"min_buffer\": 0,\n            \"min_cancellation_notice\": 0,\n            \"name_field_hidden\": false,\n            \"opening_hours\": [\n                {\n                    \"account_id\": \"{{account_id}}\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"20:30\",\n                    \"start\": \"07:00\"\n                },\n                {\n                    \"account_id\": \"{{round_robin_account_id}}\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\",\n                        \"S\",\n                        \"U\"\n                    ],\n                    \"end\": \"20:30\",\n                    \"start\": \"10:00\"\n                }\n            ],\n            \"scheduling_method\": \"round-robin-maximize-fairness\"\n        },\n        \"calendar_ids\": {\n            \"{{account_id}}\": {\n                \"availability\": [\n                    \"{{calendar_id}}\"\n                ],\n                \"booking\": \"{{calendar_id}}\"\n            },\n            \"{{round_robin_account_id}}\": {\n                \"availability\": [\n                    \"{{round_robin_calendar_id}}\"\n                ],\n                \"booking\": \"{{round_robin_calendar_id}}\"\n            }\n        },\n        \"event\": {\n            \"capacity\": 10,\n            \"duration\": 60,\n            \"location\": \"Zoom Link\",\n            \"title\": \"Round Robin Meeting - Max Fairness\"\n        },\n        \"locale\": \"en\",\n        \"timezone\": \"America/Los_Angeles\"\n    },\n    \"name\": \"Round Robin Meeting - Max Fairness\",\n    \"slug\": \"round-robin-max-fairness\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.schedule.nylas.com/manage/pages",
									"protocol": "https",
									"host": [
										"api",
										"schedule",
										"nylas",
										"com"
									],
									"path": [
										"manage",
										"pages"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"id": "fba2153d-d458-4c4c-ae5f-ffad3867d243",
							"name": "Create a Scheduling Page - Round Robin Fairness - 4 ppl",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_tokens\": [\"{{access_token}}\", \"{{round_robin_access_token}}\", \"{{round_robin_access_token2}}\", \"{{round_robin_access_token3}}\"],\n    \"config\": {\n        \"booking\": {\n            \"additional_fields\": [],\n            \"additional_guests_hidden\": false,\n            \"available_days_in_future\": 21,\n            \"calendar_invite_to_guests\": true,\n            \"confirmation_emails_to_guests\": true,\n            \"confirmation_emails_to_host\": true,\n            \"confirmation_method\": \"automatic\",\n            \"min_booking_notice\": 0,\n            \"min_buffer\": 0,\n            \"min_cancellation_notice\": 0,\n            \"name_field_hidden\": false,\n            \"opening_hours\": [\n                {\n                    \"account_id\": \"{{account_id}}\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                },\n                {\n                    \"account_id\": \"{{round_robin_account_id}}\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                },\n                {\n                    \"account_id\": \"{{round_robin_account_id2}}\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                },\n                {\n                    \"account_id\": \"{{round_robin_account_id3}}\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                }\n            ],\n            \"scheduling_method\": \"round-robin-maximize-fairness\"\n        },\n        \"calendar_ids\": {\n            \"{{account_id}}\": {\n                \"availability\": [\n                    \"{{calendar_id}}\"\n                ],\n                \"booking\": \"{{calendar_id}}\"\n            },\n            \"{{round_robin_account_id}}\": {\n                \"availability\": [\n                    \"{{round_robin_calendar_id}}\"\n                ],\n                \"booking\": \"{{round_robin_calendar_id}}\"\n            },\n            \"{{round_robin_account_id2}}\": {\n                \"availability\": [\n                    \"{{round_robin_calendar_id2}}\"\n                ],\n                \"booking\": \"{{round_robin_calendar_id2}}\"\n            },\n            \"{{round_robin_account_id3}}\": {\n                \"availability\": [\n                    \"{{round_robin_calendar_id3}}\"\n                ],\n                \"booking\": \"{{round_robin_calendar_id3}}\"\n            }\n        },\n        \"event\": {\n            \"capacity\": 1,\n            \"duration\": 30,\n            \"location\": \"Zoom Link\",\n            \"title\": \"Round Robin Meeting - Max Fairness\"\n        },\n        \"locale\": \"en\",\n        \"timezone\": \"America/Los_Angeles\"\n    },\n    \"name\": \"Round Robin Meeting - Max Fairness\",\n    \"slug\": \"round-robin-4ppl-max-fairness\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.schedule.nylas.com/manage/pages",
									"protocol": "https",
									"host": [
										"api",
										"schedule",
										"nylas",
										"com"
									],
									"path": [
										"manage",
										"pages"
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 11 Jan 2022 22:58:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "3593"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Permissions-Policy",
									"value": "interest-cohort=()"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Security-Policy",
									"value": "img-src 'self' data:; default-src 'self' 'unsafe-inline';"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800; includeSubDomains"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "6cc1c0503cb94955-STL"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_tokens\": [\n        {\n            \"account_email\": \"maxverstappen443@gmail.com\",\n            \"account_name\": \"Max Verstappen\"\n        },\n        {\n            \"account_email\": \"fastlewis443@gmail.com\",\n            \"account_name\": \"Lewis Hamilton\"\n        },\n        {\n            \"account_email\": \"ferraricharles443@gmail.com\",\n            \"account_name\": \"Charles Leclerc\"\n        },\n        {\n            \"account_email\": \"ferraricarlos443@gmail.com\",\n            \"account_name\": \"Carlos Sainz\"\n        }\n    ],\n    \"app_client_id\": \"28w95fajm5a24om779nqaapk5\",\n    \"app_organization_id\": 122496,\n    \"config\": {\n        \"appearance\": {\n            \"color\": \"#0068D3\",\n            \"company_name\": \"\",\n            \"logo\": \"\",\n            \"show_autoschedule\": true,\n            \"show_nylas_branding\": false,\n            \"show_timezone_options\": true,\n            \"show_week_view\": true,\n            \"submit_text\": \"Submit\"\n        },\n        \"booking\": {\n            \"additional_fields\": [],\n            \"additional_guests_hidden\": false,\n            \"available_days_in_future\": 21,\n            \"calendar_invite_to_guests\": true,\n            \"confirmation_emails_to_guests\": true,\n            \"confirmation_emails_to_host\": true,\n            \"confirmation_method\": \"automatic\",\n            \"min_booking_notice\": 0,\n            \"min_buffer\": 0,\n            \"min_cancellation_notice\": 0,\n            \"name_field_hidden\": false,\n            \"opening_hours\": [\n                {\n                    \"account_id\": \"8vyhsgduvyq6cmuc2g604rvj3\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                },\n                {\n                    \"account_id\": \"qodmzobd6fcjrrasb9vc8ieo\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                },\n                {\n                    \"account_id\": \"60zlocdpa1yqso979ic9ceid5\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                },\n                {\n                    \"account_id\": \"a4z6bvtrfu3057vowk4ad93ds\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                }\n            ],\n            \"scheduling_method\": \"round-robin-maximize-fairness\"\n        },\n        \"calendar_ids\": {\n            \"60zlocdpa1yqso979ic9ceid5\": {\n                \"availability\": [\n                    \"advih2z3zlrrgnc8450cbgn4f\"\n                ],\n                \"booking\": \"advih2z3zlrrgnc8450cbgn4f\"\n            },\n            \"8vyhsgduvyq6cmuc2g604rvj3\": {\n                \"availability\": [\n                    \"4n7p7557115lhjygk7x83cckv\"\n                ],\n                \"booking\": \"4n7p7557115lhjygk7x83cckv\"\n            },\n            \"a4z6bvtrfu3057vowk4ad93ds\": {\n                \"availability\": [\n                    \"7jywnqennkdj2vcm7xtmnowds\"\n                ],\n                \"booking\": \"7jywnqennkdj2vcm7xtmnowds\"\n            },\n            \"qodmzobd6fcjrrasb9vc8ieo\": {\n                \"availability\": [\n                    \"9yfcfr9akjjs5dhdr6ppv15f6\"\n                ],\n                \"booking\": \"9yfcfr9akjjs5dhdr6ppv15f6\"\n            }\n        },\n        \"event\": {\n            \"capacity\": 1,\n            \"duration\": 30,\n            \"location\": \"Zoom Link\",\n            \"title\": \"Round Robin Meeting - Max Fairness\"\n        },\n        \"features\": {\n            \"collective_meetings\": false\n        },\n        \"locale\": \"en\",\n        \"reminders\": [],\n        \"timezone\": \"America/Los_Angeles\"\n    },\n    \"created_at\": \"2022-01-11\",\n    \"edit_token\": \"7utnDH0Amo5mIaF1vb8KfuFQbMIfuAwE\",\n    \"id\": 1425052,\n    \"modified_at\": \"2022-01-11\",\n    \"name\": \"Round Robin Meeting - Max Fairness\",\n    \"slug\": \"round-robin-4ppl-max-fairness\"\n}"
						},
						{
							"id": "417c4741-dc8b-4f10-a802-d902bb4dbc9f",
							"name": "Create a Scheduling Page - Basic 30 min",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_tokens\": [\"{{access_token}}\"],\n    \"config\": {\n        \"booking\": {\n            \"additional_fields\": [],\n            \"additional_guests_hidden\": false,\n            \"available_days_in_future\": 21,\n            \"calendar_invite_to_guests\": true,\n            \"confirmation_emails_to_guests\": true,\n            \"confirmation_emails_to_host\": true,\n            \"confirmation_method\": \"automatic\",\n            \"min_booking_notice\": 15,\n            \"min_buffer\": 0,\n            \"min_cancellation_notice\": 15,\n            \"name_field_hidden\": false,\n            \"opening_hours\": [\n                {\n                    \"account_id\": \"{{account_id}}\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"start\": \"09:00\",\n                    \"end\": \"17:00\"\n                }\n            ]\n        },\n        \"calendar_ids\": {\n            \"{{account_id}}\": {\n                \"availability\": [\n                    \"{{calendar_id}}\"\n                ],\n                \"booking\": \"{{calendar_id}}\"\n            }\n        },\n        \"event\": {\n            \"capacity\": 1,\n            \"duration\": 30,\n            \"location\": \"Zoom Link\",\n            \"title\": \"Scheduler Example - {{reminder_message_title}}\"\n        },\n        \"locale\": \"en\",\n        \"timezone\": \"America/Denver\",\n        \"reminders\": [\n        {\n            \"delivery_method\": \"email\",\n            \"delivery_recipient\": \"both\",\n            \"time_before_event\": \"30\",\n            \"email_subject\": \"Reminder - {{reminder_message_title}} about to start\"\n        }\n        ]\n    },\n    \"name\": \"Scheduler Example - {{reminder_message_title}}\",\n    \"slug\": \"{{url_slug}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.schedule.nylas.com/manage/pages",
									"protocol": "https",
									"host": [
										"api",
										"schedule",
										"nylas",
										"com"
									],
									"path": [
										"manage",
										"pages"
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 07 Feb 2022 17:36:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "2230"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Permissions-Policy",
									"value": "interest-cohort=()"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Security-Policy",
									"value": "img-src 'self' data:; default-src 'self' 'unsafe-inline';"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800; includeSubDomains"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "6d9e61cefdffc7b5-DEN"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token_infos\": [\n        {\n            \"account_email\": \"adam.b@nylas.com\",\n            \"account_name\": \"Adam Bauman\"\n        }\n    ],\n    \"app_client_id\": \"28w95fajm5a24om779nqaapk5\",\n    \"app_organization_id\": 122496,\n    \"config\": {\n        \"appearance\": {\n            \"color\": \"#0068D3\",\n            \"company_name\": \"\",\n            \"logo\": \"\",\n            \"show_autoschedule\": true,\n            \"show_nylas_branding\": false,\n            \"show_timezone_options\": true,\n            \"show_week_view\": true,\n            \"submit_text\": \"Submit\"\n        },\n        \"booking\": {\n            \"additional_fields\": [],\n            \"additional_guests_hidden\": false,\n            \"available_days_in_future\": 21,\n            \"calendar_invite_to_guests\": true,\n            \"confirmation_emails_to_guests\": true,\n            \"confirmation_emails_to_host\": true,\n            \"confirmation_method\": \"automatic\",\n            \"min_booking_notice\": 0,\n            \"min_buffer\": 0,\n            \"min_cancellation_notice\": 0,\n            \"name_field_hidden\": false,\n            \"opening_hours\": [\n                {\n                    \"account_id\": \"31do88a3z9voyc2y6jm8udnby\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                }\n            ],\n            \"scheduling_method\": \"round-robin-maximize-availability\"\n        },\n        \"calendar_ids\": {\n            \"31do88a3z9voyc2y6jm8udnby\": {\n                \"availability\": [\n                    \"4o2zuj77j1duoh9gaz19lr8im\"\n                ],\n                \"booking\": \"4o2zuj77j1duoh9gaz19lr8im\"\n            }\n        },\n        \"event\": {\n            \"capacity\": 1,\n            \"duration\": 30,\n            \"location\": \"Zoom Link\",\n            \"title\": \"Scheduler Example - Practical Plastic Computer\"\n        },\n        \"features\": {\n            \"collective_meetings\": false\n        },\n        \"locale\": \"en\",\n        \"reminders\": [\n            {\n                \"delivery_method\": \"email\",\n                \"delivery_recipient\": \"both\",\n                \"email_subject\": \"Reminder - Practical Plastic Computer about to start\",\n                \"time_before_event\": 30\n            }\n        ],\n        \"timezone\": \"America/Denver\"\n    },\n    \"created_at\": \"2022-02-07\",\n    \"edit_token\": \"Mn46lJoeU_WBrt1H5aSN0LdJZkHDHOLr\",\n    \"id\": 1722747,\n    \"modified_at\": \"2022-02-07\",\n    \"name\": \"Scheduler Example - Practical Plastic Computer\",\n    \"slug\": \"ea-necessitatibus-non\"\n}"
						}
					]
				},
				{
					"name": "Return a Scheduling Page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "1b1227b3-5e54-4cae-994b-439d9b7c3580"
							}
						}
					],
					"id": "3260a1be-86ad-4048-9d82-973edb7d1477",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "page_id",
								"value": "883644",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.schedule.nylas.com/manage/pages/{{page_id}}",
							"protocol": "https",
							"host": [
								"api",
								"schedule",
								"nylas",
								"com"
							],
							"path": [
								"manage",
								"pages",
								"{{page_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Scheduling Page",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "44518e3d-d5f5-436e-8d00-9c883c903a38"
							}
						}
					],
					"id": "f55faaa0-42c3-4eed-95cc-812177c93603",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"access_token_infos\": [\n        {\n            \"account_email\": \"adam.b@nylas.com\",\n            \"account_name\": \"Adam Bauman\"\n        }\n    ],\n    \"app_client_id\": \"28w95fajm5a24om779nqaapk5\",\n    \"app_organization_id\": 122496,\n    \"config\": {\n        \"appearance\": {\n            \"color\": \"#0068D3\",\n            \"company_name\": \"\",\n            \"logo\": \"\",\n            \"show_autoschedule\": false,\n            \"show_nylas_branding\": false,\n            \"show_timezone_options\": true,\n            \"show_week_view\": true,\n            \"submit_text\": \"Submit\"\n        },\n        \"booking\": {\n            \"additional_fields\": [],\n            \"additional_guests_hidden\": false,\n            \"available_days_in_future\": 21,\n            \"calendar_invite_to_guests\": true,\n            \"confirmation_emails_to_guests\": true,\n            \"confirmation_emails_to_host\": true,\n            \"confirmation_method\": \"external\",\n            \"min_booking_notice\": 0,\n            \"min_buffer\": 0,\n            \"min_cancellation_notice\": 0,\n            \"name_field_hidden\": false,\n            \"opening_hours\": [\n                {\n                    \"account_id\": \"31do88a3z9voyc2y6jm8udnby\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                }\n            ],\n            \"scheduling_method\": \"round-robin-maximize-availability\"\n        },\n        \"calendar_ids\": {\n            \"31do88a3z9voyc2y6jm8udnby\": {\n                \"availability\": [\n                    \"4o2zuj77j1duoh9gaz19lr8im\"\n                ],\n                \"booking\": \"4o2zuj77j1duoh9gaz19lr8im\"\n            }\n        },\n        \"event\": {\n            \"capacity\": 1,\n            \"duration\": 30,\n            \"location\": \"Zoom Link\",\n            \"title\": \"Scheduler Example - Generic Concrete Hat\"\n        },\n        \"features\": {\n            \"collective_meetings\": false\n        },\n        \"locale\": \"en\",\n        \"reminders\": [\n            {\n                \"delivery_method\": \"email\",\n                \"delivery_recipient\": \"both\",\n                \"email_subject\": \"\",\n                \"time_before_event\": 30\n            }\n        ],\n        \"timezone\": \"America/Denver\"\n    },\n    \"created_at\": \"2022-02-07\",\n    \"edit_token\": \"JKbbyAi76WljCHQ_c-lZiARsK_PG1I-6\",\n    \"id\": 1722702,\n    \"modified_at\": \"2022-02-07\",\n    \"name\": \"Scheduler Example - Generic Concrete Hat\",\n    \"slug\": \"ut-non-et\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.schedule.nylas.com/manage/pages/{{page_id}}",
							"protocol": "https",
							"host": [
								"api",
								"schedule",
								"nylas",
								"com"
							],
							"path": [
								"manage",
								"pages",
								"{{page_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Scheduling Page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "2ef8c7ee-36a9-4849-a543-6e65f8445e63"
							}
						}
					],
					"id": "47befcd1-b2a6-40ac-8093-09a48d9d7426",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.schedule.nylas.com/manage/pages/{{page_id}}",
							"protocol": "https",
							"host": [
								"api",
								"schedule",
								"nylas",
								"com"
							],
							"path": [
								"manage",
								"pages",
								"{{page_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Available Calendars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "4d5be2c3-0359-4785-8e20-f0462aa33c96"
							}
						}
					],
					"id": "cbd03c47-5d27-4a11-a949-010e6d710e9c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.schedule.nylas.com/manage/pages/{{page_id}}/calendars",
							"protocol": "https",
							"host": [
								"api",
								"schedule",
								"nylas",
								"com"
							],
							"path": [
								"manage",
								"pages",
								"{{page_id}}",
								"calendars"
							]
						}
					},
					"response": []
				}
			],
			"id": "65dc5a3a-fe40-4aee-bac7-ebbc389ea8b6"
		},
		{
			"name": "Provider Detection",
			"item": [
				{
					"name": "Detect provider based on given email address",
					"id": "b61aaac4-f2a0-4221-b6d6-f1effc5d8abe",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {},
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\": \"{{client_secret}}\",\n  \"email_address\": \"{{$randomEmail}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/connect/detect-provider",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"detect-provider"
							]
						},
						"description": "Use this endpoint to detect which provider an email uses. If we are able to detect the provider, we'll return `detected:true`. If we are not able to determine the provider, we'll return `detected:false`.\n\nIf `detected:false`, then it's either IMAP or Microsoft Exchange Server. You can also ignore `is_imap` if `detected:false`. Use the results to determine the provider to pass into the settings object for [native authentication](https://developer.nylas.com/docs/api/#post/connect/authorize)."
					},
					"response": []
				}
			],
			"id": "559c13e1-8b21-4c50-b4ae-db1d83624e92"
		},
		{
			"name": "Integrations",
			"item": [
				{
					"name": "Create Integration - Zoom",
					"id": "03cee286-15a3-4130-a7da-f25cf876b9a4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n  \"provider\": \"zoom\",\n  \"settings\": {\n    \"client_id\": \"{{client_id}}\",\n    \"client_secret\": \"{{client_secret}}\"\n  },\n  \"redirect_uris\": [\n    \"https://beta.us.nylas.com/connect/callback\"\n  ],\n  \"expires_in\": 1209600\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://beta.us.nylas.com/connect/integrations",
							"protocol": "https",
							"host": [
								"beta",
								"us",
								"nylas",
								"com"
							],
							"path": [
								"connect",
								"integrations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Integrations",
					"id": "d0a4a33a-7a0d-4dcd-9ef0-1a971c7559fe",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://beta.us.nylas.com/connect/integrations",
							"protocol": "https",
							"host": [
								"beta",
								"us",
								"nylas",
								"com"
							],
							"path": [
								"connect",
								"integrations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Integration - Zoom",
					"id": "802b9c23-60a0-43ed-95a0-972d3ddcc9eb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://beta.us.nylas.com/connect/integrations/zoom",
							"protocol": "https",
							"host": [
								"beta",
								"us",
								"nylas",
								"com"
							],
							"path": [
								"connect",
								"integrations",
								"zoom"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Integration",
					"id": "447994a5-db2e-4f65-9bed-036ebd3b26cb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://beta.us.nylas.com/connect/integrations/zoom",
							"protocol": "https",
							"host": [
								"beta",
								"us",
								"nylas",
								"com"
							],
							"path": [
								"connect",
								"integrations",
								"zoom"
							]
						}
					},
					"response": []
				}
			],
			"id": "36e92048-6ce4-467d-ba8d-3a6de99a06f7"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "ee4e35c1-f6bb-4b69-a870-a22d0a7eeecf"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "a67ac36c-5748-4d20-b0b9-b5bd985b5628"
			}
		}
	]
}