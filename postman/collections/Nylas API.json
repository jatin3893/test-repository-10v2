{
	"info": {
		"_postman_id": "57031fd5-9cfa-4b16-8925-4756b61aa853",
		"name": "Nylas API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "869033-57031fd5-9cfa-4b16-8925-4756b61aa853"
	},
	"item": [
		{
			"name": "Authentication (Hosted)",
			"item": [
				{
					"name": "/oauth/authorize",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body has code\"] = responseBody.has(\"code\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"code\", jsonData.code);"
								],
								"type": "text/javascript",
								"id": "4c98d587-584d-448a-a7a8-9a0ef6766648"
							}
						}
					],
					"id": "c63784df-395d-4019-bc1a-9237b399941b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/oauth/authorize?client_id={{client_id}}&response_type=code&scopes=email&login_hint=test@gmail.com&redirect_uri=http://localhost:4567&state=",
							"host": [
								"{{url}}"
							],
							"path": [
								"oauth",
								"authorize"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"description": "The client_id of your Nylas developer application"
								},
								{
									"key": "response_type",
									"value": "code",
									"description": "`code` or `token` depending on if client side or server side"
								},
								{
									"key": "scopes",
									"value": "email"
								},
								{
									"key": "login_hint",
									"value": "test@gmail.com"
								},
								{
									"key": "redirect_uri",
									"value": "http://localhost:4567"
								},
								{
									"key": "state",
									"value": "",
									"description": "optional"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/oauth/token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body has access token\"] = responseBody.has(\"access_token\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);"
								],
								"type": "text/javascript",
								"id": "662484d8-1313-4be6-b3c2-6505a9e81cbe"
							}
						}
					],
					"id": "9968cf53-c9e6-49bf-bb67-8a8232993c1d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/oauth/token?client_id={{client_id}}&client_secret={{client_secret}}&grant_type=authorization_code&code={{code}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"oauth",
								"token"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{client_id}}"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}"
								},
								{
									"key": "grant_type",
									"value": "authorization_code"
								},
								{
									"key": "code",
									"value": "{{code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/oauth/revoke",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "d981c30f-569a-4c6a-9abe-cc7e96258763"
							}
						}
					],
					"id": "68242c08-3078-4d16-92b4-06e81dcc2c21",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user",
									"value": "{{access_token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/oauth/revoke",
							"host": [
								"{{url}}"
							],
							"path": [
								"oauth",
								"revoke"
							]
						}
					},
					"response": []
				}
			],
			"id": "161e4a72-06a6-47d7-99c5-8bbde072eb25"
		},
		{
			"name": "Authentication (Native)",
			"item": [
				{
					"name": "/connect/authorize exchange",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body has code\"] = responseBody.has(\"code\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"code\", jsonData.code);"
								],
								"id": "dfdf6c95-e2f9-4863-bb97-31b284185b2b"
							}
						}
					],
					"id": "3620b28e-2a2a-4dce-939c-195d971c0398",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"{{client_id}}\",\n    \"name\": \"{{name}}\",\n    \"email_address\": \"{{exchange_email}}\",\n    \"provider\": \"exchange\",\n    \"settings\": {\n        \"username\": \"{{exchange_email}}\",\n        \"password\": \"{{exchange_password}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/connect/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "/connect/authorize yahoo",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body has code\"] = responseBody.has(\"code\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"code\", jsonData.code);"
								],
								"id": "7bb65328-edb1-4e2d-a9c6-f57aed161b3b"
							}
						}
					],
					"id": "818241c7-f1b4-4f84-b2f3-362b1075dcb4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"{{client_id}}\",\n    \"name\": \"{{name}}\",\n    \"email_address\": \"{{yahoo_email}}\",\n    \"provider\": \"yahoo\",\n    \"settings\": {\n        \"password\": \"{{yahoo_password}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/connect/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "/connect/authorize gmail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body has code\"] = responseBody.has(\"code\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"code\", jsonData.code);"
								],
								"type": "text/javascript",
								"id": "a4179f8f-37b7-4d90-8ca9-c8f28ab398b5"
							}
						}
					],
					"id": "432ec88f-3311-46ca-88d5-a776ce8a7a92",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"{{client_id}}\",\n    \"name\": \"{{name}}\",\n    \"email_address\": \"{{google_email}}\",\n    \"provider\": \"gmail\",\n    \"settings\": {\n        \"google_refresh_token\": \"{{google_refresh_token}}\",\n        \"google_client_id\": \"{{google_client_id}}\",\n        \"google_client_secret\": \"{{google_client_secret}}\"\n    },\n    \"scopes\": \"email, calendar, contacts\"\n}"
						},
						"url": {
							"raw": "{{url}}/connect/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "/connect/authorize gmail service account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body has code\"] = responseBody.has(\"code\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"code\", jsonData.code);"
								],
								"type": "text/javascript",
								"id": "542cffee-524d-47dd-a5f3-c33812c351b5"
							}
						}
					],
					"id": "0279bbf7-5704-436e-a247-f01428a476f7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"{{client_id}}\",\n    \"name\": \"{{name}}\",\n    \"email_address\": \"nylas1@nylastestgsuite.com\",\n    \"provider\": \"gmail\",\n    \"settings\": {\n\t\t\"service_account_json\": {{service_account_json}}\n    },\n    \"scopes\": \"calendar\"\n}"
						},
						"url": {
							"raw": "{{url}}/connect/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "/connect/authorize imap",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body has code\"] = responseBody.has(\"code\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"code\", jsonData.code);"
								],
								"type": "text/javascript",
								"id": "e473f59c-1f78-4f8b-aa11-956ed534ad47"
							}
						}
					],
					"id": "f086c1c5-be58-4af0-bf70-62aae43156e4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\":     \"{{client_id}}\",\n    \"name\":          \"Sarah Nylanaut\",\n    \"email_address\": \"{{imap_email}}\",\n    \"provider\":      \"imap\",\n    \"settings\":      {\n        \"imap_host\":     \"{{imap_host}}\",\n        \"imap_port\":     {{imap_port}},\n        \"imap_username\": \"{{imap_email}}\",\n        \"smtp_username\": \"{{smtp_email}}\",\n        \"imap_password\": \"{{imap_password}}\",\n        \"smtp_host\":     \"{{smtp_host}}\",\n        \"smtp_port\":     {{smtp_port}},\n        \"smtp_password\": \"{{smtp_password}}\"\n        }\n}"
						},
						"url": {
							"raw": "{{url}}/connect/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "/connect/token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Body matches string\"] = responseBody.has(\"access_token\");",
									"",
									"postman.setEnvironmentVariable(\"access_token\", JSON.parse(responseBody).access_token);"
								],
								"type": "text/javascript",
								"id": "61cdacd2-04bd-4d3d-bc68-86b40409ec3f"
							}
						}
					],
					"id": "9aafc4ef-cf37-4c20-ba72-3f0405e777ba",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"{{client_id}}\",\n    \"client_secret\": \"{{client_secret}}\",\n    \"code\": \"{{code}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/connect/token",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Virtual Calendars",
					"id": "9bccfee7-a910-43e1-994c-54484459d6ca",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n    \"client_id\": \"{{client_id}}\",\n    \"provider\": \"nylas\",\n    \"scopes\": \"{{scopes}}\", \n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\",\n    \"settings\": {}\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/connect/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"authorize"
							]
						}
					},
					"response": []
				}
			],
			"id": "e08daca9-879a-4ab6-89dc-c7546df5dafc",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "b3f0f78c-e3b2-4bc2-8627-cf4b9140d4e1"
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "cde57cfd-af6b-49c3-82cc-0605950721f9"
					}
				}
			]
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "/account",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body has account id\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"account_id\", jsonData.account_id);",
									""
								],
								"id": "62157915-3662-4416-bfb7-339410ecefc2"
							}
						}
					],
					"id": "418f8901-8ea1-4e13-ae56-2ac3c9043f99",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/account",
							"host": [
								"{{url}}"
							],
							"path": [
								"account"
							]
						}
					},
					"response": []
				}
			],
			"id": "c9998a8a-a2fe-4fc2-bdcb-45779477933a"
		},
		{
			"name": "Account Management",
			"item": [
				{
					"name": "/downgrade account",
					"id": "e3c0b2c0-d2dc-425e-ba05-1f428ed05b04",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}/accounts/{{account_id}}/downgrade",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"accounts",
								"{{account_id}}",
								"downgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "/upgrade account",
					"id": "116aa830-c7a3-43de-a0df-edb6422915f0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}/accounts/{{account_id}}/upgrade",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"accounts",
								"{{account_id}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "/revoke-all tokens",
					"id": "bed2f614-ad19-4dc7-a9af-d1e2bb7736c0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"keep_access_token\": \"My Access Token\"\n}"
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}/accounts/{{account_id}}/revoke-all",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"accounts",
								"{{account_id}}",
								"revoke-all"
							]
						}
					},
					"response": []
				},
				{
					"name": "/accounts ",
					"id": "e92f6a04-53e7-44d7-9358-58c126f4f2f0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/a/{{client_id}}/accounts/?offset=0&limit=10",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"accounts",
								""
							],
							"query": [
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "metadata_key",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_pair",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_value",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_search",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/accounts/:id",
					"id": "542e7731-bf16-4d00-bc9c-0f690b31580e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/a/{{client_id}}/accounts/{{account_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"accounts",
								"{{account_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/ip_addresses",
					"id": "26c6102d-145c-4d20-ba26-fce32bd251dd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/a/{{client_id}}/ip_addresses",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"ip_addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "/accounts/{id}/token-info",
					"id": "08da134c-33c9-4b1c-bcea-457783f8a498",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"access_token\": \"{{access_token}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}/accounts/{{account_id}}/token-info",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"accounts",
								"{{account_id}}",
								"token-info"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Application Details",
					"id": "0b8ed3c1-8c44-455d-a8a6-8d6a2c7f8b6b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Application Details",
					"id": "39559d23-c5fe-4896-99e9-320dd0a5520d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"application_name\": \"My New App Name\",\n    \"redirect_uris\": [\n\t    \"http://localhost:5555/login_callback\",\n\t    \"localhost\",\n\t    \"chrome://deeplink\"\n\t]\n}"
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an Account",
					"id": "018e1773-048d-4bce-b89c-e0dd04331d5f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/a/{{client_id}}/accounts/{{delete_account_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"accounts",
								"{{delete_account_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Account Metadata",
					"id": "b4160a8d-3ccb-4b64-86ea-addad5c09249",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"metadata\":{\n        \"hello\": \"goodbye\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}/accounts/{{account_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"accounts",
								"{{account_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Account Icon and Redirect URL",
					"id": "d56eabcf-a809-43ad-aaa5-bb25954c4349",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/a/{{client_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Account Icon and Redirect URL",
					"id": "ded66ff9-d74b-4a63-83c0-79d25de36d93",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"application_name\": \"Alpha\",\n    \"icon_url\": \"\",\n    \"redirect_uris\": [\n        \"http://localhost:3000/oauth/callback\",\n        \"http://localhost:4567\",\n        \"http://localhost:1234\"\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "c5580b70-724e-416f-a844-b8f5149e486f",
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "username",
						"value": "{{client_secret}}",
						"type": "string"
					},
					{
						"key": "password",
						"value": "",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "fde3b55e-f110-4463-909b-c8c2449139b3"
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "756abfdd-5300-44a0-b7ae-01d7a8fe50dc"
					}
				}
			]
		},
		{
			"name": "Threads",
			"item": [
				{
					"name": "/threads",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"// postman.setEnvironmentVariable(\"thread_id\", jsonData[0].id);"
								],
								"type": "text/javascript",
								"id": "c2e353b2-6d50-4574-9755-54545ff57376"
							}
						}
					],
					"id": "dff05a40-84d5-4e77-a125-22191b52bb65",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/threads",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads"
							],
							"query": [
								{
									"key": "offset",
									"value": "10",
									"disabled": true
								},
								{
									"key": "any_email",
									"value": "",
									"description": "Comma separated list of emails",
									"disabled": true
								},
								{
									"key": "to",
									"value": "",
									"disabled": true
								},
								{
									"key": "from",
									"value": "",
									"disabled": true
								},
								{
									"key": "cc",
									"value": "",
									"disabled": true
								},
								{
									"key": "bcc",
									"value": "",
									"disabled": true
								},
								{
									"key": "in",
									"value": "",
									"description": "Return threads in a given folder, or with a given label. This parameter supports the name, display_name, or id of a folder or label. Note: If you'd like to get all drafts use the /drafts endpoint.",
									"disabled": true
								},
								{
									"key": "unread",
									"value": "",
									"description": "Return threads with one or more unread messages",
									"disabled": true
								},
								{
									"key": "starred",
									"value": "",
									"description": "Return threads with one or more starred messages",
									"disabled": true
								},
								{
									"key": "filename",
									"value": "",
									"description": "Return threads that contain attachments with the given filename\n\n",
									"disabled": true
								},
								{
									"key": "last_message_before",
									"value": "",
									"description": "unix timestamp integer",
									"disabled": true
								},
								{
									"key": "last_message_after",
									"value": "",
									"description": "unix timestamp integer",
									"disabled": true
								},
								{
									"key": "started_before",
									"value": "",
									"description": "unix timestamp integer",
									"disabled": true
								},
								{
									"key": "started_after",
									"value": "",
									"description": "unix timestamp integer",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/threads/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"thread_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"thread_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"id": "f612df26-9617-43cd-b5ba-8b2d2463466e"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "cb2bd53c-c415-47b1-b727-6674fb04b9dc"
							}
						}
					],
					"id": "2234c2fd-d09d-4b40-9a4b-808ab70cae15",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/threads/{{thread_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads",
								"{{thread_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/threads/:id unread status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"thread_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"thread_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"id": "2cf1cfa7-4e83-436a-b99b-e6df5d5fc22b"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "aa88f8c0-faa8-475c-b932-a30ac8cee1c9"
							}
						}
					],
					"id": "18e563b5-b420-4d03-a3ec-e3fe70230ebb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"unread\": false\n}"
						},
						"url": {
							"raw": "{{url}}/threads/{{thread_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads",
								"{{thread_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/threads/:id move a thread",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"thread_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"thread_id\", \"set_id_in_postman_prerequest_script\");",
									"}",
									"",
									"if (postman.getEnvironmentVariable(\"folder_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"folder_id\", \"set_id_in_postman_preqrequest_script\");",
									"}"
								],
								"type": "text/javascript",
								"id": "a32e97f9-07f0-403f-bbce-690908fc0848"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "b7201025-a085-4460-927c-44ca4cd86b47"
							}
						}
					],
					"id": "55a3a871-26c5-4190-9108-fbba6d30df41",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						},
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"folder_id\": \"{{folder_id}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/threads/{{thread_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads",
								"{{thread_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/threads/:id add/remove labels",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"thread_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"thread_id\", \"set_id_in_postman_prerequest_script\");",
									"}",
									"",
									"if (postman.getEnvironmentVariable(\"label_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"label_id\", \"set_id_in_postman_preqrequest_script\");",
									"}"
								],
								"id": "0386c286-e5d6-4339-a021-afc84934b34a"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "2dd51d56-9023-486b-af06-226f78e0a5a2"
							}
						}
					],
					"id": "c80c5d26-394e-4a3c-a434-70824e0b29fa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label_ids\": [\"{{label_id}}\"]\n}"
						},
						"url": {
							"raw": "{{url}}/threads/{{thread_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads",
								"{{thread_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/threads/:id set starred",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"thread_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"thread_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"id": "c1f2606d-ed57-445c-97e5-4cf5de68e3da"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "f6137437-038f-4cb9-bd9a-1b68cd7e228d"
							}
						}
					],
					"id": "b467bed5-d508-4cc7-8a80-72f407fac306",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"starred\": true\n}"
						},
						"url": {
							"raw": "{{url}}/threads/{{thread_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads",
								"{{thread_id}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "0e14a663-ade9-47bf-becf-dc420f1ad9ff"
		},
		{
			"name": "Messages",
			"item": [
				{
					"name": "/messages",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"limit = parseInt(postman.getGlobalVariable(\"limit\"));",
									"offset = parseInt(postman.getGlobalVariable(\"offset\"));",
									"",
									"postman.setGlobalVariable(\"offset\", offset+limit);"
								],
								"type": "text/javascript",
								"id": "17497dff-cf3d-40fb-bf17-3ec5e0f97dff"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"message_id\", jsonData[0].id);"
								],
								"type": "text/javascript",
								"id": "0c333236-d3ae-42c0-8c2e-9568d2a02736"
							}
						}
					],
					"id": "298c1e29-f755-43e9-86be-07bee56cde8a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "message/rfc822",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/messages",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "/messages/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"message_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"message_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"type": "text/javascript",
								"id": "a57a18fc-e5c8-429d-b4eb-3b8d8518663a"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "23bfc32b-ab64-4997-8adf-a94723c014d5"
							}
						}
					],
					"id": "17b5c5c8-4015-4ef4-a370-34927668070c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/messages/{{message_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages",
								"{{message_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/messages/:id unread status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"message_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"message_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"id": "387fb728-6406-4b11-ba9b-e1b1578761da"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "1ddccce0-5a9a-47eb-9482-00b41a65ab07"
							}
						}
					],
					"id": "a0e7d53e-663b-42b9-8716-f28e87664701",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"unread\": false\n}"
						},
						"url": {
							"raw": "{{url}}/messages/{{message_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages",
								"{{message_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/messages/:id move a message",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"message_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"message_id\", \"set_id_in_postman_prerequest_script\");",
									"}",
									"",
									"if (postman.getEnvironmentVariable(\"folder_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"folder_id\", \"set_id_in_postman_preqrequest_script\");",
									"}"
								],
								"id": "4760fdb6-efd6-4fb8-ab64-6da54191f1ef"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "a947f338-b063-4ff7-9e85-b3476205dd2b"
							}
						}
					],
					"id": "7199d87e-556d-408a-bf63-e565856b8467",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"folder_id\": {{folder_id}}\n}"
						},
						"url": {
							"raw": "{{url}}/messages/{{message_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages",
								"{{message_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/messages/:id add/remove labels",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"message_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"message_id\", \"set_id_in_postman_prerequest_script\");",
									"}",
									"",
									"if (postman.getEnvironmentVariable(\"label_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"label_id\", \"set_id_in_postman_preqrequest_script\");",
									"}"
								],
								"type": "text/javascript",
								"id": "22aa3342-615e-4515-8e08-32e443f2c4b6"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "d5651625-9aa0-4cba-84b5-313ffba73530"
							}
						}
					],
					"id": "e1d39a5e-871b-47f6-989f-95bba04c6b2b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label_ids\": [\"{{label_id}}\"]\n}"
						},
						"url": {
							"raw": "{{url}}/messages/{{message_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages",
								"{{message_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/messages/:id starred",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"message_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"message_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"id": "145c876c-d7b2-4fc6-9f99-f487b9804fa1"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "13e9fc4b-48e0-47f7-8d7b-7b31685b7b7e"
							}
						}
					],
					"id": "f20ab1f0-fc16-44a2-bf97-3c4724af4e6d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"starred\": true\n}"
						},
						"url": {
							"raw": "{{url}}/messages/{{message_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages",
								"{{message_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/messages/:id delete message",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"message_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"message_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"type": "text/javascript",
								"id": "e6a24a0c-5714-409f-8f2f-49875174db60"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "b450094e-0f4e-4bdd-ac9e-59769ecbd28b"
							}
						}
					],
					"id": "4532499e-6761-4404-81e1-bc18fd4b14c3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label_ids\": [\"{{delete_label_id}}\"]\n}"
						},
						"url": {
							"raw": "{{url}}/messages/{{delete_message_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages",
								"{{delete_message_id}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "98d786e6-209d-4827-8a55-c24e9d47eb89"
		},
		{
			"name": "Folders",
			"item": [
				{
					"name": "/folders",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"folder_id\", jsonData[2].id);"
								],
								"id": "847c7ad5-677a-45eb-be7b-d74b155c564e"
							}
						}
					],
					"id": "706bbd62-b322-4fee-b9a2-12551e108d13",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/folders",
							"host": [
								"{{url}}"
							],
							"path": [
								"folders"
							]
						}
					},
					"response": []
				},
				{
					"name": "/folders/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"folder_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"folder_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"type": "text/javascript",
								"id": "76db9b92-191b-433b-b190-9eaae0da6b5f"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "67be848a-27ce-4e81-bb6b-38199cd127b6"
							}
						}
					],
					"id": "2d236db0-8409-4232-bbea-1668429204b6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/folders/{{folder_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/folders create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"folder_id\", jsonData[0].id);"
								],
								"id": "b64dd5b6-55dc-47f8-9c38-5acefc97f096"
							}
						}
					],
					"id": "5b39e022-6268-45dc-b7ca-d0ab918442f4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"display_name\": \"My New Folder\"\n}"
						},
						"url": {
							"raw": "{{url}}/folders",
							"host": [
								"{{url}}"
							],
							"path": [
								"folders"
							]
						}
					},
					"response": []
				},
				{
					"name": "/folders/:id rename",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								],
								"id": "98d9e0b6-9263-4fdc-af84-94d761e498c1"
							}
						}
					],
					"id": "b72da3b1-7db8-4c2d-91ae-992a4b310110",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"display_name\": \"My Renamed Folder\"\n}"
						},
						"url": {
							"raw": "{{url}}/folders/{{folder_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/folders/:id delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"id": "899f22db-d45a-4614-a500-9a9a70e04426"
							}
						}
					],
					"id": "c6bba24e-59e3-4ad7-a4aa-1025a0722740",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/folders/{{folder_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"folders",
								"{{folder_id}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "cfbb1e96-1821-495c-a561-e00ab7d08953"
		},
		{
			"name": "Labels",
			"item": [
				{
					"name": "/labels",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"label_id\", jsonData[0].id);"
								],
								"id": "673b52a1-4562-44bf-8077-5777d0e90b29"
							}
						}
					],
					"id": "d8ec82b6-cba0-47ce-9e81-a734fb1835a9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/labels",
							"host": [
								"{{url}}"
							],
							"path": [
								"labels"
							]
						}
					},
					"response": []
				},
				{
					"name": "/labels/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"label_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"label_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"id": "bb70743a-cc2b-41c2-ba93-c7e7c305df69"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "0adb3c48-472a-4041-89d7-e6ccd4ec574f"
							}
						}
					],
					"id": "2c69e681-7c4e-4578-a391-7211c75b0af5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/labels/{{label_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"labels",
								"{{label_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/labels create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"label_id\", jsonData.id);"
								],
								"type": "text/javascript",
								"id": "9863e7b5-2f6b-4837-b73b-8591ddc19b2c"
							}
						}
					],
					"id": "f5c04ce9-0b90-49f0-be54-97641f481683",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"display_name\": \"My new label\"\n}"
						},
						"url": {
							"raw": "{{url}}/labels",
							"host": [
								"{{url}}"
							],
							"path": [
								"labels"
							]
						}
					},
					"response": []
				},
				{
					"name": "/labels/:id rename",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"label_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"label_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"id": "db463a14-1746-4137-983b-d2f2356d5d27"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "d30bf067-242d-42a8-8bfc-171fd61b6f5e"
							}
						}
					],
					"id": "bb5999cf-2116-40b2-b762-8d11eef7e1bc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"display_name\": \"My renamed label\"\n}"
						},
						"url": {
							"raw": "{{url}}/labels/{{label_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"labels",
								"{{label_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/labels/:id delete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"label_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"label_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"id": "29331b04-18ca-4e1b-b9d0-eb45a530ff20"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "e94d7b0f-e998-43bc-8170-086c2f28b660"
							}
						}
					],
					"id": "af2308f2-ccb3-45f9-add8-5fe43319d373",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/labels/{{label_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"labels",
								"{{label_id}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "2bf35dac-25d4-486d-992e-326b5dbe4317"
		},
		{
			"name": "Drafts",
			"item": [
				{
					"name": "/drafts/",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"draft_id\", jsonData[0].id);",
									"postman.setEnvironmentVariable(\"draft_version\", jsonData[0].version);"
								],
								"id": "4a7fb903-4709-4ee7-a8d5-ac4e249ca92b"
							}
						}
					],
					"id": "f1e26d36-2656-4cae-bd82-e117fbb33367",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/drafts/",
							"host": [
								"{{url}}"
							],
							"path": [
								"drafts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/drafts/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (postman.getEnvironmentVariable(\"draft_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"draft_id\", \"d7e44r6mu2jq0w8nfm7it68lp\");",
									"}"
								],
								"id": "e318b4e2-6b23-46d3-a66e-290970500c4b"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"draft_id\", jsonData.id);",
									"postman.setEnvironmentVariable(\"draft_version\", jsonData.version);"
								],
								"id": "1b4d91f8-5047-4621-ad6d-f2ff113dfbff"
							}
						}
					],
					"id": "60af1305-3767-4f50-b1b7-511e5856d9cf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/drafts/{{draft_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"drafts",
								"{{draft_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drafts/",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"draft_id\", jsonData.id);",
									"postman.setEnvironmentVariable(\"draft_version\", jsonData.version);"
								],
								"type": "text/javascript",
								"id": "9ec9e5bd-94e4-4e38-8461-76f8778278e3"
							}
						}
					],
					"id": "a2ea7d00-491f-4dc2-bd98-00669ca5dd44",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"subject\": \"In Reply to a draft\",\n    \"to\": [\n        {\n            \"name\": \"{{name}}\",\n            \"email\": \"{{email}}\"\n        }\n    ],\n    \"cc\": [],\n    \"bcc\": [],\n    \"body\": \"<html><body>Thank you.</body></html>\",\n    \"reply_to\": [\n    \t{\n    \t\t\"name\": \"{{name}}\",\n    \t\t\"email\": \"{{email}}\"\n    \t}\n    ],\n    \"reply_to_message_id\": \"{{message_id}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/drafts/",
							"host": [
								"{{url}}"
							],
							"path": [
								"drafts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/drafts/:id update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"draft_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"draft_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"type": "text/javascript",
								"id": "0b7fcb2e-af89-4f2b-9de8-118f6e046a89"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"draft_id\", jsonData.id);",
									"postman.setEnvironmentVariable(\"draft_version\", jsonData.version);"
								],
								"type": "text/javascript",
								"id": "edaef568-8223-4ab9-bd24-e4cc2219c7dc"
							}
						}
					],
					"id": "f283250a-424a-43c6-87e5-a9306c779c0b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"subject\": \"Dinner on Friday?\",\n    \"to\": [\n        {\n            \"name\": \"{{name}}\",\n            \"email\": \"{{email}}\"\n        }\n    ],\n    \"cc\": [],\n    \"bcc\": [],\n    \"body\": \"<html><body>Let's go eat!</body></html>\",\n\t\"reply_to\": [\n\t\t{\n\t\t\t\"name\": \"{{name}}\",\n\t\t\t\"email\": \"{{email}}\"\n\t\t}\n\t],\n    \"reply_to_message_id\": \"{{message_id}}\",\n    \"version\": 0\n}"
						},
						"url": {
							"raw": "{{url}}/drafts/{{draft_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"drafts",
								"{{draft_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drafts/:id delete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (postman.getEnvironmentVariable(\"draft_id\") == \"set_id_in_postman_preqrequest_script\"){",
									"    // Edit the id here",
									"    postman.setEnvironmentVariable(\"draft_id\", \"set_id_in_postman_prerequest_script\");",
									"}"
								],
								"type": "text/javascript",
								"id": "bd07f8d6-489e-4b5c-a99e-5bc79b53c933"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "769dabcf-df9d-4c89-a4cc-9b5d2a79f5fb"
							}
						}
					],
					"id": "82ecde69-6bf0-4a97-bdfe-e7081494ef6b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": {{draft_version}}\n}"
						},
						"url": {
							"raw": "{{url}}/drafts/{{draft_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"drafts",
								"{{draft_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/send direct with tracking",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "1dfedfc8-76f9-48e5-8981-002304e46712"
							}
						}
					],
					"id": "94a2a55f-1912-4841-9d21-2088e9ca7b26",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reply_to_message_id\": \"{{message_id}}\",\n    \"body\" : \"Sounds great! See you then.\",\n    \"subject\": \"Re: Meeting\",\n    \"to\": [\n        {\n            \"name\": \"{{name}}\",\n            \"email\": \"mike@nylas.com\"\n        }\n    ],\n    \"tracking\": {\n      \"opens\": \"true\",\n      \"links\": \"true\",\n      \"thread_replies\": true,\n      \"payload\": \"it's a test!\"\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/send",
							"host": [
								"{{url}}"
							],
							"path": [
								"send"
							]
						}
					},
					"response": []
				}
			],
			"id": "c3a4ac6e-b08a-45a3-b2e0-a6ce9101d266"
		},
		{
			"name": "Sending",
			"item": [
				{
					"name": "/send direct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "a38de59c-f6f4-4a88-b889-bf0affd80efb"
							}
						}
					],
					"id": "163c0925-adef-4b9f-90af-b2fd6f4a433e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\" : \"Sounds great! See you then.\",\n    \"subject\": \"Re: Meeting\",\n    \"to\": [\n        {\n            \"name\": \"{{name}}\",\n            \"email\": \"{{exchange_email}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/send",
							"host": [
								"{{url}}"
							],
							"path": [
								"send"
							]
						}
					},
					"response": [
						{
							"id": "ec3b36bf-057e-4d40-91b5-4bd94fd3c583",
							"name": "Send Message - Complete properties",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\": \"From Nylas\",\n  \"to\": [\n    {\n      \"email\": \"swag@nylas.com\",\n      \"name\": \"Nylas\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"name\": \"Dorothy Vaughan\",\n      \"email\": \"dorothy@spacetech.com\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"name\": \"Hedy Lamarr\",\n      \"email\": \"Lamarr@player.com\"\n    }\n  ],\n  \"from\": [\n    {\n      \"name\": \"Your Name\",\n      \"email\": \"you@example.com\"\n    }\n  ],\n  \"reply_to\": [\n    {\n      \"name\": \"Nylas\",\n      \"email\": \"swag@nylas.com\"\n    }\n  ],\n  \"reply_to_message_id\": \"{{reply_to_message_id}}\",\n  \"body\": \"This email was sent using the Nylas email API. Visit https://nylas.com for details.\",\n  \"file_ids\": [\n    \"<FILE_ID>\",\n    \"<FILE_ID>\"\n  ],\n  \"metadata\":{\n    \"hello\": \"world\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/send",
									"host": [
										"{{url}}"
									],
									"path": [
										"send"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"id": "734784cb-36a3-4783-ae58-fe177869e64d",
							"name": "/send direct",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\": \"From Nylas\",\n  \"to\": [\n    {\n      \"email\": \"swag@nylas.com\",\n      \"name\": \"Nylas\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"name\": \"Dorothy Vaughan\",\n      \"email\": \"dorothy@spacetech.com\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"name\": \"Hedy Lamarr\",\n      \"email\": \"Lamarr@player.com\"\n    }\n  ],\n  \"from\": [\n    {\n      \"name\": \"Your Name\",\n      \"email\": \"you@example.com\"\n    }\n  ],\n  \"reply_to\": [\n    {\n      \"name\": \"Nylas\",\n      \"email\": \"swag@nylas.com\"\n    }\n  ],\n  \"reply_to_message_id\": \"{{reply_to_message_id}}\",\n  \"body\": \"This email was sent using the Nylas email API. Visit https://nylas.com for details.\",\n  \"file_ids\": [\n    \"<FILE_ID>\",\n    \"<FILE_ID>\"\n  ],\n  \"metadata\":{\n    \"hello\": \"world\"\n  }\n}"
								},
								"url": {
									"raw": "{{url}}/send",
									"host": [
										"{{url}}"
									],
									"path": [
										"send"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/send direct w/ attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "572e42a3-8474-4fb4-afb7-e414d17e06f9"
							}
						}
					],
					"id": "73939b22-cd99-4a97-b00b-acf1324e36af",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\" : \"Here's an attachment!\",\n    \"subject\": \"Bugs\",\n    \"file_ids\": [\"{{file_id}}\"],\n    \"to\": [\n        {\n            \"name\": \"{{name}}\",\n            \"email\": \"{{exchange_email}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/send",
							"host": [
								"{{url}}"
							],
							"path": [
								"send"
							]
						}
					},
					"response": []
				},
				{
					"name": "/send direct with tracking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "e1b79155-52e3-48cf-8b7d-d050deef11b5"
							}
						}
					],
					"id": "1b09a558-2f1d-4786-b3e7-3d9b0d022bde",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\" : \"Link tracking has a new format, learn more here: <a href='https://changelog.nylas.com/changes-to-link-tracking-110420'>Link Tracking Changes</a>\",\n    \"subject\": \"Re: Meeting\",\n    \"to\": [\n        {\n            \"email\": \"support@nylas.com\"\n        }\n    ],\n    \"tracking\": {\n      \"opens\": \"true\",\n      \"links\": \"true\",\n      \"thread_replies\": \"true\",\n      \"payload\": \"it's a test!\"\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/send",
							"host": [
								"{{url}}"
							],
							"path": [
								"send"
							]
						}
					},
					"response": []
				},
				{
					"name": "/send draft",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "7e11942a-4fe9-4cc2-a0f6-6ff1d407f4fe"
							}
						}
					],
					"id": "cbc36426-8745-42b7-a341-f3ba2c4ea83a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"draft_id\": \"{{draft_id}}\",\n    \"version\": {{draft_version}}\n}"
						},
						"url": {
							"raw": "{{url}}/send",
							"host": [
								"{{url}}"
							],
							"path": [
								"send"
							]
						}
					},
					"response": []
				},
				{
					"name": "/send raw mime",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "262cf66c-2c6b-4ee1-9e6c-55247e017177"
							}
						}
					],
					"id": "e2fa8cc3-5584-4ccf-a22b-0a31fcf4df76",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "message/rfc822"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "MIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nIn-Reply-To: <84umizq7c4jtrew491brpa6iu-0@mailer.nylas.com>\nReferences: <84umizq7c4jtrew491brpa6iu-0@mailer.nylas.com>\nSubject: Meeting on Thursday\nFrom: Bill <wbrogers@mit.edu>\nTo: Ben Bitdiddle <ben.bitdiddle@gmail.com>\n\nHey Ben,\n\nWould you like to grab coffee @ 2pm this Thursday?\"\nBill"
						},
						"url": {
							"raw": "{{url}}/send",
							"host": [
								"{{url}}"
							],
							"path": [
								"send"
							]
						}
					},
					"response": []
				},
				{
					"name": "/send inline image",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "f1e921f8-31bd-45ae-90d6-10917a54dd75"
							}
						}
					],
					"id": "02797ac6-da13-48f4-9cf4-a8b239b99070",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\" : \"Sounds great! <img src='cid:{{file_id}}'> See you then.\",\n    \"subject\": \"Re: Meeting\",\n    \"to\": [\n        {\n            \"name\": \"{{name}}\",\n            \"email\": \"{{exchange_email}}\"\n        }\n    ],\n    \"file_ids\": [\"{{file_id}}\"]\n}"
						},
						"url": {
							"raw": "{{url}}/send",
							"host": [
								"{{url}}"
							],
							"path": [
								"send"
							]
						}
					},
					"response": []
				},
				{
					"name": "/outbox",
					"id": "0c928608-8bb2-432b-8b80-a3e94d6a8cb1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "/outbox",
							"path": [
								"outbox"
							]
						},
						"description": "Get a list of all messages scheduled to be sent."
					},
					"response": []
				},
				{
					"name": "/outbox/{job_status_id}",
					"id": "b7d8d68f-d5df-4ae5-9569-0c447691e762",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "/outbox/job_status_id}",
							"path": [
								"outbox",
								"job_status_id}"
							]
						},
						"description": "Delete a scheduled message. Use the job_status_id returned from [/outbox](https://docs.nylas.com/reference#post-outbox)"
					},
					"response": []
				},
				{
					"name": "/outbox",
					"id": "8aba8a49-ac5b-4bf6-95fa-ac292ba717e3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"from\": [{\n\t\t\"email\": \"{email}\",\n\t\t\"name\": \"{name}\"\n\t}],\n\t\"to\": [{\n\t\t\"email\": \"{email}\",\n\t\t\"name\": \"{name}\"\n\t}],\n\t\"reply_to_message_id\": \"{message_id}\",\n\t\"subject\": \"{subject}\",\n\t\"body\": \"{body}\",\n\t\"reply_to\": [{\n\t\t\"email\": \"{email}\",\n\t\t\"name\": \"{name}\"\n\t}],\n\t\"file_ids\": [\"{file_id}\"]\n}"
						},
						"url": {
							"raw": "/outbox",
							"path": [
								"outbox"
							]
						},
						"description": "Send a message or schedule messages to be sent."
					},
					"response": []
				},
				{
					"name": "/outbox/{job_status_id}",
					"id": "fd58aeba-2d4c-4213-880f-2998e047d6fa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"send_at\": {{unix_time_stamp}}\n}"
						},
						"url": {
							"raw": "/outbox/{{job_status_id}}",
							"path": [
								"outbox",
								"{{job_status_id}}"
							]
						},
						"description": "Update the message scheduled send time. Use the job_status_id returned from [/outbox](https://docs.nylas.com/reference#post-outbox)."
					},
					"response": []
				}
			],
			"id": "d2c5afec-3e91-4b81-bbf1-d6707b7ef4a6"
		},
		{
			"name": "Files",
			"item": [
				{
					"name": "/files",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"file_id\", jsonData[0].id);"
								],
								"id": "5d82c36f-7989-496c-9cbe-b11ce42f44c0"
							}
						}
					],
					"id": "5fe49812-12ad-4866-9d54-ec63086983c9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/files/",
							"host": [
								"{{url}}"
							],
							"path": [
								"files",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/files/:id",
					"id": "aa85e3aa-c67d-4da6-8bd7-de7f45379b9f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/files/{{file_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"files",
								"{{file_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/files/:id/download",
					"id": "c9e5e552-40b5-40d5-aac0-ac7ea9368e4c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/files/{{file_id}}/download",
							"host": [
								"{{url}}"
							],
							"path": [
								"files",
								"{{file_id}}",
								"download"
							]
						}
					},
					"response": []
				},
				{
					"name": "/files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"file_id\", jsonData[0][\"id\"]);",
									""
								],
								"type": "text/javascript",
								"id": "89443378-93ff-4a99-acbe-46caee7f1f1b"
							}
						}
					],
					"id": "60556112-4cc8-45db-b166-78c11c545069",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						},
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{url}}/files/",
							"host": [
								"{{url}}"
							],
							"path": [
								"files",
								""
							]
						}
					},
					"response": []
				}
			],
			"id": "e9c56a0b-f4e3-4f04-a7e5-c1479ed836e7"
		},
		{
			"name": "Calendars",
			"item": [
				{
					"name": "/calendars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set the calendar_id environment variable to a writable calendar",
									"var response = pm.response.json();",
									"console.log(response);",
									"response.forEach(function(calendar) {",
									"    console.log(calendar.id);",
									"    if (calendar.read_only === false) {",
									"         //pm.environment.set(\"calendar_id\", calendar.id);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "85e15ee1-8df0-47fe-a74d-8ada23687e34"
							}
						}
					],
					"id": "4e4174d0-963d-4f62-8285-16cab1f763c7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/calendars",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendars"
							],
							"query": [
								{
									"key": "view",
									"value": "",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_key",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_pair",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_value",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_search",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/calendars/id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								],
								"id": "72f0f8ae-361c-48bf-9e8b-b574b958410d"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"id": "0f5a3a24-6f33-4f53-a899-2ecda263257b"
							}
						}
					],
					"id": "32fac060-01fd-4c24-b411-f33a8f429ef1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/calendars/{{calendar_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendars",
								"{{calendar_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/calendars/free-busy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set the calendar_id environment variable to a writable calendar",
									"var response = pm.response.json();",
									"console.log(response);",
									"response.forEach(function(calendar) {",
									"    console.log(calendar.id);",
									"    if (calendar.read_only === false) {",
									"         pm.environment.set(\"calendar_id\", calendar.id);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "7a39c9b7-6c18-499a-af77-9694548d9a18"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now()/1000;",
									"var time2 = time1 + 30*60*60*24; // 30 days",
									"postman.setGlobalVariable(\"now\", parseInt(time1));",
									"postman.setGlobalVariable(\"one_week\", parseInt(time2));"
								],
								"type": "text/javascript",
								"id": "a16fae02-438c-43e3-a96c-1d9a9a45d0f8"
							}
						}
					],
					"id": "9b8897fe-19a4-4d20-ad5d-79e8e0e17a43",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"start_time\":\"{{now}}\",\n\t\"end_time\":\"{{one_week}}\",\n\t\"emails\": [\"{{email}}\"]\n}"
						},
						"url": {
							"raw": "{{url}}/calendars/free-busy/",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendars",
								"free-busy",
								""
							]
						},
						"description": "Free/Busy allows you to query availability information for a Calendar during a certain time period. Furthermore, the data returned doesn't include any sensitive information about events within the window, like titles, descriptions, or locations of the event."
					},
					"response": [
						{
							"id": "b5f85fbc-b99c-4cfe-bc95-6a70c75060d6",
							"name": "/calendars/freebusy",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/calendars/freebusy?start_time=1409594400&end_time=1409599000&calendar_ids=bbbb1234cccc1234",
									"host": [
										"{{url}}"
									],
									"path": [
										"calendars",
										"freebusy"
									],
									"query": [
										{
											"key": "start_time",
											"value": "1409594400",
											"description": "Unix time stamp (UTC) of the start time for this timeslot"
										},
										{
											"key": "end_time",
											"value": "1409599000",
											"description": "Unix timestamp (UTC) of the end time for this timeslot"
										},
										{
											"key": "calendar_ids",
											"value": "bbbb1234cccc1234",
											"description": "The Nylas calendar_id that this freebusy info applies to"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": "[\n  {\n   \"object\": \"freebusy\",\n   \"calendar_id\": \"bbbb1234cccc1234\",\n   \"time_slots\": [\n      { \n        \"object\": \"timeslot\",\n        \"status\": \"busy\",\n        \"start_time\": 1409594400,\n        \"end_time\": 1409598000\n      },\n      { \n        \"object\": \"timeslot\",\n        \"status\": \"busy\",\n        \"start_time\": 1409598000,\n        \"end_time\": 1409599000\n      }\n    ]\n  }\n]"
						},
						{
							"id": "e21ecb53-1c9e-4d9e-80b8-092a49117e9a",
							"name": "Free Busy - Single Connected Account",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"start_time\":\"{{now}}\",\n\t\"end_time\":\"{{one_week}}\",\n\t\"emails\": [],\n    \"calendars\": [\n        {\n            \"account_id\": \"{{account_id}}\",\n            \"calendar_ids\": [\n                \"{{calendar_id}}\"\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/calendars/free-busy/",
									"host": [
										"{{url}}"
									],
									"path": [
										"calendars",
										"free-busy",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 23 Aug 2022 19:08:13 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization,Accept,Cache-Control,X-Requested-With,Content-Type,User-Agent,Nylas-SDK-API-Version,X-Nylas-Client-Id"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,PUT,POST,DELETE,OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Nylas-API-Version",
									"value": "2.3"
								},
								{
									"key": "X-Unique-Id",
									"value": "1a37fa48-70c2-4357-94b4-2b36cdf39b7e"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "1132"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "5"
								},
								{
									"key": "Via",
									"value": "kong/2.8.1.3-enterprise-edition"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "73f622b1d9d99ee0-DFW"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"account_id\": \"eljl6iqi2g5rcz5ooi5qsknlw\",\n        \"calendar_id\": \"92qt3smzliaj65ye1lz85ht7z\",\n        \"email\": \"baumana@gmail.com\",\n        \"object\": \"free_busy\",\n        \"time_slots\": [\n            {\n                \"end_time\": 1661457600,\n                \"object\": \"time_slot\",\n                \"start_time\": 1661454000,\n                \"status\": \"busy\"\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "/calendars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set the calendar_id environment variable to a writable calendar",
									"var response = pm.response.json();",
									"console.log(response);",
									"response.forEach(function(calendar) {",
									"    console.log(calendar.id);",
									"    if (calendar.read_only === false) {",
									"         pm.environment.set(\"calendar_id\", calendar.id);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "49e024c4-6997-4ba5-8109-b15059777d99"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now() / 1000;",
									"var time2 = time1 + 30 * 60 * 60 * 24; // 30 days",
									"postman.setGlobalVariable(\"now\", parseInt(time1));",
									"postman.setGlobalVariable(\"one_week\", parseInt(time2));"
								],
								"type": "text/javascript",
								"id": "acde164e-f20b-47c5-a31e-2076d918928d"
							}
						}
					],
					"id": "020c1090-e1b2-43b8-8da7-7c0b5a0ba9f6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"calendar_test\",\n\t\"description\":\"This is a test calendar\",\n\t\"location\":\"test_room\",\n\t\"timezone\":\"America/Los_Angeles\",\n    \"metadata\":{\n        \"hello\":\"goodbye\"\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/calendars",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendars"
							]
						},
						"description": "Create secondary calendars"
					},
					"response": [
						{
							"id": "93701ad4-a60b-4a7b-a527-79a8ec4ddc4a",
							"name": "/calendars/freebusy",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/calendars/freebusy?start_time=1409594400&end_time=1409599000&calendar_ids=bbbb1234cccc1234",
									"host": [
										"{{url}}"
									],
									"path": [
										"calendars",
										"freebusy"
									],
									"query": [
										{
											"key": "start_time",
											"value": "1409594400",
											"description": "Unix time stamp (UTC) of the start time for this timeslot"
										},
										{
											"key": "end_time",
											"value": "1409599000",
											"description": "Unix timestamp (UTC) of the end time for this timeslot"
										},
										{
											"key": "calendar_ids",
											"value": "bbbb1234cccc1234",
											"description": "The Nylas calendar_id that this freebusy info applies to"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": "[\n  {\n   \"object\": \"freebusy\",\n   \"calendar_id\": \"bbbb1234cccc1234\",\n   \"time_slots\": [\n      { \n        \"object\": \"timeslot\",\n        \"status\": \"busy\",\n        \"start_time\": 1409594400,\n        \"end_time\": 1409598000\n      },\n      { \n        \"object\": \"timeslot\",\n        \"status\": \"busy\",\n        \"start_time\": 1409598000,\n        \"end_time\": 1409599000\n      }\n    ]\n  }\n]"
						}
					]
				},
				{
					"name": "/calendars/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set the calendar_id environment variable to a writable calendar",
									"var response = pm.response.json();",
									"console.log(response);",
									"response.forEach(function(calendar) {",
									"    console.log(calendar.id);",
									"    if (calendar.read_only === false) {",
									"         pm.environment.set(\"calendar_id\", calendar.id);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "c4ff348b-dc0a-476c-b3c3-7a841493cb56"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now()/1000;",
									"var time2 = time1 + 30*60*60*24; // 30 days",
									"postman.setGlobalVariable(\"now\", parseInt(time1));",
									"postman.setGlobalVariable(\"one_week\", parseInt(time2));"
								],
								"type": "text/javascript",
								"id": "584eedaa-c226-409d-bc5d-467f46c051fc"
							}
						}
					],
					"id": "d9c0e86a-98cb-410b-aecb-7e69c1ca2c1a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"updated_calendar_test\",\n\t\"description\":\"This is a test calendar\",\n\t\"location\":\"updates_test_room\",\n\t\"timezone\":\"America/Los_Angeles\"\n}"
						},
						"url": {
							"raw": "{{url}}/calendars/{{calendar_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendars",
								"{{calendar_id}}"
							]
						},
						"description": "Edit properties of secondary calendars that have been created. "
					},
					"response": [
						{
							"id": "ead49a44-1d2d-4463-b5d6-7138776586a2",
							"name": "/calendars/freebusy",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/calendars/freebusy?start_time=1409594400&end_time=1409599000&calendar_ids=bbbb1234cccc1234",
									"host": [
										"{{url}}"
									],
									"path": [
										"calendars",
										"freebusy"
									],
									"query": [
										{
											"key": "start_time",
											"value": "1409594400",
											"description": "Unix time stamp (UTC) of the start time for this timeslot"
										},
										{
											"key": "end_time",
											"value": "1409599000",
											"description": "Unix timestamp (UTC) of the end time for this timeslot"
										},
										{
											"key": "calendar_ids",
											"value": "bbbb1234cccc1234",
											"description": "The Nylas calendar_id that this freebusy info applies to"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": "[\n  {\n   \"object\": \"freebusy\",\n   \"calendar_id\": \"bbbb1234cccc1234\",\n   \"time_slots\": [\n      { \n        \"object\": \"timeslot\",\n        \"status\": \"busy\",\n        \"start_time\": 1409594400,\n        \"end_time\": 1409598000\n      },\n      { \n        \"object\": \"timeslot\",\n        \"status\": \"busy\",\n        \"start_time\": 1409598000,\n        \"end_time\": 1409599000\n      }\n    ]\n  }\n]"
						}
					]
				},
				{
					"name": "/calendars/id ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set the calendar_id environment variable to a writable calendar",
									"var response = pm.response.json();",
									"console.log(response);",
									"response.forEach(function(calendar) {",
									"    console.log(calendar.id);",
									"    if (calendar.read_only === false) {",
									"         pm.environment.set(\"calendar_id\", calendar.id);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "6ade8c3f-ac1f-41f4-804d-b656a739a584"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now()/1000;",
									"var time2 = time1 + 30*60*60*24; // 30 days",
									"postman.setGlobalVariable(\"now\", parseInt(time1));",
									"postman.setGlobalVariable(\"one_week\", parseInt(time2));"
								],
								"type": "text/javascript",
								"id": "b2d27347-a44b-43f5-99e0-ee3505dd1484"
							}
						}
					],
					"id": "7b1cc83f-66c7-497d-9de4-2ea8453bd6b6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/calendars/{{calendar_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendars",
								"{{calendar_id}}"
							]
						},
						"description": "Delete any secondary calendars that have been created. "
					},
					"response": [
						{
							"id": "37ed9e1c-138a-45d2-828e-e2a1385f7a8f",
							"name": "/calendars/freebusy",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/calendars/freebusy?start_time=1409594400&end_time=1409599000&calendar_ids=bbbb1234cccc1234",
									"host": [
										"{{url}}"
									],
									"path": [
										"calendars",
										"freebusy"
									],
									"query": [
										{
											"key": "start_time",
											"value": "1409594400",
											"description": "Unix time stamp (UTC) of the start time for this timeslot"
										},
										{
											"key": "end_time",
											"value": "1409599000",
											"description": "Unix timestamp (UTC) of the end time for this timeslot"
										},
										{
											"key": "calendar_ids",
											"value": "bbbb1234cccc1234",
											"description": "The Nylas calendar_id that this freebusy info applies to"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": "[\n  {\n   \"object\": \"freebusy\",\n   \"calendar_id\": \"bbbb1234cccc1234\",\n   \"time_slots\": [\n      { \n        \"object\": \"timeslot\",\n        \"status\": \"busy\",\n        \"start_time\": 1409594400,\n        \"end_time\": 1409598000\n      },\n      { \n        \"object\": \"timeslot\",\n        \"status\": \"busy\",\n        \"start_time\": 1409598000,\n        \"end_time\": 1409599000\n      }\n    ]\n  }\n]"
						}
					]
				},
				{
					"name": "/calendars/availability",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now()/1000;",
									"var time2 = time1 + 60*60 * 6; // 6 hours",
									"postman.setGlobalVariable(\"start_time\", Math.floor(time1));",
									"postman.setGlobalVariable(\"end_time\", Math.floor(time2));",
									""
								],
								"type": "text/javascript",
								"id": "15278775-25dc-497b-b44c-722300b1efd6"
							}
						}
					],
					"id": "07b86db7-90f9-4698-9f68-ab637b910d3e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"duration_minutes\": {{duration_minutes}},\n\t\"start_time\": {{start_time}},\n\t\"end_time\": {{end_time}},\n\t\"interval_minutes\": {{interval_minutes}},\n\t\"emails\": [\n\t\t\"{{email_string}}\"\n\t],\n\t\"free_busy\": [{\n\t\t\t\"email\": \"{{email_string}}\",\n\t\t\t\"object\": \"free_busy\",\n\t\t\t\"time_slots\": [{\n\t\t\t\t\"start_time\": {{start_time}},\n\t\t\t\t\"end_time\": {{end_time}},\n\t\t\t\t\"object\": \"time_slot\",\n\t\t\t\t\"status\": \"busy\"\n\t\t\t}]\n\t\t},\n\t\t{\n\t\t\t\"email\": \"{{email_string}}\",\n\t\t\t\"object\": \"free_busy\",\n\t\t\t\"time_slots\": [{\n\t\t\t\t\"start_time\": {{start_time}},\n\t\t\t\t\"end_time\": {{end_time}},\n\t\t\t\t\"object\": \"time_slot\",\n\t\t\t\t\"status\": \"busy\"\n\t\t\t}]\n\t\t}\n\t],\n\t\"open_hours\": [{\n\t\t\"emails\": [\n\t\t\t\"{{email_string}}\"\n\t\t],\n\t\t\"days\": [0,1],\n\t\t\"timezone\": \"{{time_zone}}\",\n\t\t\"start\": \"{{start_time_24_hour_clock}}\",\n\t\t\"end\": \"{{end_time_24_hour_clock}}\",\n\t\t\"object_type\": \"open_hours\"\n\t}]\n}"
						},
						"url": {
							"raw": "{{url}}/calendars/availability",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendars",
								"availability"
							]
						},
						"description": "Check multiple calendars to find available time slots for a single meeting."
					},
					"response": [
						{
							"id": "0a188dbd-2228-4efd-84a4-434130aba5ea",
							"name": "Availability - Same Domain",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"duration_minutes\": {{duration_minutes}},\n\t\"start_time\": {{start_time}},\n\t\"end_time\": {{end_time}},\n\t\"interval_minutes\": {{interval_minutes}},\n\t\"emails\": [\n\t\t\"{{email_string}}\"\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/calendars/availability",
									"host": [
										"{{url}}"
									],
									"path": [
										"calendars",
										"availability"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 23 Aug 2022 20:55:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization,Accept,Cache-Control,X-Requested-With,Content-Type,User-Agent,Nylas-SDK-API-Version,X-Nylas-Client-Id"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,PUT,POST,DELETE,OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Nylas-API-Version",
									"value": "2.3"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "X-Unique-Id",
									"value": "8e27c996-e2c5-430c-b51f-c00f7d8af2f7"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "606"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "7"
								},
								{
									"key": "Via",
									"value": "kong/2.8.1.3-enterprise-edition"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "73f6bf3f99cb9ea7-DFW"
								}
							],
							"cookie": [],
							"body": "{\n    \"object\": \"availability\",\n    \"time_slots\": [\n        {\n            \"end\": 1661290200,\n            \"end_time\": 1661290200,\n            \"object\": \"time_slot\",\n            \"start\": 1661288400,\n            \"start_time\": 1661288400,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661290800,\n            \"end_time\": 1661290800,\n            \"object\": \"time_slot\",\n            \"start\": 1661289000,\n            \"start_time\": 1661289000,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661291400,\n            \"end_time\": 1661291400,\n            \"object\": \"time_slot\",\n            \"start\": 1661289600,\n            \"start_time\": 1661289600,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661292000,\n            \"end_time\": 1661292000,\n            \"object\": \"time_slot\",\n            \"start\": 1661290200,\n            \"start_time\": 1661290200,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661292600,\n            \"end_time\": 1661292600,\n            \"object\": \"time_slot\",\n            \"start\": 1661290800,\n            \"start_time\": 1661290800,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661293200,\n            \"end_time\": 1661293200,\n            \"object\": \"time_slot\",\n            \"start\": 1661291400,\n            \"start_time\": 1661291400,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661293800,\n            \"end_time\": 1661293800,\n            \"object\": \"time_slot\",\n            \"start\": 1661292000,\n            \"start_time\": 1661292000,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661294400,\n            \"end_time\": 1661294400,\n            \"object\": \"time_slot\",\n            \"start\": 1661292600,\n            \"start_time\": 1661292600,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661295000,\n            \"end_time\": 1661295000,\n            \"object\": \"time_slot\",\n            \"start\": 1661293200,\n            \"start_time\": 1661293200,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661295600,\n            \"end_time\": 1661295600,\n            \"object\": \"time_slot\",\n            \"start\": 1661293800,\n            \"start_time\": 1661293800,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661296200,\n            \"end_time\": 1661296200,\n            \"object\": \"time_slot\",\n            \"start\": 1661294400,\n            \"start_time\": 1661294400,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661296800,\n            \"end_time\": 1661296800,\n            \"object\": \"time_slot\",\n            \"start\": 1661295000,\n            \"start_time\": 1661295000,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661297400,\n            \"end_time\": 1661297400,\n            \"object\": \"time_slot\",\n            \"start\": 1661295600,\n            \"start_time\": 1661295600,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661298000,\n            \"end_time\": 1661298000,\n            \"object\": \"time_slot\",\n            \"start\": 1661296200,\n            \"start_time\": 1661296200,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661298600,\n            \"end_time\": 1661298600,\n            \"object\": \"time_slot\",\n            \"start\": 1661296800,\n            \"start_time\": 1661296800,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661299200,\n            \"end_time\": 1661299200,\n            \"object\": \"time_slot\",\n            \"start\": 1661297400,\n            \"start_time\": 1661297400,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661299800,\n            \"end_time\": 1661299800,\n            \"object\": \"time_slot\",\n            \"start\": 1661298000,\n            \"start_time\": 1661298000,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661300400,\n            \"end_time\": 1661300400,\n            \"object\": \"time_slot\",\n            \"start\": 1661298600,\n            \"start_time\": 1661298600,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661301000,\n            \"end_time\": 1661301000,\n            \"object\": \"time_slot\",\n            \"start\": 1661299200,\n            \"start_time\": 1661299200,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661301600,\n            \"end_time\": 1661301600,\n            \"object\": \"time_slot\",\n            \"start\": 1661299800,\n            \"start_time\": 1661299800,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661302200,\n            \"end_time\": 1661302200,\n            \"object\": \"time_slot\",\n            \"start\": 1661300400,\n            \"start_time\": 1661300400,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661302800,\n            \"end_time\": 1661302800,\n            \"object\": \"time_slot\",\n            \"start\": 1661301000,\n            \"start_time\": 1661301000,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661303400,\n            \"end_time\": 1661303400,\n            \"object\": \"time_slot\",\n            \"start\": 1661301600,\n            \"start_time\": 1661301600,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661304000,\n            \"end_time\": 1661304000,\n            \"object\": \"time_slot\",\n            \"start\": 1661302200,\n            \"start_time\": 1661302200,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661304600,\n            \"end_time\": 1661304600,\n            \"object\": \"time_slot\",\n            \"start\": 1661302800,\n            \"start_time\": 1661302800,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661305200,\n            \"end_time\": 1661305200,\n            \"object\": \"time_slot\",\n            \"start\": 1661303400,\n            \"start_time\": 1661303400,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661305800,\n            \"end_time\": 1661305800,\n            \"object\": \"time_slot\",\n            \"start\": 1661304000,\n            \"start_time\": 1661304000,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661306400,\n            \"end_time\": 1661306400,\n            \"object\": \"time_slot\",\n            \"start\": 1661304600,\n            \"start_time\": 1661304600,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661307000,\n            \"end_time\": 1661307000,\n            \"object\": \"time_slot\",\n            \"start\": 1661305200,\n            \"start_time\": 1661305200,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661307600,\n            \"end_time\": 1661307600,\n            \"object\": \"time_slot\",\n            \"start\": 1661305800,\n            \"start_time\": 1661305800,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661308200,\n            \"end_time\": 1661308200,\n            \"object\": \"time_slot\",\n            \"start\": 1661306400,\n            \"start_time\": 1661306400,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661308800,\n            \"end_time\": 1661308800,\n            \"object\": \"time_slot\",\n            \"start\": 1661307000,\n            \"start_time\": 1661307000,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661309400,\n            \"end_time\": 1661309400,\n            \"object\": \"time_slot\",\n            \"start\": 1661307600,\n            \"start_time\": 1661307600,\n            \"status\": \"free\"\n        }\n    ]\n}"
						},
						{
							"id": "77df8b7c-d487-4ab3-bb49-906162ccba5a",
							"name": "Availability - Same Domain with Open Hours",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"duration_minutes\": {{duration_minutes}},\n    \"start_time\": {{start_time}},\n    \"end_time\": {{end_time}},\n    \"interval_minutes\": {{interval_minutes}},\n    \"emails\": [\n        \"{{email_string}}\"\n    ],\n    \"open_hours\": [\n        {\n            \"emails\": [\n                \"{{email_string}}\"\n            ],\n            \"days\": [\n                0,\n                1\n            ],\n            \"timezone\": \"{{time_zone}}\",\n            \"start\": \"{{start_time_24_hour_clock}}\",\n            \"end\": \"{{end_time_24_hour_clock}}\",\n            \"object_type\": \"open_hours\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/calendars/availability",
									"host": [
										"{{url}}"
									],
									"path": [
										"calendars",
										"availability"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 23 Aug 2022 21:15:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization,Accept,Cache-Control,X-Requested-With,Content-Type,User-Agent,Nylas-SDK-API-Version,X-Nylas-Client-Id"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,PUT,POST,DELETE,OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Nylas-API-Version",
									"value": "2.3"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "X-Unique-Id",
									"value": "4554b7d8-6e1a-41b6-bbb0-269fb7134391"
								},
								{
									"key": "X-Kong-Upstream-Latency",
									"value": "282"
								},
								{
									"key": "X-Kong-Proxy-Latency",
									"value": "6"
								},
								{
									"key": "Via",
									"value": "kong/2.8.1.3-enterprise-edition"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "73f6ddaccc032839-DFW"
								}
							],
							"cookie": [],
							"body": "{\n    \"object\": \"availability\",\n    \"time_slots\": [\n        {\n            \"end\": 1661292000,\n            \"end_time\": 1661292000,\n            \"object\": \"time_slot\",\n            \"start\": 1661290200,\n            \"start_time\": 1661290200,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661292900,\n            \"end_time\": 1661292900,\n            \"object\": \"time_slot\",\n            \"start\": 1661291100,\n            \"start_time\": 1661291100,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661293800,\n            \"end_time\": 1661293800,\n            \"object\": \"time_slot\",\n            \"start\": 1661292000,\n            \"start_time\": 1661292000,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661294700,\n            \"end_time\": 1661294700,\n            \"object\": \"time_slot\",\n            \"start\": 1661292900,\n            \"start_time\": 1661292900,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661295600,\n            \"end_time\": 1661295600,\n            \"object\": \"time_slot\",\n            \"start\": 1661293800,\n            \"start_time\": 1661293800,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661296500,\n            \"end_time\": 1661296500,\n            \"object\": \"time_slot\",\n            \"start\": 1661294700,\n            \"start_time\": 1661294700,\n            \"status\": \"free\"\n        },\n        {\n            \"end\": 1661297400,\n            \"end_time\": 1661297400,\n            \"object\": \"time_slot\",\n            \"start\": 1661295600,\n            \"start_time\": 1661295600,\n            \"status\": \"free\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "/calendars/availability/consecutive",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now()/1000;",
									"var time2 = time1 + 30*60*60*24; // 30 days",
									"postman.setGlobalVariable(\"now\", parseInt(time1));",
									"postman.setGlobalVariable(\"one_week\", parseInt(time2));"
								],
								"type": "text/javascript",
								"id": "0f3f2015-34bb-4e1c-a88c-e49a0c5dbd3a"
							}
						}
					],
					"id": "f245756a-528e-4b03-bb26-38bb5d4d9509",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"duration_minutes\": {{duration_minutes}},\n    \"start_time\": {{start_time}},\n    \"end_time\": {{end_time}},\n    \"interval_minutes\": {{interval_minutes}},\n    \"emails\": [\n        [\"{{email_string}}\"]\n    ],\n    \"free_busy\": [\n        {\n            \"email\": \"{{email_string}}\",\n            \"object\": \"free_busy\",\n            \"time_slots\": [\n                {\n                    \"start_time\": {{start_time}},\n                    \"end_time\": {{end_time}},\n                    \"object\": \"time_slot\",\n                    \"status\": \"busy\"\n                }\n            ]\n        },\n        {\n            \"email\": \"{{email_string}}\",\n            \"object\": \"free_busy\",\n            \"time_slots\": [\n                {\n                    \"start_time\": {{start_time}},\n                    \"end_time\": {{end_time}},\n                    \"object\": \"time_slot\",\n                    \"status\": \"busy\"\n                }\n            ]\n        }\n    ],\n    \"open_hours\": [\n        {\n            \"emails\": [\n                \"{{email_string}}\"\n            ],\n            \"days\": [0,1],\n            \"timezone\": \"{{time_zone}}\",\n            \"start\": \"{{start_time_24_hour_clock}}\",\n            \"end\": \"{{end_time_24_hour_clock}}\",\n            \"object_type\": \"open_hours\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/calendars/availability/consecutive",
							"host": [
								"{{url}}"
							],
							"path": [
								"calendars",
								"availability",
								"consecutive"
							]
						},
						"description": "Check multiple calendars to find available time slots for a single meeting."
					},
					"response": []
				}
			],
			"id": "dc143fff-2b54-486a-a3e5-9f3d00e94e15"
		},
		{
			"name": "Resources",
			"item": [
				{
					"name": "/resources",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "91b934d1-3e57-432c-9936-a8554243ca5f"
							}
						}
					],
					"id": "380b7918-5e7b-4fd7-a18a-05125a3b54f6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/resources",
							"host": [
								"{{url}}"
							],
							"path": [
								"resources"
							]
						}
					},
					"response": []
				}
			],
			"id": "e8da8124-55a9-4746-8e60-d6675670b2de",
			"description": "Access resource information from GSuite and O365 organizations, like rooms."
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "/events",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now() / 1000;",
									"var time2 = time1 - 60 * 60 * 24 * 7; // 7 days",
									"postman.setGlobalVariable(\"timestamp\", time2);",
									"postman.setGlobalVariable(\"timestamp2\", time1);",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"id": "9fc38925-e7ab-41a6-9dcd-b30bcf966321"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "8d7688b4-8b91-4764-bed5-80e43ac56243"
							}
						}
					],
					"id": "71f24268-808f-424b-8943-98532cab5fc0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/events?calendar_id={{calendar_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "calendar_id",
									"value": "{{calendar_id}}"
								},
								{
									"key": "expand_recurring",
									"value": "true",
									"disabled": true
								},
								{
									"key": "show_cancelled",
									"value": "",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "event_id",
									"value": "",
									"disabled": true
								},
								{
									"key": "calendar_id",
									"value": "",
									"disabled": true
								},
								{
									"key": "title",
									"value": "",
									"disabled": true
								},
								{
									"key": "description",
									"value": "",
									"disabled": true
								},
								{
									"key": "location",
									"value": "",
									"disabled": true
								},
								{
									"key": "starts_before",
									"value": "",
									"disabled": true
								},
								{
									"key": "starts_after",
									"value": "",
									"disabled": true
								},
								{
									"key": "ends_before",
									"value": "",
									"disabled": true
								},
								{
									"key": "ends_after",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_key",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_value",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_pair",
									"value": "",
									"disabled": true
								},
								{
									"key": "busy",
									"value": "",
									"disabled": true
								},
								{
									"key": "count",
									"value": "",
									"disabled": true
								},
								{
									"key": "metadata_search",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/events/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								],
								"id": "9541fca8-f65b-4241-9b44-0b1935635a89"
							}
						}
					],
					"id": "e8f5b009-881d-495c-97f0-3aa1f7cbcc7a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/events/{{event_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"events",
								"{{event_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/events",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now()/1000;",
									"var time2 = time1 + 30*60; // 30 min",
									"postman.setGlobalVariable(\"timestamp\", time1);",
									"postman.setGlobalVariable(\"timestamp2\", time2);",
									""
								],
								"type": "text/javascript",
								"id": "7f3cc8ec-53e1-4dde-a991-4134f4c19658"
							}
						}
					],
					"id": "762037b5-3a70-47e3-b456-753aa22a9f81",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"Example Event\",\n    \"when\" : {\n        \"start_time\": {{timestamp}},\n        \"end_time\": {{timestamp2}}\n    },\n    \"location\": \"Coffee Shop\",\n    \"calendar_id\": \"{{calendar_id}}\",\n    \"participants\": [\n        {\n            \"email\": \"nylatest2@nylatest.onmicrosoft.com\",\n            \"name\": \"Sarah Nylanaut\"\n        }\n    ],\n        \"metadata\":{\n        \"hello\":\"goodbye\"\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/events?notify_participants=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "notify_participants",
									"value": "true"
								}
							]
						},
						"description": "Creates an event. Note that notify participants is set to true, so an email will be sent to invitees."
					},
					"response": []
				},
				{
					"name": "/events/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "262d070b-9d31-40d0-9018-e4ee822a4734"
							}
						}
					],
					"id": "77d8cfd6-0bd3-4552-a3a3-493f17ea762d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"Friday meeting\",\n    \"when\" : {\n        \"start_time\": {{timestamp}},\n        \"end_time\": {{timestamp2}}\n    },\n    \"location\": \"Nylas HQ\",\n    \"calendar_id\": \"{{calendar_id}}\",\n    \"participants\": [\n        {\n            \"email\": \"{{email}}\",\n            \"name\": \"Name Change\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/events/{{event_id}}?notify_participants=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"events",
								"{{event_id}}"
							],
							"query": [
								{
									"key": "notify_participants",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/events/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"event_id\", \"set_id_in_postman_prerequest_script\");"
								],
								"id": "2d5175fe-4106-4b14-90c8-4245d8101015"
							}
						}
					],
					"id": "702a9f6f-a8ee-46da-912b-6fca11fa087f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/events/{{event_id}}?notify_participants=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"events",
								"{{event_id}}"
							],
							"query": [
								{
									"key": "notify_participants",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/send-rsvp",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"event_id\", \"set_id_in_postman_prerequest_script\");"
								],
								"id": "1634c10b-c4ab-4acd-beab-8d42b3f41d94"
							}
						}
					],
					"id": "af8f0586-a6b6-4e2f-afab-188d2afec32d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event_id\": \"{{event_id}}\",\n    \"status\": \"yes\",\n    \"comment\": \"Excited to come!\"\n}"
						},
						"url": {
							"raw": "{{url}}/send-rsvp/",
							"host": [
								"{{url}}"
							],
							"path": [
								"send-rsvp",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Recurring Event",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var time1 = Date.now()/1000;",
									"var time2 = time1 + 30*60; // 30 min",
									"postman.setGlobalVariable(\"timestamp\", time1);",
									"postman.setGlobalVariable(\"timestamp2\", time2);",
									""
								],
								"type": "text/javascript",
								"id": "f45a5fa2-83e0-4a70-a7df-fdce41be5ef9"
							}
						}
					],
					"id": "787579a6-cf87-4fd8-b0c3-993337c6e3af",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"Example Event\",\n    \"when\" : {\n        \"start_time\": {{timestamp}},\n        \"end_time\": {{timestamp2}}\n    },\n    \"location\": \"Coffee Shop\",\n    \"calendar_id\": \"{{calendar_id}}\",\n    \"participants\": [\n        {\n            \"email\": \"nylatest2@nylatest.onmicrosoft.com\",\n            \"name\": \"Sarah Nylanaut\"\n        }\n    ],\n    \"recurrence\": {\n\t\t\"rrule\": [\n\t\t\t \"RRULE:FREQ=WEEKLY;BYDAY=WE;INTERVAL=2\"\n\t\t],\n\t\"timezone\": \"America/New_York\"\n\t}\t\n\n}"
						},
						"url": {
							"raw": "{{url}}/events?notify_participants=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "notify_participants",
									"value": "true"
								}
							]
						},
						"description": "Creates a recurring event by adding the recurrence object. See https://docs.nylas.com/reference#event-subobjects for more info."
					},
					"response": []
				}
			],
			"id": "c0db1c6f-f484-4de0-ac98-3534a74dbb3f"
		},
		{
			"name": "Contacts",
			"item": [
				{
					"name": "/contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.environment.set(\"contact_id\", jsonData[0][\"id\"]);"
								],
								"type": "text/javascript",
								"id": "f80f445b-3aec-4866-8e44-4ee357930727"
							}
						}
					],
					"id": "6f6ff3ed-c174-44fa-8682-bdfd81adeb84",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/contacts",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"disabled": true
								},
								{
									"key": "street_address",
									"value": "",
									"disabled": true
								},
								{
									"key": "postal_code",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"disabled": true
								},
								{
									"key": "country",
									"value": "",
									"disabled": true
								},
								{
									"key": "source",
									"value": "address_book",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/contacts/groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.environment.set(\"contact_id\", jsonData[0][\"id\"]);"
								],
								"type": "text/javascript",
								"id": "bae87e75-e458-48aa-a67f-ca738c63ca7e"
							}
						}
					],
					"id": "0f87858a-5786-48ae-9579-bb99b8667db5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/contacts/groups",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts",
								"groups"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"disabled": true
								},
								{
									"key": "street_address",
									"value": "",
									"disabled": true
								},
								{
									"key": "postal_code",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"disabled": true
								},
								{
									"key": "country",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/contacts/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "2e58cb63-aec3-4478-9f12-07261671360a"
							}
						}
					],
					"id": "9993454a-ec10-42b1-b031-3db4a9572bce",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/contacts/{{contact_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"disabled": true
								},
								{
									"key": "street_address",
									"value": "",
									"disabled": true
								},
								{
									"key": "postal_code",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"disabled": true
								},
								{
									"key": "country",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"type": "text/javascript",
								"id": "25d43252-168d-4c58-b456-a9b8ab559e8a"
							}
						}
					],
					"id": "7aa4609b-5377-44cd-9ef2-8918f07a01e3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"emails\": [{\n  \t\"type\": \"work\",\n  \t\"email\": \"created@gmail.com\"\n  }\n  ],\n  \"im_addresses\": [{\n  \t\"type\": \"aim\",\n  \t\"im_address\": \"snake\"\n  }],\n  \"physical_addresses\": [{\n  \t\"format\": \"structured\",\n  \t\"type\": \"work\",\n  \t\"street_address\": \"1235 Street\",\n  \t\"city\": \"San Francisco\",\n  \t\"postal_code\": \"94103\",\n  \t\"state\": \"CA\",\n  \t\"country\": \"USA\"\n  } ],\n  \"phone_numbers\": [\n  \t{\n  \t\t\"type\":\"home\",\n  \t\t\"number\": \"123-123-1234\"\n  \t}],\n  \t\"group\": \"bmeg4pze0qxcjxrndor26v7lr\"\n}"
						},
						"url": {
							"raw": "{{url}}/contacts",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"disabled": true
								},
								{
									"key": "street_address",
									"value": "",
									"disabled": true
								},
								{
									"key": "postal_code",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"disabled": true
								},
								{
									"key": "country",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "ff4a46db-31b6-464e-9e0a-0b8a84607bdd"
							}
						}
					],
					"id": "b444e7d5-b4e2-45f5-a628-bdf18bdf441d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"emails\": [{\n  \t\"type\": \"work\",\n  \t\"email\": \"{{email}}\"\n  }\n  ],\n  \"im_addresses\": [{\n  \t\"type\": \"aim\",\n  \t\"im_address\": \"snake\"\n  }],\n  \"physical_addresses\": [{\n  \t\"format\": \"structured\",\n  \t\"type\": \"work\",\n  \t\"street_address\": \"1235 Street\",\n  \t\"city\": \"San Francisco\",\n  \t\"postal_code\": \"94103\",\n  \t\"state\": \"CA\",\n  \t\"country\": \"USA\"\n  } ],\n  \"phone_numbers\": [\n  \t{\n  \t\t\"type\":\"home\",\n  \t\t\"number\": \"123-123-1234\"\n  \t}],\n  \"given_name\": \"asdf\",\n  \"middle_name\": \"asdf\",\n  \"surname\": \"asdf\",\n  \"birthday\": \"asdf\",\n  \"suffix\": \"asdf\",\n  \"nickname\": \"asdf\",\n  \"company_name\": \"asdf\",\n  \"job_title\": \"asdf\",\n  \"manager_name\": \"asdf\",\n  \"office_location\": \"asdf\",\n  \"notes\": \"asdf\"\n}"
						},
						"url": {
							"raw": "{{url}}/contacts/{{contact_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"disabled": true
								},
								{
									"key": "street_address",
									"value": "",
									"disabled": true
								},
								{
									"key": "postal_code",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"disabled": true
								},
								{
									"key": "country",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "53080297-e485-4594-8269-716ffe279393"
							}
						}
					],
					"id": "5462279c-fbb7-4d4d-acef-7ac651c78161",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/contacts/{{contact_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"disabled": true
								},
								{
									"key": "street_address",
									"value": "",
									"disabled": true
								},
								{
									"key": "postal_code",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"disabled": true
								},
								{
									"key": "country",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/contacts/:id/picture",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"id": "28fe0796-3786-4f63-9914-f1c6d6fa77fd"
							}
						}
					],
					"id": "d6907b6a-c63d-4ef5-8586-2af2729fa315",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/contacts/{{contact_id}}/picture",
							"host": [
								"{{url}}"
							],
							"path": [
								"contacts",
								"{{contact_id}}",
								"picture"
							],
							"query": [
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "",
									"disabled": true
								},
								{
									"key": "street_address",
									"value": "",
									"disabled": true
								},
								{
									"key": "postal_code",
									"value": "",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"disabled": true
								},
								{
									"key": "country",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "6adb9c3c-d1db-457f-8f37-09580fe516e4"
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "/messages/search",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"id": "4800c049-bb93-4b47-b20b-0419cd197df8"
							}
						}
					],
					"id": "e0badaa8-efdf-4023-a537-a3191428aadd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/messages/search?q=test",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/threads/search",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"id": "d2947070-65bc-442e-8bf7-c9045fab3d16"
							}
						}
					],
					"id": "9fe805bb-f345-41b4-8bba-c4c7cfdf869d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/threads/search?q=test",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "test"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "b12cbe44-ce69-4ce1-ab20-7b3dc11a5475"
		},
		{
			"name": "Webhooks",
			"item": [
				{
					"name": "/webhooks/",
					"id": "31d764f5-cf2b-4a8c-86c2-717f08eb8139",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/a/{{client_id}}/webhooks/",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"webhooks",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/webhooks/",
					"id": "cece0acd-b70b-4ecc-bbbd-48fcef186563",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"callback_url\": \"https://084eb929.ngrok.io/webook\",\n\t\"triggers\": [\"message.opened\"],\n\t\"state\": \"active\"\n}"
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}/webhooks/",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"webhooks",
								""
							]
						},
						"description": "Creates a new webhook for the specified client ID"
					},
					"response": [
						{
							"id": "7bcee219-98fb-48a9-b3bc-48449a4db2cb",
							"name": "/webhooks/",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"callback_url\": \"https://084eb929.ngrok.io/webhook\",\n\t\"triggers\": [\"message.opened\"],\n\t\"state\": \"active\"\n}"
								},
								"url": {
									"raw": "{{url}}/a/{{client_id}}/webhooks/",
									"host": [
										"{{url}}"
									],
									"path": [
										"a",
										"{{client_id}}",
										"webhooks",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "JSON",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Tue, 23 Jul 2019 21:06:19 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "244"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src https: 'unsafe-eval' 'unsafe-inline'; object-src 'none'"
								}
							],
							"cookie": [],
							"body": "{\n    \"application_id\": \"6yvh3ynadnwqtumyfper72svf\",\n    \"callback_url\": \"https://084eb929.ngrok.io/webhook\",\n    \"id\": \"6cclep8i8aqknqnjqxsgs3ycw\",\n    \"state\": \"active\",\n    \"triggers\": [\n        \"message.opened\"\n    ],\n    \"version\": \"2.0\"\n}"
						}
					]
				},
				{
					"name": "/webhooks/{id}",
					"id": "8f4f5199-bb6f-4ea8-9bf2-e1ccd783c01f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/a/{{client_id}}/webhooks/{{webhook_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"webhooks",
								"{{webhook_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/webhooks/{id}",
					"id": "8543365b-e87f-4859-95c3-0667e7d7dba2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"state\": \"inactive\"\n}"
						},
						"url": {
							"raw": "{{url}}/a/{{client_id}}/webhooks/{{webhook_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"webhooks",
								"{{webhook_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/webhooks/{id}",
					"id": "be5f5cf3-b93c-4452-b90f-daa542eaa095",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/a/{{client_id}}/webhooks/{{webhook_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"a",
								"{{client_id}}",
								"webhooks",
								"{{webhook_id}}"
							]
						}
					},
					"response": [
						{
							"id": "dcc257c6-e939-4de8-a1ef-31b77e75a4a2",
							"name": "Delete Webhook ID",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/a/{{client_id}}/webhooks/{{webhook_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"a",
										"{{client_id}}",
										"webhooks",
										"{{webhook_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "JSON",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Tue, 23 Jul 2019 21:17:30 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "4"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src https: 'unsafe-eval' 'unsafe-inline'; object-src 'none'"
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				}
			],
			"id": "751b488d-8fc1-434f-84fd-75d86c2cffd1"
		},
		{
			"name": "Deltas",
			"item": [
				{
					"name": "/delta/latest_cursor",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Response contains cursor\"] = responseBody.has(\"cursor\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Cursor value exists\"] = jsonData.cursor.length > 0;",
									"",
									"postman.setEnvironmentVariable(\"cursor_id\", jsonData.cursor);"
								],
								"id": "e7ad1b01-f780-49cd-b7cd-730bdd8a2575"
							}
						}
					],
					"id": "f35a40ad-6e93-4e53-b050-4c5336edd09c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/delta/latest_cursor",
							"host": [
								"{{url}}"
							],
							"path": [
								"delta",
								"latest_cursor"
							]
						}
					},
					"response": []
				},
				{
					"name": "/delta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Response contains cursor start\"] = responseBody.has(\"cursor_start\");",
									"tests[\"Response contains cursor end\"] = responseBody.has(\"cursor_end\");",
									"tests[\"Response contains deltas\"] = responseBody.has(\"deltas\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Cursor value exists\"] = jsonData.cursor_start.length > 0;",
									"pm.environment.set(\"cursor_id\", jsonData.cursor_end);",
									""
								],
								"type": "text/javascript",
								"id": "62cefe74-be74-46fe-833d-1e132d255c16"
							}
						}
					],
					"id": "217d79b2-5186-4556-b069-ea4bd7113262",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/delta?cursor={{cursor_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"delta"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/delta/longpoll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Response contains cursor start\"] = responseBody.has(\"cursor_start\");",
									"tests[\"Response contains cursor end\"] = responseBody.has(\"cursor_end\");",
									"tests[\"Response contains deltas\"] = responseBody.has(\"deltas\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Cursor value exists\"] = jsonData.cursor_start.length > 0;",
									"pm.environment.set(\"cursor_id\", jsonData.cursor_end);",
									""
								],
								"type": "text/javascript",
								"id": "8914bd7e-0b7b-47f4-b1ec-7295b7fd2bec"
							}
						}
					],
					"id": "9f0fd62a-b58c-47c8-9d23-e6c80c89474a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/delta/longpoll?cursor={{cursor_id}}&timeout=1",
							"host": [
								"{{url}}"
							],
							"path": [
								"delta",
								"longpoll"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor_id}}"
								},
								{
									"key": "timeout",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/delta/streaming",
					"id": "a48f2e21-a0de-48da-9abd-48c29ad717be",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/delta/streaming?cursor={{cursor_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"delta",
								"streaming"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/delta with filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Response contains cursor\"] = responseBody.has(\"cursor_start\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Cursor value exists\"] = jsonData.cursor_start.length > 0;",
									""
								],
								"id": "9fa5c387-35fa-40a9-8eb2-8e1b87f4929f"
							}
						}
					],
					"id": "9b0e62aa-38db-4ecc-bcbd-85c7f2024311",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/delta?cursor={{cursor_id}}&include_types=draft,thread",
							"host": [
								"{{url}}"
							],
							"path": [
								"delta"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{cursor_id}}"
								},
								{
									"key": "include_types",
									"value": "draft,thread"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "59dd3aec-8918-4620-bed9-dc4037175777"
		},
		{
			"name": "Filters",
			"item": [
				{
					"name": "/threads with filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "dcd277ee-2c13-41c2-92dd-d97ca5ce8cb6"
							}
						}
					],
					"id": "a7dd1f38-ea4c-4fc3-a85c-44d3289782ac",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/threads?unread=true&any_email={{email}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads"
							],
							"query": [
								{
									"key": "unread",
									"value": "true"
								},
								{
									"key": "any_email",
									"value": "{{email}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "d9ade896-b570-4768-aad7-bec8631b3a70"
		},
		{
			"name": "Pagination",
			"item": [
				{
					"name": "/threads limit and offset",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");"
								],
								"id": "0dbd19e6-3e02-4a87-8738-45c3f996d5d1"
							}
						}
					],
					"id": "be96538e-9f5d-4d78-a1a3-f8c1efa8ea80",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/threads?limit=2&offset=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								},
								{
									"key": "offset",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "f9c69970-0acc-499b-a382-500c62b5c41c"
		},
		{
			"name": "Views",
			"item": [
				{
					"name": "/messages view ids",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"message_id\", jsonData[0].id);"
								],
								"id": "ffba07b1-b622-451a-9205-8f391e7ae9a8"
							}
						}
					],
					"id": "cbfab10b-b68a-4915-b91e-0132b616333a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/messages?view=ids",
							"host": [
								"{{url}}"
							],
							"path": [
								"messages"
							],
							"query": [
								{
									"key": "view",
									"value": "ids"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/threads count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"message_id\", jsonData[0].id);"
								],
								"id": "38ee0a15-be57-4151-a809-d65731058d7a"
							}
						}
					],
					"id": "9cedc1a4-7148-4bde-b4f4-6f5c75b35727",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/threads?view=count",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads"
							],
							"query": [
								{
									"key": "view",
									"value": "count"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/threads view expanded",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"account_id\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"message_id\", jsonData[0].id);"
								],
								"id": "2f4cbee7-6cb1-46e6-a332-6b2cc0764154"
							}
						}
					],
					"id": "efb05a31-f9b8-4050-b7eb-47de4924e758",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/threads?view=expanded",
							"host": [
								"{{url}}"
							],
							"path": [
								"threads"
							],
							"query": [
								{
									"key": "view",
									"value": "expanded"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "4fda55c0-b7cf-4e3f-b84b-0ac29f8733f4"
		},
		{
			"name": "Job Status",
			"item": [
				{
					"name": "/job-statuses/id",
					"id": "9fafcb6f-8b49-42d8-8d58-14c2fc18c933",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/job-statuses/{job_status_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"job-statuses",
								"{job_status_id}"
							]
						},
						"description": "Get the job status for a specific job_status_id. States for this can be successful, pending, or failed. "
					},
					"response": []
				},
				{
					"name": "/job-statuses",
					"id": "e4c7d93f-9458-4d4c-8884-eb6f9dc81f4f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/job-statuses",
							"host": [
								"{{url}}"
							],
							"path": [
								"job-statuses"
							]
						},
						"description": "A list of all job status by ID. "
					},
					"response": []
				}
			],
			"id": "f0064318-9f56-4b68-b28f-17885380b1f2"
		},
		{
			"name": "Neural APIs",
			"item": [
				{
					"name": "Conversation",
					"item": [
						{
							"name": "Conversation",
							"id": "fca52860-25f2-4ea3-bc40-dda9aaafe619",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message_id\": [\n    \"{{message_ids}}\"\n  ],\n  \"ignore_links\": true,\n  \"ignore_images\": true,\n  \"ignore_tables\": true,\n  \"remove_conclusion_phrases\": true,\n  \"images_as_markdown\": true\n}"
								},
								"url": {
									"raw": "{{url}}/neural/conversation",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"conversation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Conversation Feedback",
							"id": "a0d8956b-7901-4d63-bf27-42eccc7a41c9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message_id\": \"{{message_id}}\"\n}"
								},
								"url": {
									"raw": "{{url}}/neural/conversation/feedback",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"conversation",
										"feedback"
									]
								}
							},
							"response": []
						}
					],
					"id": "322a637b-b416-4c0f-838c-9d31f1e42753"
				},
				{
					"name": "Categorize",
					"item": [
						{
							"name": "Categorize",
							"id": "7429cffa-5a84-4973-bac8-4a09a5e53ba6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message_id\": [\n    \"{{array_of_message_ids}}\"\n  ],\n  \"only_category\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/neural/categorize",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"categorize"
									]
								}
							},
							"response": []
						},
						{
							"name": "Categorize Feedback",
							"id": "e326fe45-20f9-4eb1-8341-06fc3e21b7b2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message_id\": \"{{message_id}}\",\n  \"category\": \"{{message_category}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/neural/categorize/feedback",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"categorize",
										"feedback"
									]
								},
								"description": "Category can be:\n* `feed`\n* `conversation`"
							},
							"response": []
						}
					],
					"id": "c1eb638f-d33e-4bab-8ae1-4219271302bd"
				},
				{
					"name": "Signature",
					"item": [
						{
							"name": "Signature",
							"id": "3e3cfff3-4e35-42b1-ab96-d3c8265fcbce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message_id\": [\n    \"{{message_id}}\"\n  ],\n  \"ignore_links\": true,\n  \"ignore_images\": true,\n  \"ignore_tables\": true,\n  \"remove_conclusion_phrases\": true,\n  \"images_as_markdown\": true,\n  \"parse_contacts\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/neural/signature",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"signature"
									]
								}
							},
							"response": []
						},
						{
							"name": "Signature Feedback",
							"id": "1c1d1b36-7b72-443e-8ebd-4598b7cf3fd0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message_id\":\"{{message_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/neural/signature/feedback",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"signature",
										"feedback"
									]
								}
							},
							"response": []
						}
					],
					"id": "a1e2af17-086e-486b-a578-9a86c427a1e9"
				},
				{
					"name": "Optical Charecter Recognition",
					"item": [
						{
							"name": "OCR",
							"id": "d492cd60-abaf-4b81-a1bf-06ef689ffed4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n     \"file_id\": \"{{file_id}}\",\n     \"pages\": [{{array_of_page_numbers}}]\n}"
								},
								"url": {
									"raw": "{{url}}/neural/ocr",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"ocr"
									]
								}
							},
							"response": []
						},
						{
							"name": "OCR Feedback",
							"id": "d2ec58ee-ce45-47d0-ac7b-d6c95258c594",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"file_id\":\"{{file_id}}\"\n}"
								},
								"url": {
									"raw": "{{url}}/neural/ocr/feedback",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"ocr",
										"feedback"
									]
								}
							},
							"response": []
						}
					],
					"id": "52ed540e-3903-48c9-8eaf-f47f9157d53a"
				},
				{
					"name": "Sentiment",
					"item": [
						{
							"name": "PUT Sentiment Analysis",
							"id": "1a82921b-b3e5-4410-bbb6-f687958b3c73",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"text\": \"{{text}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/neural/sentiment",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"sentiment"
									]
								}
							},
							"response": [
								{
									"id": "5c3dcf18-2f9d-468f-b08d-51e0c8facb32",
									"name": "PUT Sentiment Analysis",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"message_id\": [\n    \"{{message_id}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/neural/sentiment",
											"host": [
												"{{url}}"
											],
											"path": [
												"neural",
												"sentiment"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"_postman_previewtype": "html",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Sentiment Feedback",
							"id": "f29323d8-e713-4c84-9fff-bb5f3daee156",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sentiment\": \"positive\",\n  \"overwrite\": true,\n  \"message_id\": \"{{message_id}}\"\n}"
								},
								"url": {
									"raw": "{{url}}/neural/sentiment/feedback",
									"host": [
										"{{url}}"
									],
									"path": [
										"neural",
										"sentiment",
										"feedback"
									]
								}
							},
							"response": []
						}
					],
					"id": "9e0e922d-05de-4eb7-a2bb-96168a93af25"
				}
			],
			"id": "9e5390fe-1c14-4ef1-91a8-ed6e2d161161"
		},
		{
			"name": "Scheduler",
			"item": [
				{
					"name": "Return All Scheduling Pages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "b56e2a51-0a6e-438c-b664-40c4a3c63a65"
							}
						}
					],
					"id": "5e4d8c64-d9eb-4fb6-b4fd-4974f7b96506",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.schedule.nylas.com/manage/pages",
							"protocol": "https",
							"host": [
								"api",
								"schedule",
								"nylas",
								"com"
							],
							"path": [
								"manage",
								"pages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Scheduling Page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"id": "c8e5926a-49dd-4e88-800a-3015724b8b14"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const slug = pm.variables.replaceIn('{{$randomLoremSlug}}');",
									"const reminderMessage = pm.variables.replaceIn('{{$randomLoremWords}}');",
									"const messageTitle = pm.variables.replaceIn('{{$randomProductName}}');",
									"",
									"pm.globals.set(\"url_slug\", slug);",
									"pm.globals.set(\"reminder_message_text\", reminderMessage);",
									"pm.globals.set(\"reminder_message_title\", messageTitle)"
								],
								"type": "text/javascript",
								"id": "c5f3d00e-88d3-468f-9216-04857b871b5e"
							}
						}
					],
					"id": "67954896-cb5a-4d42-b88c-6ee90c548bb1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"access_tokens\": [\"{{access_token}}\"],\n    \"config\": {\n        \"booking\": {\n            \"additional_fields\": [],\n            \"additional_guests_hidden\": false,\n            \"available_days_in_future\": 21,\n            \"calendar_invite_to_guests\": true,\n            \"confirmation_emails_to_guests\": true,\n            \"confirmation_emails_to_host\": true,\n            \"confirmation_method\": \"automatic\",\n            \"min_booking_notice\": 15,\n            \"min_buffer\": 0,\n            \"min_cancellation_notice\": 15,\n            \"name_field_hidden\": false,\n            \"opening_hours\": [\n                {\n                    \"account_id\": \"{{account_id}}\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"start\": \"09:00\",\n                    \"end\": \"17:00\"\n                }\n            ]\n        },\n        \"calendar_ids\": {\n            \"{{account_id}}\": {\n                \"availability\": [\n                    \"{{calendar_id}}\"\n                ],\n                \"booking\": \"{{calendar_id}}\"\n            }\n        },\n        \"event\": {\n            \"capacity\": 1,\n            \"duration\": 30,\n            \"location\": \"Zoom Link\",\n            \"title\": \"Scheduler Example - {{reminder_message_title}}\"\n        },\n        \"locale\": \"en\",\n        \"timezone\": \"America/Denver\",\n        \"reminders\": [\n        {\n            \"delivery_method\": \"email\",\n            \"delivery_recipient\": \"both\",\n            \"time_before_event\": \"30\",\n            \"email_subject\": \"Reminder - {{reminder_message_title}} about to start\"\n        }\n        ]\n    },\n    \"name\": \"Scheduler Example - {{reminder_message_title}}\",\n    \"slug\": \"{{url_slug}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.schedule.nylas.com/manage/pages",
							"protocol": "https",
							"host": [
								"api",
								"schedule",
								"nylas",
								"com"
							],
							"path": [
								"manage",
								"pages"
							]
						}
					},
					"response": [
						{
							"id": "7f47702b-55ff-4a21-8c51-ac86d8c75e21",
							"name": "Create a Scheduling Page - Round Robin - Max Fairness",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_tokens\": [\"{{access_token}}\", \"{{round_robin_access_token}}\"],\n    \"config\": {\n        \"booking\": {\n            \"additional_fields\": [],\n            \"additional_guests_hidden\": false,\n            \"available_days_in_future\": 21,\n            \"calendar_invite_to_guests\": true,\n            \"confirmation_emails_to_guests\": true,\n            \"confirmation_emails_to_host\": true,\n            \"confirmation_method\": \"automatic\",\n            \"min_booking_notice\": 0,\n            \"min_buffer\": 0,\n            \"min_cancellation_notice\": 0,\n            \"name_field_hidden\": false,\n            \"opening_hours\": [\n                {\n                    \"account_id\": \"{{account_id}}\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"20:30\",\n                    \"start\": \"07:00\"\n                },\n                {\n                    \"account_id\": \"{{round_robin_account_id}}\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\",\n                        \"S\",\n                        \"U\"\n                    ],\n                    \"end\": \"20:30\",\n                    \"start\": \"10:00\"\n                }\n            ],\n            \"scheduling_method\": \"round-robin-maximize-fairness\"\n        },\n        \"calendar_ids\": {\n            \"{{account_id}}\": {\n                \"availability\": [\n                    \"{{calendar_id}}\"\n                ],\n                \"booking\": \"{{calendar_id}}\"\n            },\n            \"{{round_robin_account_id}}\": {\n                \"availability\": [\n                    \"{{round_robin_calendar_id}}\"\n                ],\n                \"booking\": \"{{round_robin_calendar_id}}\"\n            }\n        },\n        \"event\": {\n            \"capacity\": 10,\n            \"duration\": 60,\n            \"location\": \"Zoom Link\",\n            \"title\": \"Round Robin Meeting - Max Fairness\"\n        },\n        \"locale\": \"en\",\n        \"timezone\": \"America/Los_Angeles\"\n    },\n    \"name\": \"Round Robin Meeting - Max Fairness\",\n    \"slug\": \"round-robin-max-fairness\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.schedule.nylas.com/manage/pages",
									"protocol": "https",
									"host": [
										"api",
										"schedule",
										"nylas",
										"com"
									],
									"path": [
										"manage",
										"pages"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"id": "f8a2ad1e-87aa-40f3-bfbb-fd67578a47b5",
							"name": "Create a Scheduling Page - Round Robin Fairness - 4 ppl",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_tokens\": [\"{{access_token}}\", \"{{round_robin_access_token}}\", \"{{round_robin_access_token2}}\", \"{{round_robin_access_token3}}\"],\n    \"config\": {\n        \"booking\": {\n            \"additional_fields\": [],\n            \"additional_guests_hidden\": false,\n            \"available_days_in_future\": 21,\n            \"calendar_invite_to_guests\": true,\n            \"confirmation_emails_to_guests\": true,\n            \"confirmation_emails_to_host\": true,\n            \"confirmation_method\": \"automatic\",\n            \"min_booking_notice\": 0,\n            \"min_buffer\": 0,\n            \"min_cancellation_notice\": 0,\n            \"name_field_hidden\": false,\n            \"opening_hours\": [\n                {\n                    \"account_id\": \"{{account_id}}\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                },\n                {\n                    \"account_id\": \"{{round_robin_account_id}}\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                },\n                {\n                    \"account_id\": \"{{round_robin_account_id2}}\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                },\n                {\n                    \"account_id\": \"{{round_robin_account_id3}}\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                }\n            ],\n            \"scheduling_method\": \"round-robin-maximize-fairness\"\n        },\n        \"calendar_ids\": {\n            \"{{account_id}}\": {\n                \"availability\": [\n                    \"{{calendar_id}}\"\n                ],\n                \"booking\": \"{{calendar_id}}\"\n            },\n            \"{{round_robin_account_id}}\": {\n                \"availability\": [\n                    \"{{round_robin_calendar_id}}\"\n                ],\n                \"booking\": \"{{round_robin_calendar_id}}\"\n            },\n            \"{{round_robin_account_id2}}\": {\n                \"availability\": [\n                    \"{{round_robin_calendar_id2}}\"\n                ],\n                \"booking\": \"{{round_robin_calendar_id2}}\"\n            },\n            \"{{round_robin_account_id3}}\": {\n                \"availability\": [\n                    \"{{round_robin_calendar_id3}}\"\n                ],\n                \"booking\": \"{{round_robin_calendar_id3}}\"\n            }\n        },\n        \"event\": {\n            \"capacity\": 1,\n            \"duration\": 30,\n            \"location\": \"Zoom Link\",\n            \"title\": \"Round Robin Meeting - Max Fairness\"\n        },\n        \"locale\": \"en\",\n        \"timezone\": \"America/Los_Angeles\"\n    },\n    \"name\": \"Round Robin Meeting - Max Fairness\",\n    \"slug\": \"round-robin-4ppl-max-fairness\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.schedule.nylas.com/manage/pages",
									"protocol": "https",
									"host": [
										"api",
										"schedule",
										"nylas",
										"com"
									],
									"path": [
										"manage",
										"pages"
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 11 Jan 2022 22:58:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "3593"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Permissions-Policy",
									"value": "interest-cohort=()"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Security-Policy",
									"value": "img-src 'self' data:; default-src 'self' 'unsafe-inline';"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800; includeSubDomains"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "6cc1c0503cb94955-STL"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_tokens\": [\n        {\n            \"account_email\": \"maxverstappen443@gmail.com\",\n            \"account_name\": \"Max Verstappen\"\n        },\n        {\n            \"account_email\": \"fastlewis443@gmail.com\",\n            \"account_name\": \"Lewis Hamilton\"\n        },\n        {\n            \"account_email\": \"ferraricharles443@gmail.com\",\n            \"account_name\": \"Charles Leclerc\"\n        },\n        {\n            \"account_email\": \"ferraricarlos443@gmail.com\",\n            \"account_name\": \"Carlos Sainz\"\n        }\n    ],\n    \"app_client_id\": \"28w95fajm5a24om779nqaapk5\",\n    \"app_organization_id\": 122496,\n    \"config\": {\n        \"appearance\": {\n            \"color\": \"#0068D3\",\n            \"company_name\": \"\",\n            \"logo\": \"\",\n            \"show_autoschedule\": true,\n            \"show_nylas_branding\": false,\n            \"show_timezone_options\": true,\n            \"show_week_view\": true,\n            \"submit_text\": \"Submit\"\n        },\n        \"booking\": {\n            \"additional_fields\": [],\n            \"additional_guests_hidden\": false,\n            \"available_days_in_future\": 21,\n            \"calendar_invite_to_guests\": true,\n            \"confirmation_emails_to_guests\": true,\n            \"confirmation_emails_to_host\": true,\n            \"confirmation_method\": \"automatic\",\n            \"min_booking_notice\": 0,\n            \"min_buffer\": 0,\n            \"min_cancellation_notice\": 0,\n            \"name_field_hidden\": false,\n            \"opening_hours\": [\n                {\n                    \"account_id\": \"8vyhsgduvyq6cmuc2g604rvj3\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                },\n                {\n                    \"account_id\": \"qodmzobd6fcjrrasb9vc8ieo\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                },\n                {\n                    \"account_id\": \"60zlocdpa1yqso979ic9ceid5\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                },\n                {\n                    \"account_id\": \"a4z6bvtrfu3057vowk4ad93ds\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                }\n            ],\n            \"scheduling_method\": \"round-robin-maximize-fairness\"\n        },\n        \"calendar_ids\": {\n            \"60zlocdpa1yqso979ic9ceid5\": {\n                \"availability\": [\n                    \"advih2z3zlrrgnc8450cbgn4f\"\n                ],\n                \"booking\": \"advih2z3zlrrgnc8450cbgn4f\"\n            },\n            \"8vyhsgduvyq6cmuc2g604rvj3\": {\n                \"availability\": [\n                    \"4n7p7557115lhjygk7x83cckv\"\n                ],\n                \"booking\": \"4n7p7557115lhjygk7x83cckv\"\n            },\n            \"a4z6bvtrfu3057vowk4ad93ds\": {\n                \"availability\": [\n                    \"7jywnqennkdj2vcm7xtmnowds\"\n                ],\n                \"booking\": \"7jywnqennkdj2vcm7xtmnowds\"\n            },\n            \"qodmzobd6fcjrrasb9vc8ieo\": {\n                \"availability\": [\n                    \"9yfcfr9akjjs5dhdr6ppv15f6\"\n                ],\n                \"booking\": \"9yfcfr9akjjs5dhdr6ppv15f6\"\n            }\n        },\n        \"event\": {\n            \"capacity\": 1,\n            \"duration\": 30,\n            \"location\": \"Zoom Link\",\n            \"title\": \"Round Robin Meeting - Max Fairness\"\n        },\n        \"features\": {\n            \"collective_meetings\": false\n        },\n        \"locale\": \"en\",\n        \"reminders\": [],\n        \"timezone\": \"America/Los_Angeles\"\n    },\n    \"created_at\": \"2022-01-11\",\n    \"edit_token\": \"7utnDH0Amo5mIaF1vb8KfuFQbMIfuAwE\",\n    \"id\": 1425052,\n    \"modified_at\": \"2022-01-11\",\n    \"name\": \"Round Robin Meeting - Max Fairness\",\n    \"slug\": \"round-robin-4ppl-max-fairness\"\n}"
						},
						{
							"id": "45572484-70c3-4e42-801b-8247fb7f2333",
							"name": "Create a Scheduling Page - Basic 30 min",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_tokens\": [\"{{access_token}}\"],\n    \"config\": {\n        \"booking\": {\n            \"additional_fields\": [],\n            \"additional_guests_hidden\": false,\n            \"available_days_in_future\": 21,\n            \"calendar_invite_to_guests\": true,\n            \"confirmation_emails_to_guests\": true,\n            \"confirmation_emails_to_host\": true,\n            \"confirmation_method\": \"automatic\",\n            \"min_booking_notice\": 15,\n            \"min_buffer\": 0,\n            \"min_cancellation_notice\": 15,\n            \"name_field_hidden\": false,\n            \"opening_hours\": [\n                {\n                    \"account_id\": \"{{account_id}}\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"start\": \"09:00\",\n                    \"end\": \"17:00\"\n                }\n            ]\n        },\n        \"calendar_ids\": {\n            \"{{account_id}}\": {\n                \"availability\": [\n                    \"{{calendar_id}}\"\n                ],\n                \"booking\": \"{{calendar_id}}\"\n            }\n        },\n        \"event\": {\n            \"capacity\": 1,\n            \"duration\": 30,\n            \"location\": \"Zoom Link\",\n            \"title\": \"Scheduler Example - {{reminder_message_title}}\"\n        },\n        \"locale\": \"en\",\n        \"timezone\": \"America/Denver\",\n        \"reminders\": [\n        {\n            \"delivery_method\": \"email\",\n            \"delivery_recipient\": \"both\",\n            \"time_before_event\": \"30\",\n            \"email_subject\": \"Reminder - {{reminder_message_title}} about to start\"\n        }\n        ]\n    },\n    \"name\": \"Scheduler Example - {{reminder_message_title}}\",\n    \"slug\": \"{{url_slug}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.schedule.nylas.com/manage/pages",
									"protocol": "https",
									"host": [
										"api",
										"schedule",
										"nylas",
										"com"
									],
									"path": [
										"manage",
										"pages"
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 07 Feb 2022 17:36:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "2230"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Permissions-Policy",
									"value": "interest-cohort=()"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Security-Policy",
									"value": "img-src 'self' data:; default-src 'self' 'unsafe-inline';"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800; includeSubDomains"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin-when-cross-origin"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "6d9e61cefdffc7b5-DEN"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token_infos\": [\n        {\n            \"account_email\": \"adam.b@nylas.com\",\n            \"account_name\": \"Adam Bauman\"\n        }\n    ],\n    \"app_client_id\": \"28w95fajm5a24om779nqaapk5\",\n    \"app_organization_id\": 122496,\n    \"config\": {\n        \"appearance\": {\n            \"color\": \"#0068D3\",\n            \"company_name\": \"\",\n            \"logo\": \"\",\n            \"show_autoschedule\": true,\n            \"show_nylas_branding\": false,\n            \"show_timezone_options\": true,\n            \"show_week_view\": true,\n            \"submit_text\": \"Submit\"\n        },\n        \"booking\": {\n            \"additional_fields\": [],\n            \"additional_guests_hidden\": false,\n            \"available_days_in_future\": 21,\n            \"calendar_invite_to_guests\": true,\n            \"confirmation_emails_to_guests\": true,\n            \"confirmation_emails_to_host\": true,\n            \"confirmation_method\": \"automatic\",\n            \"min_booking_notice\": 0,\n            \"min_buffer\": 0,\n            \"min_cancellation_notice\": 0,\n            \"name_field_hidden\": false,\n            \"opening_hours\": [\n                {\n                    \"account_id\": \"31do88a3z9voyc2y6jm8udnby\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                }\n            ],\n            \"scheduling_method\": \"round-robin-maximize-availability\"\n        },\n        \"calendar_ids\": {\n            \"31do88a3z9voyc2y6jm8udnby\": {\n                \"availability\": [\n                    \"4o2zuj77j1duoh9gaz19lr8im\"\n                ],\n                \"booking\": \"4o2zuj77j1duoh9gaz19lr8im\"\n            }\n        },\n        \"event\": {\n            \"capacity\": 1,\n            \"duration\": 30,\n            \"location\": \"Zoom Link\",\n            \"title\": \"Scheduler Example - Practical Plastic Computer\"\n        },\n        \"features\": {\n            \"collective_meetings\": false\n        },\n        \"locale\": \"en\",\n        \"reminders\": [\n            {\n                \"delivery_method\": \"email\",\n                \"delivery_recipient\": \"both\",\n                \"email_subject\": \"Reminder - Practical Plastic Computer about to start\",\n                \"time_before_event\": 30\n            }\n        ],\n        \"timezone\": \"America/Denver\"\n    },\n    \"created_at\": \"2022-02-07\",\n    \"edit_token\": \"Mn46lJoeU_WBrt1H5aSN0LdJZkHDHOLr\",\n    \"id\": 1722747,\n    \"modified_at\": \"2022-02-07\",\n    \"name\": \"Scheduler Example - Practical Plastic Computer\",\n    \"slug\": \"ea-necessitatibus-non\"\n}"
						}
					]
				},
				{
					"name": "Return a Scheduling Page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "f25fb044-23f0-4752-a46a-a9e8bd1c0572"
							}
						}
					],
					"id": "1e87a96c-1aba-4d80-9eb0-5857e4c4b248",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "page_id",
								"value": "883644",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.schedule.nylas.com/manage/pages/{{page_id}}",
							"protocol": "https",
							"host": [
								"api",
								"schedule",
								"nylas",
								"com"
							],
							"path": [
								"manage",
								"pages",
								"{{page_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Scheduling Page",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "d67a1f15-e890-4785-93e5-18b161c74dbd"
							}
						}
					],
					"id": "37dd8c81-5a63-4d50-b9fa-cedf6d053522",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"access_token_infos\": [\n        {\n            \"account_email\": \"adam.b@nylas.com\",\n            \"account_name\": \"Adam Bauman\"\n        }\n    ],\n    \"app_client_id\": \"28w95fajm5a24om779nqaapk5\",\n    \"app_organization_id\": 122496,\n    \"config\": {\n        \"appearance\": {\n            \"color\": \"#0068D3\",\n            \"company_name\": \"\",\n            \"logo\": \"\",\n            \"show_autoschedule\": false,\n            \"show_nylas_branding\": false,\n            \"show_timezone_options\": true,\n            \"show_week_view\": true,\n            \"submit_text\": \"Submit\"\n        },\n        \"booking\": {\n            \"additional_fields\": [],\n            \"additional_guests_hidden\": false,\n            \"available_days_in_future\": 21,\n            \"calendar_invite_to_guests\": true,\n            \"confirmation_emails_to_guests\": true,\n            \"confirmation_emails_to_host\": true,\n            \"confirmation_method\": \"external\",\n            \"min_booking_notice\": 0,\n            \"min_buffer\": 0,\n            \"min_cancellation_notice\": 0,\n            \"name_field_hidden\": false,\n            \"opening_hours\": [\n                {\n                    \"account_id\": \"31do88a3z9voyc2y6jm8udnby\",\n                    \"days\": [\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"R\",\n                        \"F\"\n                    ],\n                    \"end\": \"17:00\",\n                    \"start\": \"09:00\"\n                }\n            ],\n            \"scheduling_method\": \"round-robin-maximize-availability\"\n        },\n        \"calendar_ids\": {\n            \"31do88a3z9voyc2y6jm8udnby\": {\n                \"availability\": [\n                    \"4o2zuj77j1duoh9gaz19lr8im\"\n                ],\n                \"booking\": \"4o2zuj77j1duoh9gaz19lr8im\"\n            }\n        },\n        \"event\": {\n            \"capacity\": 1,\n            \"duration\": 30,\n            \"location\": \"Zoom Link\",\n            \"title\": \"Scheduler Example - Generic Concrete Hat\"\n        },\n        \"features\": {\n            \"collective_meetings\": false\n        },\n        \"locale\": \"en\",\n        \"reminders\": [\n            {\n                \"delivery_method\": \"email\",\n                \"delivery_recipient\": \"both\",\n                \"email_subject\": \"\",\n                \"time_before_event\": 30\n            }\n        ],\n        \"timezone\": \"America/Denver\"\n    },\n    \"created_at\": \"2022-02-07\",\n    \"edit_token\": \"JKbbyAi76WljCHQ_c-lZiARsK_PG1I-6\",\n    \"id\": 1722702,\n    \"modified_at\": \"2022-02-07\",\n    \"name\": \"Scheduler Example - Generic Concrete Hat\",\n    \"slug\": \"ut-non-et\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.schedule.nylas.com/manage/pages/{{page_id}}",
							"protocol": "https",
							"host": [
								"api",
								"schedule",
								"nylas",
								"com"
							],
							"path": [
								"manage",
								"pages",
								"{{page_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Scheduling Page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "1cee92bc-ee99-46ae-a5e6-51f683670bcb"
							}
						}
					],
					"id": "0c358d92-3deb-4707-b4aa-a4cf53ba0f05",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.schedule.nylas.com/manage/pages/{{page_id}}",
							"protocol": "https",
							"host": [
								"api",
								"schedule",
								"nylas",
								"com"
							],
							"path": [
								"manage",
								"pages",
								"{{page_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Available Calendars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "b46acff2-a4ae-4ac9-8c97-84135feb5d0e"
							}
						}
					],
					"id": "b60b6d55-4f58-4949-9d5f-5ed147ed4c9c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.schedule.nylas.com/manage/pages/{{page_id}}/calendars",
							"protocol": "https",
							"host": [
								"api",
								"schedule",
								"nylas",
								"com"
							],
							"path": [
								"manage",
								"pages",
								"{{page_id}}",
								"calendars"
							]
						}
					},
					"response": []
				}
			],
			"id": "7549d0d2-3ef2-47a0-a2f8-69b269d87bff"
		},
		{
			"name": "Provider Detection",
			"item": [
				{
					"name": "Detect provider based on given email address",
					"id": "0e69812b-f636-41e9-9c02-e53bc6e960e7",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {},
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\": \"{{client_secret}}\",\n  \"email_address\": \"{{$randomEmail}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/connect/detect-provider",
							"host": [
								"{{url}}"
							],
							"path": [
								"connect",
								"detect-provider"
							]
						},
						"description": "Use this endpoint to detect which provider an email uses. If we are able to detect the provider, we'll return `detected:true`. If we are not able to determine the provider, we'll return `detected:false`.\n\nIf `detected:false`, then it's either IMAP or Microsoft Exchange Server. You can also ignore `is_imap` if `detected:false`. Use the results to determine the provider to pass into the settings object for [native authentication](https://developer.nylas.com/docs/api/#post/connect/authorize)."
					},
					"response": []
				}
			],
			"id": "497df768-e5da-49ab-bbd6-4d337229c131"
		},
		{
			"name": "Integrations",
			"item": [
				{
					"name": "Create Integration - Zoom",
					"id": "2af9bf59-927b-4291-bbd1-c08c8f5c0388",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n  \"provider\": \"zoom\",\n  \"settings\": {\n    \"client_id\": \"{{client_id}}\",\n    \"client_secret\": \"{{client_secret}}\"\n  },\n  \"redirect_uris\": [\n    \"https://beta.us.nylas.com/connect/callback\"\n  ],\n  \"expires_in\": 1209600\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://beta.us.nylas.com/connect/integrations",
							"protocol": "https",
							"host": [
								"beta",
								"us",
								"nylas",
								"com"
							],
							"path": [
								"connect",
								"integrations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Integrations",
					"id": "6592b379-8a37-4590-8505-80e3bb56cce0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://beta.us.nylas.com/connect/integrations",
							"protocol": "https",
							"host": [
								"beta",
								"us",
								"nylas",
								"com"
							],
							"path": [
								"connect",
								"integrations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Integration - Zoom",
					"id": "1deeedc6-55f6-44a3-863f-164a5bc15905",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://beta.us.nylas.com/connect/integrations/zoom",
							"protocol": "https",
							"host": [
								"beta",
								"us",
								"nylas",
								"com"
							],
							"path": [
								"connect",
								"integrations",
								"zoom"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Integration",
					"id": "5984324e-a97b-46f3-bc60-9179526f2a08",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://beta.us.nylas.com/connect/integrations/zoom",
							"protocol": "https",
							"host": [
								"beta",
								"us",
								"nylas",
								"com"
							],
							"path": [
								"connect",
								"integrations",
								"zoom"
							]
						}
					},
					"response": []
				}
			],
			"id": "7014ec14-c504-4c89-b1c7-9cb000356ed2"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "cc47eb81-6193-42de-beb4-cde7e874a953"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "a31798ad-5a4a-453c-b1f3-0d76cad7bdea"
			}
		}
	]
}